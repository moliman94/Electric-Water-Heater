

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jul 19 19:44:27 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	intentry,global,class=CODE,delta=2
    76                           	psect	text61,local,class=CODE,merge=1,delta=2
    77                           	psect	text62,local,class=CODE,merge=1,delta=2
    78                           	psect	functab,global,class=ENTRY,delta=2
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    80                           	dabs	1,0x7E,2
    81  0000                     
    82                           ; Version 2.20
    83                           ; Generated 12/02/2020 GMT
    84                           ; 
    85                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC16F877A Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0008                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0088                     	;# 
   216  0089                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  018C                     	;# 
   355  018D                     	;# 
   356  0000                     	;# 
   357  0001                     	;# 
   358  0002                     	;# 
   359  0003                     	;# 
   360  0004                     	;# 
   361  0005                     	;# 
   362  0006                     	;# 
   363  0007                     	;# 
   364  0008                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001D                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  0081                     	;# 
   392  0085                     	;# 
   393  0086                     	;# 
   394  0087                     	;# 
   395  0088                     	;# 
   396  0089                     	;# 
   397  008C                     	;# 
   398  008D                     	;# 
   399  008E                     	;# 
   400  0091                     	;# 
   401  0092                     	;# 
   402  0093                     	;# 
   403  0094                     	;# 
   404  0098                     	;# 
   405  0099                     	;# 
   406  009C                     	;# 
   407  009D                     	;# 
   408  009E                     	;# 
   409  009F                     	;# 
   410  010C                     	;# 
   411  010D                     	;# 
   412  010E                     	;# 
   413  010F                     	;# 
   414  018C                     	;# 
   415  018D                     	;# 
   416  0000                     	;# 
   417  0001                     	;# 
   418  0002                     	;# 
   419  0003                     	;# 
   420  0004                     	;# 
   421  0005                     	;# 
   422  0006                     	;# 
   423  0007                     	;# 
   424  0008                     	;# 
   425  0009                     	;# 
   426  000A                     	;# 
   427  000B                     	;# 
   428  000C                     	;# 
   429  000D                     	;# 
   430  000E                     	;# 
   431  000E                     	;# 
   432  000F                     	;# 
   433  0010                     	;# 
   434  0011                     	;# 
   435  0012                     	;# 
   436  0013                     	;# 
   437  0014                     	;# 
   438  0015                     	;# 
   439  0015                     	;# 
   440  0016                     	;# 
   441  0017                     	;# 
   442  0018                     	;# 
   443  0019                     	;# 
   444  001A                     	;# 
   445  001B                     	;# 
   446  001B                     	;# 
   447  001C                     	;# 
   448  001D                     	;# 
   449  001E                     	;# 
   450  001F                     	;# 
   451  0081                     	;# 
   452  0085                     	;# 
   453  0086                     	;# 
   454  0087                     	;# 
   455  0088                     	;# 
   456  0089                     	;# 
   457  008C                     	;# 
   458  008D                     	;# 
   459  008E                     	;# 
   460  0091                     	;# 
   461  0092                     	;# 
   462  0093                     	;# 
   463  0094                     	;# 
   464  0098                     	;# 
   465  0099                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  009F                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476  0000                     	;# 
   477  0001                     	;# 
   478  0002                     	;# 
   479  0003                     	;# 
   480  0004                     	;# 
   481  0005                     	;# 
   482  0006                     	;# 
   483  0007                     	;# 
   484  0008                     	;# 
   485  0009                     	;# 
   486  000A                     	;# 
   487  000B                     	;# 
   488  000C                     	;# 
   489  000D                     	;# 
   490  000E                     	;# 
   491  000E                     	;# 
   492  000F                     	;# 
   493  0010                     	;# 
   494  0011                     	;# 
   495  0012                     	;# 
   496  0013                     	;# 
   497  0014                     	;# 
   498  0015                     	;# 
   499  0015                     	;# 
   500  0016                     	;# 
   501  0017                     	;# 
   502  0018                     	;# 
   503  0019                     	;# 
   504  001A                     	;# 
   505  001B                     	;# 
   506  001B                     	;# 
   507  001C                     	;# 
   508  001D                     	;# 
   509  001E                     	;# 
   510  001F                     	;# 
   511  0081                     	;# 
   512  0085                     	;# 
   513  0086                     	;# 
   514  0087                     	;# 
   515  0088                     	;# 
   516  0089                     	;# 
   517  008C                     	;# 
   518  008D                     	;# 
   519  008E                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0093                     	;# 
   523  0094                     	;# 
   524  0098                     	;# 
   525  0099                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  009F                     	;# 
   530  010C                     	;# 
   531  010D                     	;# 
   532  010E                     	;# 
   533  010F                     	;# 
   534  018C                     	;# 
   535  018D                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  000E                     	;# 
   551  000E                     	;# 
   552  000F                     	;# 
   553  0010                     	;# 
   554  0011                     	;# 
   555  0012                     	;# 
   556  0013                     	;# 
   557  0014                     	;# 
   558  0015                     	;# 
   559  0015                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001B                     	;# 
   567  001C                     	;# 
   568  001D                     	;# 
   569  001E                     	;# 
   570  001F                     	;# 
   571  0081                     	;# 
   572  0085                     	;# 
   573  0086                     	;# 
   574  0087                     	;# 
   575  0088                     	;# 
   576  0089                     	;# 
   577  008C                     	;# 
   578  008D                     	;# 
   579  008E                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0098                     	;# 
   585  0099                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  009F                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  010F                     	;# 
   594  018C                     	;# 
   595  018D                     	;# 
   596  0000                     	;# 
   597  0001                     	;# 
   598  0002                     	;# 
   599  0003                     	;# 
   600  0004                     	;# 
   601  0005                     	;# 
   602  0006                     	;# 
   603  0007                     	;# 
   604  0008                     	;# 
   605  0009                     	;# 
   606  000A                     	;# 
   607  000B                     	;# 
   608  000C                     	;# 
   609  000D                     	;# 
   610  000E                     	;# 
   611  000E                     	;# 
   612  000F                     	;# 
   613  0010                     	;# 
   614  0011                     	;# 
   615  0012                     	;# 
   616  0013                     	;# 
   617  0014                     	;# 
   618  0015                     	;# 
   619  0015                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001B                     	;# 
   627  001C                     	;# 
   628  001D                     	;# 
   629  001E                     	;# 
   630  001F                     	;# 
   631  0081                     	;# 
   632  0085                     	;# 
   633  0086                     	;# 
   634  0087                     	;# 
   635  0088                     	;# 
   636  0089                     	;# 
   637  008C                     	;# 
   638  008D                     	;# 
   639  008E                     	;# 
   640  0091                     	;# 
   641  0092                     	;# 
   642  0093                     	;# 
   643  0094                     	;# 
   644  0098                     	;# 
   645  0099                     	;# 
   646  009C                     	;# 
   647  009D                     	;# 
   648  009E                     	;# 
   649  009F                     	;# 
   650  010C                     	;# 
   651  010D                     	;# 
   652  010E                     	;# 
   653  010F                     	;# 
   654  018C                     	;# 
   655  018D                     	;# 
   656  0000                     	;# 
   657  0001                     	;# 
   658  0002                     	;# 
   659  0003                     	;# 
   660  0004                     	;# 
   661  0005                     	;# 
   662  0006                     	;# 
   663  0007                     	;# 
   664  0008                     	;# 
   665  0009                     	;# 
   666  000A                     	;# 
   667  000B                     	;# 
   668  000C                     	;# 
   669  000D                     	;# 
   670  000E                     	;# 
   671  000E                     	;# 
   672  000F                     	;# 
   673  0010                     	;# 
   674  0011                     	;# 
   675  0012                     	;# 
   676  0013                     	;# 
   677  0014                     	;# 
   678  0015                     	;# 
   679  0015                     	;# 
   680  0016                     	;# 
   681  0017                     	;# 
   682  0018                     	;# 
   683  0019                     	;# 
   684  001A                     	;# 
   685  001B                     	;# 
   686  001B                     	;# 
   687  001C                     	;# 
   688  001D                     	;# 
   689  001E                     	;# 
   690  001F                     	;# 
   691  0081                     	;# 
   692  0085                     	;# 
   693  0086                     	;# 
   694  0087                     	;# 
   695  0088                     	;# 
   696  0089                     	;# 
   697  008C                     	;# 
   698  008D                     	;# 
   699  008E                     	;# 
   700  0091                     	;# 
   701  0092                     	;# 
   702  0093                     	;# 
   703  0094                     	;# 
   704  0098                     	;# 
   705  0099                     	;# 
   706  009C                     	;# 
   707  009D                     	;# 
   708  009E                     	;# 
   709  009F                     	;# 
   710  010C                     	;# 
   711  010D                     	;# 
   712  010E                     	;# 
   713  010F                     	;# 
   714  018C                     	;# 
   715  018D                     	;# 
   716  0000                     	;# 
   717  0001                     	;# 
   718  0002                     	;# 
   719  0003                     	;# 
   720  0004                     	;# 
   721  0005                     	;# 
   722  0006                     	;# 
   723  0007                     	;# 
   724  0008                     	;# 
   725  0009                     	;# 
   726  000A                     	;# 
   727  000B                     	;# 
   728  000C                     	;# 
   729  000D                     	;# 
   730  000E                     	;# 
   731  000E                     	;# 
   732  000F                     	;# 
   733  0010                     	;# 
   734  0011                     	;# 
   735  0012                     	;# 
   736  0013                     	;# 
   737  0014                     	;# 
   738  0015                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0017                     	;# 
   742  0018                     	;# 
   743  0019                     	;# 
   744  001A                     	;# 
   745  001B                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  001D                     	;# 
   749  001E                     	;# 
   750  001F                     	;# 
   751  0081                     	;# 
   752  0085                     	;# 
   753  0086                     	;# 
   754  0087                     	;# 
   755  0088                     	;# 
   756  0089                     	;# 
   757  008C                     	;# 
   758  008D                     	;# 
   759  008E                     	;# 
   760  0091                     	;# 
   761  0092                     	;# 
   762  0093                     	;# 
   763  0094                     	;# 
   764  0098                     	;# 
   765  0099                     	;# 
   766  009C                     	;# 
   767  009D                     	;# 
   768  009E                     	;# 
   769  009F                     	;# 
   770  010C                     	;# 
   771  010D                     	;# 
   772  010E                     	;# 
   773  010F                     	;# 
   774  018C                     	;# 
   775  018D                     	;# 
   776  0000                     	;# 
   777  0001                     	;# 
   778  0002                     	;# 
   779  0003                     	;# 
   780  0004                     	;# 
   781  0005                     	;# 
   782  0006                     	;# 
   783  0007                     	;# 
   784  0008                     	;# 
   785  0009                     	;# 
   786  000A                     	;# 
   787  000B                     	;# 
   788  000C                     	;# 
   789  000D                     	;# 
   790  000E                     	;# 
   791  000E                     	;# 
   792  000F                     	;# 
   793  0010                     	;# 
   794  0011                     	;# 
   795  0012                     	;# 
   796  0013                     	;# 
   797  0014                     	;# 
   798  0015                     	;# 
   799  0015                     	;# 
   800  0016                     	;# 
   801  0017                     	;# 
   802  0018                     	;# 
   803  0019                     	;# 
   804  001A                     	;# 
   805  001B                     	;# 
   806  001B                     	;# 
   807  001C                     	;# 
   808  001D                     	;# 
   809  001E                     	;# 
   810  001F                     	;# 
   811  0081                     	;# 
   812  0085                     	;# 
   813  0086                     	;# 
   814  0087                     	;# 
   815  0088                     	;# 
   816  0089                     	;# 
   817  008C                     	;# 
   818  008D                     	;# 
   819  008E                     	;# 
   820  0091                     	;# 
   821  0092                     	;# 
   822  0093                     	;# 
   823  0094                     	;# 
   824  0098                     	;# 
   825  0099                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009E                     	;# 
   829  009F                     	;# 
   830  010C                     	;# 
   831  010D                     	;# 
   832  010E                     	;# 
   833  010F                     	;# 
   834  018C                     	;# 
   835  018D                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0008                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000D                     	;# 
   850  000E                     	;# 
   851  000E                     	;# 
   852  000F                     	;# 
   853  0010                     	;# 
   854  0011                     	;# 
   855  0012                     	;# 
   856  0013                     	;# 
   857  0014                     	;# 
   858  0015                     	;# 
   859  0015                     	;# 
   860  0016                     	;# 
   861  0017                     	;# 
   862  0018                     	;# 
   863  0019                     	;# 
   864  001A                     	;# 
   865  001B                     	;# 
   866  001B                     	;# 
   867  001C                     	;# 
   868  001D                     	;# 
   869  001E                     	;# 
   870  001F                     	;# 
   871  0081                     	;# 
   872  0085                     	;# 
   873  0086                     	;# 
   874  0087                     	;# 
   875  0088                     	;# 
   876  0089                     	;# 
   877  008C                     	;# 
   878  008D                     	;# 
   879  008E                     	;# 
   880  0091                     	;# 
   881  0092                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0098                     	;# 
   885  0099                     	;# 
   886  009C                     	;# 
   887  009D                     	;# 
   888  009E                     	;# 
   889  009F                     	;# 
   890  010C                     	;# 
   891  010D                     	;# 
   892  010E                     	;# 
   893  010F                     	;# 
   894  018C                     	;# 
   895  018D                     	;# 
   896  0000                     	;# 
   897  0001                     	;# 
   898  0002                     	;# 
   899  0003                     	;# 
   900  0004                     	;# 
   901  0005                     	;# 
   902  0006                     	;# 
   903  0007                     	;# 
   904  0008                     	;# 
   905  0009                     	;# 
   906  000A                     	;# 
   907  000B                     	;# 
   908  000C                     	;# 
   909  000D                     	;# 
   910  000E                     	;# 
   911  000E                     	;# 
   912  000F                     	;# 
   913  0010                     	;# 
   914  0011                     	;# 
   915  0012                     	;# 
   916  0013                     	;# 
   917  0014                     	;# 
   918  0015                     	;# 
   919  0015                     	;# 
   920  0016                     	;# 
   921  0017                     	;# 
   922  0018                     	;# 
   923  0019                     	;# 
   924  001A                     	;# 
   925  001B                     	;# 
   926  001B                     	;# 
   927  001C                     	;# 
   928  001D                     	;# 
   929  001E                     	;# 
   930  001F                     	;# 
   931  0081                     	;# 
   932  0085                     	;# 
   933  0086                     	;# 
   934  0087                     	;# 
   935  0088                     	;# 
   936  0089                     	;# 
   937  008C                     	;# 
   938  008D                     	;# 
   939  008E                     	;# 
   940  0091                     	;# 
   941  0092                     	;# 
   942  0093                     	;# 
   943  0094                     	;# 
   944  0098                     	;# 
   945  0099                     	;# 
   946  009C                     	;# 
   947  009D                     	;# 
   948  009E                     	;# 
   949  009F                     	;# 
   950  010C                     	;# 
   951  010D                     	;# 
   952  010E                     	;# 
   953  010F                     	;# 
   954  018C                     	;# 
   955  018D                     	;# 
   956  0000                     	;# 
   957  0001                     	;# 
   958  0002                     	;# 
   959  0003                     	;# 
   960  0004                     	;# 
   961  0005                     	;# 
   962  0006                     	;# 
   963  0007                     	;# 
   964  0008                     	;# 
   965  0009                     	;# 
   966  000A                     	;# 
   967  000B                     	;# 
   968  000C                     	;# 
   969  000D                     	;# 
   970  000E                     	;# 
   971  000E                     	;# 
   972  000F                     	;# 
   973  0010                     	;# 
   974  0011                     	;# 
   975  0012                     	;# 
   976  0013                     	;# 
   977  0014                     	;# 
   978  0015                     	;# 
   979  0015                     	;# 
   980  0016                     	;# 
   981  0017                     	;# 
   982  0018                     	;# 
   983  0019                     	;# 
   984  001A                     	;# 
   985  001B                     	;# 
   986  001B                     	;# 
   987  001C                     	;# 
   988  001D                     	;# 
   989  001E                     	;# 
   990  001F                     	;# 
   991  0081                     	;# 
   992  0085                     	;# 
   993  0086                     	;# 
   994  0087                     	;# 
   995  0088                     	;# 
   996  0089                     	;# 
   997  008C                     	;# 
   998  008D                     	;# 
   999  008E                     	;# 
  1000  0091                     	;# 
  1001  0092                     	;# 
  1002  0093                     	;# 
  1003  0094                     	;# 
  1004  0098                     	;# 
  1005  0099                     	;# 
  1006  009C                     	;# 
  1007  009D                     	;# 
  1008  009E                     	;# 
  1009  009F                     	;# 
  1010  010C                     	;# 
  1011  010D                     	;# 
  1012  010E                     	;# 
  1013  010F                     	;# 
  1014  018C                     	;# 
  1015  018D                     	;# 
  1016  0000                     	;# 
  1017  0001                     	;# 
  1018  0002                     	;# 
  1019  0003                     	;# 
  1020  0004                     	;# 
  1021  0005                     	;# 
  1022  0006                     	;# 
  1023  0007                     	;# 
  1024  0008                     	;# 
  1025  0009                     	;# 
  1026  000A                     	;# 
  1027  000B                     	;# 
  1028  000C                     	;# 
  1029  000D                     	;# 
  1030  000E                     	;# 
  1031  000E                     	;# 
  1032  000F                     	;# 
  1033  0010                     	;# 
  1034  0011                     	;# 
  1035  0012                     	;# 
  1036  0013                     	;# 
  1037  0014                     	;# 
  1038  0015                     	;# 
  1039  0015                     	;# 
  1040  0016                     	;# 
  1041  0017                     	;# 
  1042  0018                     	;# 
  1043  0019                     	;# 
  1044  001A                     	;# 
  1045  001B                     	;# 
  1046  001B                     	;# 
  1047  001C                     	;# 
  1048  001D                     	;# 
  1049  001E                     	;# 
  1050  001F                     	;# 
  1051  0081                     	;# 
  1052  0085                     	;# 
  1053  0086                     	;# 
  1054  0087                     	;# 
  1055  0088                     	;# 
  1056  0089                     	;# 
  1057  008C                     	;# 
  1058  008D                     	;# 
  1059  008E                     	;# 
  1060  0091                     	;# 
  1061  0092                     	;# 
  1062  0093                     	;# 
  1063  0094                     	;# 
  1064  0098                     	;# 
  1065  0099                     	;# 
  1066  009C                     	;# 
  1067  009D                     	;# 
  1068  009E                     	;# 
  1069  009F                     	;# 
  1070  010C                     	;# 
  1071  010D                     	;# 
  1072  010E                     	;# 
  1073  010F                     	;# 
  1074  018C                     	;# 
  1075  018D                     	;# 
  1076  0000                     	;# 
  1077  0001                     	;# 
  1078  0002                     	;# 
  1079  0003                     	;# 
  1080  0004                     	;# 
  1081  0005                     	;# 
  1082  0006                     	;# 
  1083  0007                     	;# 
  1084  0008                     	;# 
  1085  0009                     	;# 
  1086  000A                     	;# 
  1087  000B                     	;# 
  1088  000C                     	;# 
  1089  000D                     	;# 
  1090  000E                     	;# 
  1091  000E                     	;# 
  1092  000F                     	;# 
  1093  0010                     	;# 
  1094  0011                     	;# 
  1095  0012                     	;# 
  1096  0013                     	;# 
  1097  0014                     	;# 
  1098  0015                     	;# 
  1099  0015                     	;# 
  1100  0016                     	;# 
  1101  0017                     	;# 
  1102  0018                     	;# 
  1103  0019                     	;# 
  1104  001A                     	;# 
  1105  001B                     	;# 
  1106  001B                     	;# 
  1107  001C                     	;# 
  1108  001D                     	;# 
  1109  001E                     	;# 
  1110  001F                     	;# 
  1111  0081                     	;# 
  1112  0085                     	;# 
  1113  0086                     	;# 
  1114  0087                     	;# 
  1115  0088                     	;# 
  1116  0089                     	;# 
  1117  008C                     	;# 
  1118  008D                     	;# 
  1119  008E                     	;# 
  1120  0091                     	;# 
  1121  0092                     	;# 
  1122  0093                     	;# 
  1123  0094                     	;# 
  1124  0098                     	;# 
  1125  0099                     	;# 
  1126  009C                     	;# 
  1127  009D                     	;# 
  1128  009E                     	;# 
  1129  009F                     	;# 
  1130  010C                     	;# 
  1131  010D                     	;# 
  1132  010E                     	;# 
  1133  010F                     	;# 
  1134  018C                     	;# 
  1135  018D                     	;# 
  1136  0000                     	;# 
  1137  0001                     	;# 
  1138  0002                     	;# 
  1139  0003                     	;# 
  1140  0004                     	;# 
  1141  0005                     	;# 
  1142  0006                     	;# 
  1143  0007                     	;# 
  1144  0008                     	;# 
  1145  0009                     	;# 
  1146  000A                     	;# 
  1147  000B                     	;# 
  1148  000C                     	;# 
  1149  000D                     	;# 
  1150  000E                     	;# 
  1151  000E                     	;# 
  1152  000F                     	;# 
  1153  0010                     	;# 
  1154  0011                     	;# 
  1155  0012                     	;# 
  1156  0013                     	;# 
  1157  0014                     	;# 
  1158  0015                     	;# 
  1159  0015                     	;# 
  1160  0016                     	;# 
  1161  0017                     	;# 
  1162  0018                     	;# 
  1163  0019                     	;# 
  1164  001A                     	;# 
  1165  001B                     	;# 
  1166  001B                     	;# 
  1167  001C                     	;# 
  1168  001D                     	;# 
  1169  001E                     	;# 
  1170  001F                     	;# 
  1171  0081                     	;# 
  1172  0085                     	;# 
  1173  0086                     	;# 
  1174  0087                     	;# 
  1175  0088                     	;# 
  1176  0089                     	;# 
  1177  008C                     	;# 
  1178  008D                     	;# 
  1179  008E                     	;# 
  1180  0091                     	;# 
  1181  0092                     	;# 
  1182  0093                     	;# 
  1183  0094                     	;# 
  1184  0098                     	;# 
  1185  0099                     	;# 
  1186  009C                     	;# 
  1187  009D                     	;# 
  1188  009E                     	;# 
  1189  009F                     	;# 
  1190  010C                     	;# 
  1191  010D                     	;# 
  1192  010E                     	;# 
  1193  010F                     	;# 
  1194  018C                     	;# 
  1195  018D                     	;# 
  1196                           
  1197                           	psect	idataBANK1
  1198  15B9                     __pidataBANK1:
  1199                           
  1200                           ;initializer for _SSD_Data
  1201  15B9  343F               	retlw	63
  1202  15BA  343F               	retlw	63
  1203                           
  1204                           ;initializer for _System_state
  1205  15BB  3401               	retlw	1
  1206                           
  1207                           ;initializer for __1st_RUNTIME_CHECK_PATTERN
  1208  15BC  34BC               	retlw	188
  1209                           
  1210                           	psect	strings
  1211  1000                     __pstrings:
  1212  1000                     stringtab:
  1213  1000                     __stringtab:
  1214  1000                     stringcode:	
  1215                           ;	String table - string pointers are 1 byte each
  1216                           
  1217  1000                     stringdir:
  1218  1000  3010               	movlw	high stringdir
  1219  1001  008A               	movwf	10
  1220  1002  0804               	movf	4,w
  1221  1003  0A84               	incf	4,f
  1222  1004  0782               	addwf	2,f
  1223  1005                     __stringbase:
  1224  1005  3400               	retlw	0
  1225  1006                     __end_of__stringtab:
  1226  1006                     _SSD_codes:
  1227  1006  343F               	retlw	63
  1228  1007  3406               	retlw	6
  1229  1008  345B               	retlw	91
  1230  1009  344F               	retlw	79
  1231  100A  3466               	retlw	102
  1232  100B  346D               	retlw	109
  1233  100C  347D               	retlw	125
  1234  100D  3407               	retlw	7
  1235  100E  347F               	retlw	127
  1236  100F  346F               	retlw	111
  1237  1010  34BF               	retlw	191
  1238  1011  3486               	retlw	134
  1239  1012  34DB               	retlw	219
  1240  1013  34CF               	retlw	207
  1241  1014  34E6               	retlw	230
  1242  1015  34ED               	retlw	237
  1243  1016  34FD               	retlw	253
  1244  1017  3487               	retlw	135
  1245  1018  34FF               	retlw	255
  1246  1019  34EF               	retlw	239
  1247  101A                     __end_of_SSD_codes:
  1248  000E                     _TMR1	set	14
  1249  0013                     _SSPBUF	set	19
  1250  000C                     _PIR1bits	set	12
  1251  0014                     _SSPCON	set	20
  1252  0009                     _PORTE	set	9
  1253  0010                     _T1CON	set	16
  1254  001E                     _ADRESH	set	30
  1255  001F                     _ADCON0	set	31
  1256  0008                     _PORTD	set	8
  1257  0005                     _PORTA	set	5
  1258  0007                     _PORTC	set	7
  1259  0006                     _PORTB	set	6
  1260  000B                     _INTCON	set	11
  1261  000C                     _PIR1	set	12
  1262  0091                     _SSPCON2bits	set	145
  1263  0087                     _TRISCbits	set	135
  1264  0093                     _SSPADD	set	147
  1265  0091                     _SSPCON2	set	145
  1266  0094                     _SSPSTAT	set	148
  1267  0081                     _OPTION_REG	set	129
  1268  008C                     _PIE1	set	140
  1269  009E                     _ADRESL	set	158
  1270  009F                     _ADCON1	set	159
  1271  0085                     _TRISA	set	133
  1272  0088                     _TRISD	set	136
  1273  0087                     _TRISC	set	135
  1274  0086                     _TRISB	set	134
  1275                           
  1276                           	psect	cinit
  1277  0015                     start_initialization:	
  1278                           ; #config settings
  1279                           
  1280  0015                     __initialization:
  1281                           
  1282                           ; Initialize objects allocated to BANK1
  1283  0015  1683               	bsf	3,5	;RP0=1, select bank1
  1284  0016  1303               	bcf	3,6	;RP1=0, select bank1
  1285  0017  160A  118A  25B9  120A  118A  	fcall	__pidataBANK1	;fetch initializer
  1286  001C  00E6               	movwf	__pdataBANK1& (0+127)
  1287  001D  160A  118A  25BA  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
  1288  0022  00E7               	movwf	(__pdataBANK1+1)& (0+127)
  1289  0023  160A  118A  25BB  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
  1290  0028  00E8               	movwf	(__pdataBANK1+2)& (0+127)
  1291  0029  160A  118A  25BC  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
  1292  002E  00E9               	movwf	(__pdataBANK1+3)& (0+127)
  1293                           
  1294                           ; Clear objects allocated to BANK1
  1295  002F  1383               	bcf	3,7	;select IRP bank0
  1296  0030  30A0               	movlw	low __pbssBANK1
  1297  0031  0084               	movwf	4
  1298  0032  30D2               	movlw	low (__pbssBANK1+50)
  1299  0033  160A  118A  25ED  120A  118A  	fcall	clear_ram0
  1300                           
  1301                           ; Clear objects allocated to COMMON
  1302  0038  01FB               	clrf	__pbssCOMMON& (0+127)
  1303  0039  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  1304  003A  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
  1305  003B                     end_of_initialization:	
  1306                           ;End of C runtime variable initialization code
  1307                           
  1308  003B                     __end_of__initialization:
  1309  003B  0183               	clrf	3
  1310  003C  120A  118A  2D8C   	ljmp	_main	;jump to C main() function
  1311                           
  1312                           	psect	bssCOMMON
  1313  007B                     __pbssCOMMON:
  1314  007B                     SSD_update@digit:
  1315  007B                     	ds	1
  1316  007C                     _DOWN_SW_pressed_st:
  1317  007C                     	ds	1
  1318  007D                     _UP_SW_pressed_st:
  1319  007D                     	ds	1
  1320                           
  1321                           	psect	bssBANK1
  1322  00A0                     __pbssBANK1:
  1323  00A0                     _SCH_tasks:
  1324  00A0                     	ds	18
  1325  00B2                     _DelayCount:
  1326  00B2                     	ds	4
  1327  00B6                     _blinking_state:
  1328  00B6                     	ds	1
  1329  00B7                     _SSD_blinking_time:
  1330  00B7                     	ds	1
  1331  00B8                     _Timeout_button:
  1332  00B8                     	ds	1
  1333  00B9                     _Read_Button_state:
  1334  00B9                     	ds	1
  1335  00BA                     Temp_Sens_Task@reading_count:
  1336  00BA                     	ds	1
  1337  00BB                     _avg_temp_in_C:
  1338  00BB                     	ds	1
  1339  00BC                     _LED_heating_time:
  1340  00BC                     	ds	1
  1341  00BD                     _First_Reading_flag:
  1342  00BD                     	ds	1
  1343  00BE                     _Heating_Cooling_state:
  1344  00BE                     	ds	1
  1345  00BF                     _ERROR_Code:
  1346  00BF                     	ds	1
  1347  00C0                     _temp_in_C:
  1348  00C0                     	ds	1
  1349  00C1                     _DOWN_Sw_blocked_G:
  1350  00C1                     	ds	1
  1351  00C2                     _UP_Sw_blocked_G:
  1352  00C2                     	ds	1
  1353  00C3                     _DOWN_Sw_press_duration_G:
  1354  00C3                     	ds	1
  1355  00C4                     _UP_Sw_press_duration_G:
  1356  00C4                     	ds	1
  1357  00C5                     _ON_OFF_SW_pressed_st:
  1358  00C5                     	ds	1
  1359  00C6                     _Set_temp:
  1360  00C6                     	ds	1
  1361  00C7                     _SLEEP_flag:
  1362  00C7                     	ds	1
  1363  00C8                     _readings_arr:
  1364  00C8                     	ds	10
  1365                           
  1366                           	psect	dataBANK1
  1367  00E6                     __pdataBANK1:
  1368  00E6                     _SSD_Data:
  1369  00E6                     	ds	2
  1370  00E8                     _System_state:
  1371  00E8                     	ds	1
  1372  00E9                     __1st_RUNTIME_CHECK_PATTERN:
  1373  00E9                     	ds	1
  1374                           
  1375                           	psect	clrtext
  1376  15ED                     clear_ram0:	
  1377                           ;	Called with FSR containing the base address, and
  1378                           ;	W with the last address+1
  1379                           
  1380  15ED  0064               	clrwdt	;clear the watchdog before getting into this loop
  1381  15EE                     clrloop0:
  1382  15EE  0180               	clrf	0	;clear RAM location pointed to by FSR
  1383  15EF  0A84               	incf	4,f	;increment pointer
  1384  15F0  0604               	xorwf	4,w	;XOR with final address
  1385  15F1  1903               	btfsc	3,2	;have we reached the end yet?
  1386  15F2  3400               	retlw	0	;all done for this memory range, return
  1387  15F3  0604               	xorwf	4,w	;XOR again to restore value
  1388  15F4  2DEE               	goto	clrloop0	;do the next byte
  1389                           
  1390                           	psect	cstackBANK1
  1391  00D2                     __pcstackBANK1:
  1392  00D2                     ??___fltol:
  1393                           
  1394                           ; 1 bytes @ 0x0
  1395  00D2                     	ds	4
  1396  00D6                     ??_LM35_Read_Temp:
  1397                           
  1398                           ; 1 bytes @ 0x4
  1399  00D6                     	ds	4
  1400  00DA                     _LM35_Read_Temp$1135:
  1401                           
  1402                           ; 4 bytes @ 0x8
  1403  00DA                     	ds	4
  1404  00DE                     ??_Temp_Sens_Task:
  1405                           
  1406                           ; 1 bytes @ 0xC
  1407  00DE                     	ds	2
  1408  00E0                     ??_SCH_Dispatch_Tasks:
  1409                           
  1410                           ; 1 bytes @ 0xE
  1411  00E0                     	ds	2
  1412  00E2                     ??_main:
  1413                           
  1414                           ; 1 bytes @ 0x10
  1415  00E2                     	ds	4
  1416                           
  1417                           	psect	cstackCOMMON
  1418  0070                     __pcstackCOMMON:
  1419  0070                     ?_SYSTEM_init:
  1420  0070                     ?_SCH_init_TMR1:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_SYSTEM_STATE_UPDATE_TASK:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ?_Temp_Sens_Task:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ?_DISPLAY_TASK:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ?_SCH_Start:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ?_GOTO_SLEEP:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ?_SCH_Dispatch_Tasks:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ?_SYSTEM_UPDATE_init:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ?_Temp_Sens_Task_init:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ?_DISPLAY_TASK_init:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ?_EXT_INT_RB0_init:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ?_EXT_INT_RB0_EN:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     ?_SCH_Update_Task:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0070                     ?_LED_off:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0070                     ?_cooler_off:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0070                     ?_heater_off:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0070                     ?_SCH_Delete_Task:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0070                     ?_Calc_avg_reading:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ?_I2C_Master_Init:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ?_main:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0070                     ?_ISR:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0070                     ?_LED_init:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0070                     ?_LED_on:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0070                     ?_LED_tog:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     ?_cooler_init:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ?_cooler_on:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0070                     ?_heater_init:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0070                     ?_heater_on:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0070                     ?_keyboard_init:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0070                     ?_UP_switch_update:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0070                     ?_DOWN_switch_update:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ?_SSD_init:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516  0070                     ?_SSD_update:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0070                     ?_SSD_print_2dig:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_SSD_turn_off:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_ADC_init:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_LM35_init:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?_LM35_Read_Temp:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_TMR1_init:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ?_TMR1_OVFINT_init:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_TMR1_start:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ?_I2C_Master_Wait:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_I2C_Master_Start:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ?_I2C_Master_Stop:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ?_I2C_Master_RepeatedStart:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ?_I2C_NACK:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ?_I2C_Master_Write:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0070                     ?_I2C_Read_Byte:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0070                     ?i1___bmul:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0070                     i1___bmul@multiplicand:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570                           
  1571                           ; 1 bytes @ 0x0
  1572  0070                     	ds	1
  1573  0071                     ??i1___bmul:
  1574  0071                     i1___bmul@product:	
  1575                           ; 1 bytes @ 0x1
  1576                           
  1577                           
  1578                           ; 1 bytes @ 0x1
  1579  0071                     	ds	1
  1580  0072                     i1___bmul@multiplier:
  1581                           
  1582                           ; 1 bytes @ 0x2
  1583  0072                     	ds	1
  1584  0073                     ??_SCH_Update_Task:
  1585                           
  1586                           ; 1 bytes @ 0x3
  1587  0073                     	ds	2
  1588  0075                     SCH_Update_Task@Index:
  1589                           
  1590                           ; 1 bytes @ 0x5
  1591  0075                     	ds	1
  1592  0076                     ??_ISR:
  1593                           
  1594                           ; 1 bytes @ 0x6
  1595  0076                     	ds	5
  1596                           
  1597                           	psect	cstackBANK0
  1598  0020                     __pcstackBANK0:
  1599  0020                     ??_SYSTEM_init:
  1600  0020                     ??_SCH_Start:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0020                     ??_GOTO_SLEEP:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0020                     ??_SYSTEM_UPDATE_init:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0020                     ??_Temp_Sens_Task_init:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0020                     ??_DISPLAY_TASK_init:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0020                     ??_EXT_INT_RB0_init:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0020                     ??_EXT_INT_RB0_EN:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0020                     ??_LED_off:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0020                     ??_cooler_off:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0020                     ??_heater_off:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0020                     ??_I2C_Master_Init:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0020                     ??_LED_init:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0020                     ??_LED_on:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0020                     ??_LED_tog:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0020                     ??_cooler_init:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0020                     ??_cooler_on:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0020                     ??_heater_init:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0020                     ??_heater_on:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0020                     ??_keyboard_init:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0020                     ??_UP_switch_update:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0020                     ??_DOWN_switch_update:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0020                     ??_SSD_init:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0020                     ??_SSD_update:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0020                     ??_SSD_turn_off:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0020                     ??_ADC_init:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0020                     ??_LM35_init:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0020                     ??_TMR1_init:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0020                     ??_TMR1_OVFINT_init:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0020                     ??_TMR1_start:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0020                     ??_I2C_Master_Wait:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0020                     ??_I2C_Master_Start:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0020                     ??_I2C_Master_Stop:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0020                     ??_I2C_Master_RepeatedStart:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0020                     ??_I2C_NACK:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0020                     ??_I2C_Master_Write:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0020                     ??_I2C_Read_Byte:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0020                     ?___bmul:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0020                     ?__Umul8_16:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0020                     ?_ADC_get_Sample:	
  1715                           ; 2 bytes @ 0x0
  1716                           
  1717  0020                     ?___awdiv:	
  1718                           ; 2 bytes @ 0x0
  1719                           
  1720  0020                     ?___awmod:	
  1721                           ; 2 bytes @ 0x0
  1722                           
  1723  0020                     ?___lwdiv:	
  1724                           ; 2 bytes @ 0x0
  1725                           
  1726  0020                     ___bmul@multiplicand:	
  1727                           ; 2 bytes @ 0x0
  1728                           
  1729  0020                     __Umul8_16@multiplicand:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0020                     ___awdiv@divisor:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0020                     ___awmod@divisor:	
  1736                           ; 2 bytes @ 0x0
  1737                           
  1738  0020                     ___lwdiv@divisor:	
  1739                           ; 2 bytes @ 0x0
  1740                           
  1741                           
  1742                           ; 2 bytes @ 0x0
  1743  0020                     	ds	1
  1744  0021                     ??___bmul:
  1745  0021                     I2C_Master_Write@Data:	
  1746                           ; 1 bytes @ 0x1
  1747                           
  1748  0021                     ___bmul@product:	
  1749                           ; 1 bytes @ 0x1
  1750                           
  1751                           
  1752                           ; 1 bytes @ 0x1
  1753  0021                     	ds	1
  1754  0022                     ?_EEPROM_Read:
  1755  0022                     ?_EEPROM_Write:	
  1756                           ; 1 bytes @ 0x2
  1757                           
  1758  0022                     ??__Umul8_16:	
  1759                           ; 1 bytes @ 0x2
  1760                           
  1761  0022                     ??_ADC_get_Sample:	
  1762                           ; 1 bytes @ 0x2
  1763                           
  1764  0022                     ___bmul@multiplier:	
  1765                           ; 1 bytes @ 0x2
  1766                           
  1767  0022                     EEPROM_Write@add:	
  1768                           ; 1 bytes @ 0x2
  1769                           
  1770  0022                     EEPROM_Read@add:	
  1771                           ; 2 bytes @ 0x2
  1772                           
  1773  0022                     ___awdiv@dividend:	
  1774                           ; 2 bytes @ 0x2
  1775                           
  1776  0022                     ___awmod@dividend:	
  1777                           ; 2 bytes @ 0x2
  1778                           
  1779  0022                     ___lwdiv@dividend:	
  1780                           ; 2 bytes @ 0x2
  1781                           
  1782                           
  1783                           ; 2 bytes @ 0x2
  1784  0022                     	ds	1
  1785  0023                     ?_SCH_Add_Task:
  1786  0023                     ??_SCH_Delete_Task:	
  1787                           ; 1 bytes @ 0x3
  1788                           
  1789  0023                     SCH_Delete_Task@Task_Index:	
  1790                           ; 1 bytes @ 0x3
  1791                           
  1792  0023                     SCH_Add_Task@Delay:	
  1793                           ; 1 bytes @ 0x3
  1794                           
  1795                           
  1796                           ; 2 bytes @ 0x3
  1797  0023                     	ds	1
  1798  0024                     ??_SCH_init_TMR1:
  1799  0024                     ??_EEPROM_Read:	
  1800                           ; 1 bytes @ 0x4
  1801                           
  1802  0024                     ??___awdiv:	
  1803                           ; 1 bytes @ 0x4
  1804                           
  1805  0024                     ??___awmod:	
  1806                           ; 1 bytes @ 0x4
  1807                           
  1808  0024                     ??___lwdiv:	
  1809                           ; 1 bytes @ 0x4
  1810                           
  1811  0024                     SCH_init_TMR1@i:	
  1812                           ; 1 bytes @ 0x4
  1813                           
  1814  0024                     EEPROM_Write@data:	
  1815                           ; 1 bytes @ 0x4
  1816                           
  1817  0024                     EEPROM_Read@Data:	
  1818                           ; 1 bytes @ 0x4
  1819                           
  1820  0024                     ___awdiv@counter:	
  1821                           ; 1 bytes @ 0x4
  1822                           
  1823  0024                     ___awmod@counter:	
  1824                           ; 1 bytes @ 0x4
  1825                           
  1826  0024                     ___lwdiv@quotient:	
  1827                           ; 1 bytes @ 0x4
  1828                           
  1829  0024                     __Umul8_16@product:	
  1830                           ; 2 bytes @ 0x4
  1831                           
  1832                           
  1833                           ; 2 bytes @ 0x4
  1834  0024                     	ds	1
  1835  0025                     ??_EEPROM_Write:
  1836  0025                     ??_SYSTEM_STATE_UPDATE_TASK:	
  1837                           ; 1 bytes @ 0x5
  1838                           
  1839  0025                     ___awdiv@sign:	
  1840                           ; 1 bytes @ 0x5
  1841                           
  1842  0025                     ___awmod@sign:	
  1843                           ; 1 bytes @ 0x5
  1844                           
  1845  0025                     SCH_Add_Task@Period:	
  1846                           ; 1 bytes @ 0x5
  1847                           
  1848                           
  1849                           ; 2 bytes @ 0x5
  1850  0025                     	ds	1
  1851  0026                     ADC_get_Sample@ADC_channel:
  1852  0026                     ___lwdiv@counter:	
  1853                           ; 1 bytes @ 0x6
  1854                           
  1855  0026                     ___awdiv@quotient:	
  1856                           ; 1 bytes @ 0x6
  1857                           
  1858  0026                     __Umul8_16@word_mpld:	
  1859                           ; 2 bytes @ 0x6
  1860                           
  1861                           
  1862                           ; 2 bytes @ 0x6
  1863  0026                     	ds	1
  1864  0027                     ??_SCH_Add_Task:
  1865  0027                     ??_Calc_avg_reading:	
  1866                           ; 1 bytes @ 0x7
  1867                           
  1868  0027                     ?___xxtofl:	
  1869                           ; 1 bytes @ 0x7
  1870                           
  1871  0027                     SCH_Add_Task@ptr_fun:	
  1872                           ; 4 bytes @ 0x7
  1873                           
  1874  0027                     ___xxtofl@val:	
  1875                           ; 1 bytes @ 0x7
  1876                           
  1877                           
  1878                           ; 4 bytes @ 0x7
  1879  0027                     	ds	1
  1880  0028                     ??_SSD_print_2dig:
  1881  0028                     SCH_Add_Task@Index:	
  1882                           ; 1 bytes @ 0x8
  1883                           
  1884  0028                     __Umul8_16@multiplier:	
  1885                           ; 1 bytes @ 0x8
  1886                           
  1887                           
  1888                           ; 1 bytes @ 0x8
  1889  0028                     	ds	2
  1890  002A                     SSD_print_2dig@val:
  1891  002A                     Calc_avg_reading@sum_temp:	
  1892                           ; 1 bytes @ 0xA
  1893                           
  1894                           
  1895                           ; 2 bytes @ 0xA
  1896  002A                     	ds	1
  1897  002B                     ??_DISPLAY_TASK:
  1898  002B                     ??___xxtofl:	
  1899                           ; 1 bytes @ 0xB
  1900                           
  1901                           
  1902                           ; 1 bytes @ 0xB
  1903  002B                     	ds	1
  1904  002C                     Calc_avg_reading@avg_arr:
  1905                           
  1906                           ; 1 bytes @ 0xC
  1907  002C                     	ds	1
  1908  002D                     Calc_avg_reading@count:
  1909                           
  1910                           ; 1 bytes @ 0xD
  1911  002D                     	ds	2
  1912  002F                     ___xxtofl@sign:
  1913                           
  1914                           ; 1 bytes @ 0xF
  1915  002F                     	ds	1
  1916  0030                     ___xxtofl@exp:
  1917                           
  1918                           ; 1 bytes @ 0x10
  1919  0030                     	ds	1
  1920  0031                     ___xxtofl@arg:
  1921                           
  1922                           ; 4 bytes @ 0x11
  1923  0031                     	ds	4
  1924  0035                     ?___flmul:
  1925  0035                     ___flmul@b:	
  1926                           ; 4 bytes @ 0x15
  1927                           
  1928                           
  1929                           ; 4 bytes @ 0x15
  1930  0035                     	ds	4
  1931  0039                     ___flmul@a:
  1932                           
  1933                           ; 4 bytes @ 0x19
  1934  0039                     	ds	4
  1935  003D                     ??___flmul:
  1936                           
  1937                           ; 1 bytes @ 0x1D
  1938  003D                     	ds	5
  1939  0042                     ___flmul@sign:
  1940                           
  1941                           ; 1 bytes @ 0x22
  1942  0042                     	ds	1
  1943  0043                     ___flmul@grs:
  1944                           
  1945                           ; 4 bytes @ 0x23
  1946  0043                     	ds	4
  1947  0047                     ___flmul@aexp:
  1948                           
  1949                           ; 1 bytes @ 0x27
  1950  0047                     	ds	1
  1951  0048                     ___flmul@bexp:
  1952                           
  1953                           ; 1 bytes @ 0x28
  1954  0048                     	ds	1
  1955  0049                     ___flmul@prod:
  1956                           
  1957                           ; 4 bytes @ 0x29
  1958  0049                     	ds	4
  1959  004D                     ___flmul@temp:
  1960                           
  1961                           ; 2 bytes @ 0x2D
  1962  004D                     	ds	2
  1963  004F                     ?___fldiv:
  1964  004F                     ___fldiv@a:	
  1965                           ; 4 bytes @ 0x2F
  1966                           
  1967                           
  1968                           ; 4 bytes @ 0x2F
  1969  004F                     	ds	4
  1970  0053                     ___fldiv@b:
  1971                           
  1972                           ; 4 bytes @ 0x33
  1973  0053                     	ds	4
  1974  0057                     ??___fldiv:
  1975                           
  1976                           ; 1 bytes @ 0x37
  1977  0057                     	ds	5
  1978  005C                     ___fldiv@rem:
  1979                           
  1980                           ; 4 bytes @ 0x3C
  1981  005C                     	ds	4
  1982  0060                     ___fldiv@sign:
  1983                           
  1984                           ; 1 bytes @ 0x40
  1985  0060                     	ds	1
  1986  0061                     ___fldiv@new_exp:
  1987                           
  1988                           ; 2 bytes @ 0x41
  1989  0061                     	ds	2
  1990  0063                     ___fldiv@grs:
  1991                           
  1992                           ; 4 bytes @ 0x43
  1993  0063                     	ds	4
  1994  0067                     ___fldiv@bexp:
  1995                           
  1996                           ; 1 bytes @ 0x47
  1997  0067                     	ds	1
  1998  0068                     ___fldiv@aexp:
  1999                           
  2000                           ; 1 bytes @ 0x48
  2001  0068                     	ds	1
  2002  0069                     ?___fltol:
  2003  0069                     ___fltol@f1:	
  2004                           ; 4 bytes @ 0x49
  2005                           
  2006                           
  2007                           ; 4 bytes @ 0x49
  2008  0069                     	ds	4
  2009  006D                     ___fltol@sign1:
  2010                           
  2011                           ; 1 bytes @ 0x4D
  2012  006D                     	ds	1
  2013  006E                     ___fltol@exp1:
  2014                           
  2015                           ; 1 bytes @ 0x4E
  2016  006E                     	ds	1
  2017  006F                     SCH_Dispatch_Tasks@Index:
  2018                           
  2019                           ; 1 bytes @ 0x4F
  2020  006F                     	ds	1
  2021                           
  2022                           	psect	maintext
  2023  058C                     __pmaintext:	
  2024 ;;
  2025 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2026 ;;
  2027 ;; *************** function _main *****************
  2028 ;; Defined at:
  2029 ;;		line 28 in file "main.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : B00/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2043 ;;      Params:         0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0
  2045 ;;      Temps:          0       0       4       0       0
  2046 ;;      Totals:         0       0       4       0       0
  2047 ;;Total ram usage:        4 bytes
  2048 ;; Hardware stack levels required when called:    8
  2049 ;; This function calls:
  2050 ;;		_EEPROM_Read
  2051 ;;		_EEPROM_Write
  2052 ;;		_GOTO_SLEEP
  2053 ;;		_SCH_Add_Task
  2054 ;;		_SCH_Dispatch_Tasks
  2055 ;;		_SCH_Start
  2056 ;;		_SCH_init_TMR1
  2057 ;;		_SYSTEM_init
  2058 ;; This function is called by:
  2059 ;;		Startup code after reset
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _main
  2065  058C                     _main:
  2066  058C                     l3424:	
  2067                           ;incstack = 0
  2068                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2069                           
  2070                           
  2071                           ;main.c: 31:     SYSTEM_init();
  2072  058C  160A  118A  270D  120A  118A  	fcall	_SYSTEM_init
  2073  0591                     l3426:
  2074                           
  2075                           ;main.c: 32:     SCH_init_TMR1();
  2076  0591  160A  118A  27CE  120A  118A  	fcall	_SCH_init_TMR1
  2077  0596                     l3428:
  2078                           
  2079                           ;main.c: 39:     if(EEPROM_Read(0x80) != _1st_RUNTIME_CHECK_PATTERN)
  2080  0596  3080               	movlw	128
  2081  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0599  00A2               	movwf	EEPROM_Read@add
  2084  059A  3000               	movlw	0
  2085  059B  00A3               	movwf	EEPROM_Read@add+1
  2086  059C  120A  158A  20F7  120A  118A  	fcall	_EEPROM_Read
  2087  05A1  3ABC               	xorlw	188
  2088  05A2  1903               	skipnz
  2089  05A3  2DA5               	goto	u3791
  2090  05A4  2DA6               	goto	u3790
  2091  05A5                     u3791:
  2092  05A5  2E37               	goto	l3448
  2093  05A6                     u3790:
  2094  05A6                     l3430:
  2095                           
  2096                           ;main.c: 40:     {;main.c: 41:         for(DelayCount = (((8000000UL)/1000)*1/152); Dela
      +                          yCount>0; DelayCount--) __asm("NOP");;
  2097  05A6  3000               	movlw	0
  2098  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  2099  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  2100  05A9  00B5               	movwf	(_DelayCount+3)^(0+128)
  2101  05AA  3000               	movlw	0
  2102  05AB  00B4               	movwf	(_DelayCount+2)^(0+128)
  2103  05AC  3000               	movlw	0
  2104  05AD  00B3               	movwf	(_DelayCount+1)^(0+128)
  2105  05AE  3034               	movlw	52
  2106  05AF  00B2               	movwf	_DelayCount^(0+128)
  2107  05B0  0835               	movf	(_DelayCount+3)^(0+128),w
  2108  05B1  0434               	iorwf	(_DelayCount+2)^(0+128),w
  2109  05B2  0433               	iorwf	(_DelayCount+1)^(0+128),w
  2110  05B3  0432               	iorwf	_DelayCount^(0+128),w
  2111  05B4  1D03               	skipz
  2112  05B5  2DB7               	goto	u3801
  2113  05B6  2DB8               	goto	u3800
  2114  05B7                     u3801:
  2115  05B7  2DB9               	goto	l52
  2116  05B8                     u3800:
  2117  05B8  2DE0               	goto	l3436
  2118  05B9                     l52:
  2119  05B9  0000               	nop	;# 
  2120  05BA                     l3434:
  2121  05BA  3001               	movlw	1
  2122  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  2123  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  2124  05BD  00E2               	movwf	??_main^(0+128)
  2125  05BE  3000               	movlw	0
  2126  05BF  00E3               	movwf	(??_main^(0+128)+1)
  2127  05C0  3000               	movlw	0
  2128  05C1  00E4               	movwf	(??_main^(0+128)+2)
  2129  05C2  3000               	movlw	0
  2130  05C3  00E5               	movwf	(??_main^(0+128)+3)
  2131  05C4  0862               	movf	??_main^(0+128),w
  2132  05C5  02B2               	subwf	_DelayCount^(0+128),f
  2133  05C6  0863               	movf	(??_main+1)^(0+128),w
  2134  05C7  1C03               	skipc
  2135  05C8  0F63               	incfsz	(??_main+1)^(0+128),w
  2136  05C9  2DCB               	goto	u3815
  2137  05CA  2DCC               	goto	u3816
  2138  05CB                     u3815:
  2139  05CB  02B3               	subwf	(_DelayCount+1)^(0+128),f
  2140  05CC                     u3816:
  2141  05CC  0864               	movf	(??_main+2)^(0+128),w
  2142  05CD  1C03               	skipc
  2143  05CE  0F64               	incfsz	(??_main+2)^(0+128),w
  2144  05CF  2DD1               	goto	u3817
  2145  05D0  2DD2               	goto	u3818
  2146  05D1                     u3817:
  2147  05D1  02B4               	subwf	(_DelayCount+2)^(0+128),f
  2148  05D2                     u3818:
  2149  05D2  0865               	movf	(??_main+3)^(0+128),w
  2150  05D3  1C03               	skipc
  2151  05D4  0F65               	incfsz	(??_main+3)^(0+128),w
  2152  05D5  2DD7               	goto	u3819
  2153  05D6  2DD8               	goto	u3810
  2154  05D7                     u3819:
  2155  05D7  02B5               	subwf	(_DelayCount+3)^(0+128),f
  2156  05D8                     u3810:
  2157  05D8  0835               	movf	(_DelayCount+3)^(0+128),w
  2158  05D9  0434               	iorwf	(_DelayCount+2)^(0+128),w
  2159  05DA  0433               	iorwf	(_DelayCount+1)^(0+128),w
  2160  05DB  0432               	iorwf	_DelayCount^(0+128),w
  2161  05DC  1D03               	skipz
  2162  05DD  2DDF               	goto	u3821
  2163  05DE  2DE0               	goto	u3820
  2164  05DF                     u3821:
  2165  05DF  2DB9               	goto	l52
  2166  05E0                     u3820:
  2167  05E0                     l3436:
  2168                           
  2169                           ;main.c: 42:         EEPROM_Write(0x00, 60);
  2170  05E0  3000               	movlw	0
  2171  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  2172  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  2173  05E3  00A2               	movwf	EEPROM_Write@add
  2174  05E4  00A3               	movwf	EEPROM_Write@add+1
  2175  05E5  303C               	movlw	60
  2176  05E6  00FF               	movwf	btemp+1
  2177  05E7  087F               	movf	btemp+1,w
  2178  05E8  00A4               	movwf	EEPROM_Write@data
  2179  05E9  120A  158A  2012  120A  118A  	fcall	_EEPROM_Write
  2180  05EE                     l3438:
  2181                           
  2182                           ;main.c: 43:         for(DelayCount = (((8000000UL)/1000)*1/152); DelayCount>0; DelayCou
      +                          nt--) __asm("NOP");;
  2183  05EE  3000               	movlw	0
  2184  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  2185  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  2186  05F1  00B5               	movwf	(_DelayCount+3)^(0+128)
  2187  05F2  3000               	movlw	0
  2188  05F3  00B4               	movwf	(_DelayCount+2)^(0+128)
  2189  05F4  3000               	movlw	0
  2190  05F5  00B3               	movwf	(_DelayCount+1)^(0+128)
  2191  05F6  3034               	movlw	52
  2192  05F7  00B2               	movwf	_DelayCount^(0+128)
  2193  05F8                     l3440:
  2194  05F8  0835               	movf	(_DelayCount+3)^(0+128),w
  2195  05F9  0434               	iorwf	(_DelayCount+2)^(0+128),w
  2196  05FA  0433               	iorwf	(_DelayCount+1)^(0+128),w
  2197  05FB  0432               	iorwf	_DelayCount^(0+128),w
  2198  05FC  1D03               	skipz
  2199  05FD  2DFF               	goto	u3831
  2200  05FE  2E00               	goto	u3830
  2201  05FF                     u3831:
  2202  05FF  2E01               	goto	l54
  2203  0600                     u3830:
  2204  0600  2E28               	goto	l3446
  2205  0601                     l54:
  2206  0601  0000               	nop	;# 
  2207  0602                     l3444:
  2208  0602  3001               	movlw	1
  2209  0603  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0604  1303               	bcf	3,6	;RP1=0, select bank1
  2211  0605  00E2               	movwf	??_main^(0+128)
  2212  0606  3000               	movlw	0
  2213  0607  00E3               	movwf	(??_main^(0+128)+1)
  2214  0608  3000               	movlw	0
  2215  0609  00E4               	movwf	(??_main^(0+128)+2)
  2216  060A  3000               	movlw	0
  2217  060B  00E5               	movwf	(??_main^(0+128)+3)
  2218  060C  0862               	movf	??_main^(0+128),w
  2219  060D  02B2               	subwf	_DelayCount^(0+128),f
  2220  060E  0863               	movf	(??_main+1)^(0+128),w
  2221  060F  1C03               	skipc
  2222  0610  0F63               	incfsz	(??_main+1)^(0+128),w
  2223  0611  2E13               	goto	u3845
  2224  0612  2E14               	goto	u3846
  2225  0613                     u3845:
  2226  0613  02B3               	subwf	(_DelayCount+1)^(0+128),f
  2227  0614                     u3846:
  2228  0614  0864               	movf	(??_main+2)^(0+128),w
  2229  0615  1C03               	skipc
  2230  0616  0F64               	incfsz	(??_main+2)^(0+128),w
  2231  0617  2E19               	goto	u3847
  2232  0618  2E1A               	goto	u3848
  2233  0619                     u3847:
  2234  0619  02B4               	subwf	(_DelayCount+2)^(0+128),f
  2235  061A                     u3848:
  2236  061A  0865               	movf	(??_main+3)^(0+128),w
  2237  061B  1C03               	skipc
  2238  061C  0F65               	incfsz	(??_main+3)^(0+128),w
  2239  061D  2E1F               	goto	u3849
  2240  061E  2E20               	goto	u3840
  2241  061F                     u3849:
  2242  061F  02B5               	subwf	(_DelayCount+3)^(0+128),f
  2243  0620                     u3840:
  2244  0620  0835               	movf	(_DelayCount+3)^(0+128),w
  2245  0621  0434               	iorwf	(_DelayCount+2)^(0+128),w
  2246  0622  0433               	iorwf	(_DelayCount+1)^(0+128),w
  2247  0623  0432               	iorwf	_DelayCount^(0+128),w
  2248  0624  1D03               	skipz
  2249  0625  2E27               	goto	u3851
  2250  0626  2E28               	goto	u3850
  2251  0627                     u3851:
  2252  0627  2E01               	goto	l54
  2253  0628                     u3850:
  2254  0628                     l3446:
  2255                           
  2256                           ;main.c: 44:         EEPROM_Write(0x80, _1st_RUNTIME_CHECK_PATTERN);
  2257  0628  3080               	movlw	128
  2258  0629  1283               	bcf	3,5	;RP0=0, select bank0
  2259  062A  1303               	bcf	3,6	;RP1=0, select bank0
  2260  062B  00A2               	movwf	EEPROM_Write@add
  2261  062C  3000               	movlw	0
  2262  062D  00A3               	movwf	EEPROM_Write@add+1
  2263  062E  30BC               	movlw	188
  2264  062F  00FF               	movwf	btemp+1
  2265  0630  087F               	movf	btemp+1,w
  2266  0631  00A4               	movwf	EEPROM_Write@data
  2267  0632  120A  158A  2012  120A  118A  	fcall	_EEPROM_Write
  2268  0637                     l3448:
  2269                           
  2270                           ;main.c: 46:     for(DelayCount = (((8000000UL)/1000)*1/152); DelayCount>0; DelayCount--
      +                          ) __asm("NOP");;
  2271  0637  3000               	movlw	0
  2272  0638  1683               	bsf	3,5	;RP0=1, select bank1
  2273  0639  1303               	bcf	3,6	;RP1=0, select bank1
  2274  063A  00B5               	movwf	(_DelayCount+3)^(0+128)
  2275  063B  3000               	movlw	0
  2276  063C  00B4               	movwf	(_DelayCount+2)^(0+128)
  2277  063D  3000               	movlw	0
  2278  063E  00B3               	movwf	(_DelayCount+1)^(0+128)
  2279  063F  3034               	movlw	52
  2280  0640  00B2               	movwf	_DelayCount^(0+128)
  2281  0641                     l3450:
  2282  0641  0835               	movf	(_DelayCount+3)^(0+128),w
  2283  0642  0434               	iorwf	(_DelayCount+2)^(0+128),w
  2284  0643  0433               	iorwf	(_DelayCount+1)^(0+128),w
  2285  0644  0432               	iorwf	_DelayCount^(0+128),w
  2286  0645  1D03               	skipz
  2287  0646  2E48               	goto	u3861
  2288  0647  2E49               	goto	u3860
  2289  0648                     u3861:
  2290  0648  2E4A               	goto	l56
  2291  0649                     u3860:
  2292  0649  2E71               	goto	l3456
  2293  064A                     l56:
  2294  064A  0000               	nop	;# 
  2295  064B                     l3454:
  2296  064B  3001               	movlw	1
  2297  064C  1683               	bsf	3,5	;RP0=1, select bank1
  2298  064D  1303               	bcf	3,6	;RP1=0, select bank1
  2299  064E  00E2               	movwf	??_main^(0+128)
  2300  064F  3000               	movlw	0
  2301  0650  00E3               	movwf	(??_main^(0+128)+1)
  2302  0651  3000               	movlw	0
  2303  0652  00E4               	movwf	(??_main^(0+128)+2)
  2304  0653  3000               	movlw	0
  2305  0654  00E5               	movwf	(??_main^(0+128)+3)
  2306  0655  0862               	movf	??_main^(0+128),w
  2307  0656  02B2               	subwf	_DelayCount^(0+128),f
  2308  0657  0863               	movf	(??_main+1)^(0+128),w
  2309  0658  1C03               	skipc
  2310  0659  0F63               	incfsz	(??_main+1)^(0+128),w
  2311  065A  2E5C               	goto	u3875
  2312  065B  2E5D               	goto	u3876
  2313  065C                     u3875:
  2314  065C  02B3               	subwf	(_DelayCount+1)^(0+128),f
  2315  065D                     u3876:
  2316  065D  0864               	movf	(??_main+2)^(0+128),w
  2317  065E  1C03               	skipc
  2318  065F  0F64               	incfsz	(??_main+2)^(0+128),w
  2319  0660  2E62               	goto	u3877
  2320  0661  2E63               	goto	u3878
  2321  0662                     u3877:
  2322  0662  02B4               	subwf	(_DelayCount+2)^(0+128),f
  2323  0663                     u3878:
  2324  0663  0865               	movf	(??_main+3)^(0+128),w
  2325  0664  1C03               	skipc
  2326  0665  0F65               	incfsz	(??_main+3)^(0+128),w
  2327  0666  2E68               	goto	u3879
  2328  0667  2E69               	goto	u3870
  2329  0668                     u3879:
  2330  0668  02B5               	subwf	(_DelayCount+3)^(0+128),f
  2331  0669                     u3870:
  2332  0669  0835               	movf	(_DelayCount+3)^(0+128),w
  2333  066A  0434               	iorwf	(_DelayCount+2)^(0+128),w
  2334  066B  0433               	iorwf	(_DelayCount+1)^(0+128),w
  2335  066C  0432               	iorwf	_DelayCount^(0+128),w
  2336  066D  1D03               	skipz
  2337  066E  2E70               	goto	u3881
  2338  066F  2E71               	goto	u3880
  2339  0670                     u3881:
  2340  0670  2E4A               	goto	l56
  2341  0671                     u3880:
  2342  0671                     l3456:
  2343                           
  2344                           ;main.c: 47:     Set_temp = EEPROM_Read(0x00);
  2345  0671  3000               	movlw	0
  2346  0672  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0673  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0674  00A2               	movwf	EEPROM_Read@add
  2349  0675  00A3               	movwf	EEPROM_Read@add+1
  2350  0676  120A  158A  20F7  120A  118A  	fcall	_EEPROM_Read
  2351  067B  00FF               	movwf	btemp+1
  2352  067C  087F               	movf	btemp+1,w
  2353  067D  1683               	bsf	3,5	;RP0=1, select bank1
  2354  067E  1303               	bcf	3,6	;RP1=0, select bank1
  2355  067F  00C6               	movwf	_Set_temp^(0+128)
  2356  0680                     l3458:
  2357                           
  2358                           ;main.c: 48:     for(DelayCount = (((8000000UL)/1000)*1/152); DelayCount>0; DelayCount--
      +                          ) __asm("NOP");;
  2359  0680  3000               	movlw	0
  2360  0681  00B5               	movwf	(_DelayCount+3)^(0+128)
  2361  0682  3000               	movlw	0
  2362  0683  00B4               	movwf	(_DelayCount+2)^(0+128)
  2363  0684  3000               	movlw	0
  2364  0685  00B3               	movwf	(_DelayCount+1)^(0+128)
  2365  0686  3034               	movlw	52
  2366  0687  00B2               	movwf	_DelayCount^(0+128)
  2367  0688                     l3460:
  2368  0688  0835               	movf	(_DelayCount+3)^(0+128),w
  2369  0689  0434               	iorwf	(_DelayCount+2)^(0+128),w
  2370  068A  0433               	iorwf	(_DelayCount+1)^(0+128),w
  2371  068B  0432               	iorwf	_DelayCount^(0+128),w
  2372  068C  1D03               	skipz
  2373  068D  2E8F               	goto	u3891
  2374  068E  2E90               	goto	u3890
  2375  068F                     u3891:
  2376  068F  2E91               	goto	l58
  2377  0690                     u3890:
  2378  0690  2EB8               	goto	l3466
  2379  0691                     l58:
  2380  0691  0000               	nop	;# 
  2381  0692                     l3464:
  2382  0692  3001               	movlw	1
  2383  0693  1683               	bsf	3,5	;RP0=1, select bank1
  2384  0694  1303               	bcf	3,6	;RP1=0, select bank1
  2385  0695  00E2               	movwf	??_main^(0+128)
  2386  0696  3000               	movlw	0
  2387  0697  00E3               	movwf	(??_main^(0+128)+1)
  2388  0698  3000               	movlw	0
  2389  0699  00E4               	movwf	(??_main^(0+128)+2)
  2390  069A  3000               	movlw	0
  2391  069B  00E5               	movwf	(??_main^(0+128)+3)
  2392  069C  0862               	movf	??_main^(0+128),w
  2393  069D  02B2               	subwf	_DelayCount^(0+128),f
  2394  069E  0863               	movf	(??_main+1)^(0+128),w
  2395  069F  1C03               	skipc
  2396  06A0  0F63               	incfsz	(??_main+1)^(0+128),w
  2397  06A1  2EA3               	goto	u3905
  2398  06A2  2EA4               	goto	u3906
  2399  06A3                     u3905:
  2400  06A3  02B3               	subwf	(_DelayCount+1)^(0+128),f
  2401  06A4                     u3906:
  2402  06A4  0864               	movf	(??_main+2)^(0+128),w
  2403  06A5  1C03               	skipc
  2404  06A6  0F64               	incfsz	(??_main+2)^(0+128),w
  2405  06A7  2EA9               	goto	u3907
  2406  06A8  2EAA               	goto	u3908
  2407  06A9                     u3907:
  2408  06A9  02B4               	subwf	(_DelayCount+2)^(0+128),f
  2409  06AA                     u3908:
  2410  06AA  0865               	movf	(??_main+3)^(0+128),w
  2411  06AB  1C03               	skipc
  2412  06AC  0F65               	incfsz	(??_main+3)^(0+128),w
  2413  06AD  2EAF               	goto	u3909
  2414  06AE  2EB0               	goto	u3900
  2415  06AF                     u3909:
  2416  06AF  02B5               	subwf	(_DelayCount+3)^(0+128),f
  2417  06B0                     u3900:
  2418  06B0  0835               	movf	(_DelayCount+3)^(0+128),w
  2419  06B1  0434               	iorwf	(_DelayCount+2)^(0+128),w
  2420  06B2  0433               	iorwf	(_DelayCount+1)^(0+128),w
  2421  06B3  0432               	iorwf	_DelayCount^(0+128),w
  2422  06B4  1D03               	skipz
  2423  06B5  2EB7               	goto	u3911
  2424  06B6  2EB8               	goto	u3910
  2425  06B7                     u3911:
  2426  06B7  2E91               	goto	l58
  2427  06B8                     u3910:
  2428  06B8                     l3466:
  2429                           
  2430                           ;main.c: 56:     SCH_Add_Task(SYSTEM_STATE_UPDATE_TASK, 0, 4);
  2431  06B8  3000               	movlw	0
  2432  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  2433  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  2434  06BB  00A3               	movwf	SCH_Add_Task@Delay
  2435  06BC  00A4               	movwf	SCH_Add_Task@Delay+1
  2436  06BD  3004               	movlw	4
  2437  06BE  00A5               	movwf	SCH_Add_Task@Period
  2438  06BF  3000               	movlw	0
  2439  06C0  00A6               	movwf	SCH_Add_Task@Period+1
  2440  06C1  3004               	movlw	(low (fp__SYSTEM_STATE_UPDATE_TASK-fpbase))& (0+255)
  2441  06C2  120A  158A  23E0  120A  118A  	fcall	_SCH_Add_Task
  2442                           
  2443                           ;main.c: 60:     SCH_Add_Task(Temp_Sens_Task, 0, 20);
  2444  06C7  3000               	movlw	0
  2445  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2446  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2447  06CA  00A3               	movwf	SCH_Add_Task@Delay
  2448  06CB  00A4               	movwf	SCH_Add_Task@Delay+1
  2449  06CC  3014               	movlw	20
  2450  06CD  00A5               	movwf	SCH_Add_Task@Period
  2451  06CE  3000               	movlw	0
  2452  06CF  00A6               	movwf	SCH_Add_Task@Period+1
  2453  06D0  3001               	movlw	(low (fp__Temp_Sens_Task-fpbase))& (0+255)
  2454  06D1  120A  158A  23E0  120A  118A  	fcall	_SCH_Add_Task
  2455                           
  2456                           ;main.c: 64:     SCH_Add_Task(DISPLAY_TASK, 0, 1);
  2457  06D6  3000               	movlw	0
  2458  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  2459  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  2460  06D9  00A3               	movwf	SCH_Add_Task@Delay
  2461  06DA  00A4               	movwf	SCH_Add_Task@Delay+1
  2462  06DB  3001               	movlw	1
  2463  06DC  00A5               	movwf	SCH_Add_Task@Period
  2464  06DD  3000               	movlw	0
  2465  06DE  00A6               	movwf	SCH_Add_Task@Period+1
  2466  06DF  3007               	movlw	(low (fp__DISPLAY_TASK-fpbase))& (0+255)
  2467  06E0  120A  158A  23E0  120A  118A  	fcall	_SCH_Add_Task
  2468  06E5                     l3468:
  2469                           
  2470                           ;main.c: 67:     SCH_Start();
  2471  06E5  160A  118A  25A7  120A  118A  	fcall	_SCH_Start
  2472  06EA                     l3470:
  2473                           
  2474                           ;main.c: 70:     {;main.c: 71:         if(!SLEEP_flag)
  2475  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  2476  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  2477  06EC  0847               	movf	_SLEEP_flag^(0+128),w
  2478  06ED  1D03               	btfss	3,2
  2479  06EE  2EF0               	goto	u3921
  2480  06EF  2EF1               	goto	u3920
  2481  06F0                     u3921:
  2482  06F0  2EF6               	goto	l3474
  2483  06F1                     u3920:
  2484  06F1                     l3472:
  2485                           
  2486                           ;main.c: 72:             GOTO_SLEEP();
  2487  06F1  160A  118A  25F5  120A  118A  	fcall	_GOTO_SLEEP
  2488  06F6                     l3474:
  2489                           
  2490                           ;main.c: 73:         SCH_Dispatch_Tasks();
  2491  06F6  120A  158A  2300  120A  118A  	fcall	_SCH_Dispatch_Tasks
  2492  06FB  2EEA               	goto	l3470
  2493  06FC  120A  118A  2812   	ljmp	start
  2494  06FF                     __end_of_main:
  2495                           
  2496                           	psect	text1
  2497  170D                     __ptext1:	
  2498 ;; *************** function _SYSTEM_init *****************
  2499 ;; Defined at:
  2500 ;;		line 79 in file "main.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2514 ;;      Params:         0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0
  2517 ;;      Totals:         0       0       0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    6
  2521 ;; This function calls:
  2522 ;;		_DISPLAY_TASK_init
  2523 ;;		_EXT_INT_RB0_EN
  2524 ;;		_EXT_INT_RB0_init
  2525 ;;		_SYSTEM_UPDATE_init
  2526 ;;		_Temp_Sens_Task_init
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _SYSTEM_init
  2534  170D                     _SYSTEM_init:
  2535  170D                     l3322:	
  2536                           ;incstack = 0
  2537                           ; Regs used in _SYSTEM_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2538                           
  2539                           
  2540                           ;main.c: 81:     SYSTEM_UPDATE_init();
  2541  170D  160A  118A  261C  160A  118A  	fcall	_SYSTEM_UPDATE_init
  2542                           
  2543                           ;main.c: 82:     Temp_Sens_Task_init();
  2544  1712  160A  118A  26CA  160A  118A  	fcall	_Temp_Sens_Task_init
  2545                           
  2546                           ;main.c: 83:     DISPLAY_TASK_init();
  2547  1717  160A  118A  25BD  160A  118A  	fcall	_DISPLAY_TASK_init
  2548                           
  2549                           ;main.c: 84:     EXT_INT_RB0_init();
  2550  171C  160A  118A  2607  160A  118A  	fcall	_EXT_INT_RB0_init
  2551                           
  2552                           ;main.c: 85:     EXT_INT_RB0_EN();
  2553  1721  160A  118A  25C3  160A  118A  	fcall	_EXT_INT_RB0_EN
  2554  1726                     l67:
  2555  1726  0008               	return
  2556  1727                     __end_of_SYSTEM_init:
  2557                           
  2558                           	psect	text2
  2559  16CA                     __ptext2:	
  2560 ;; *************** function _Temp_Sens_Task_init *****************
  2561 ;; Defined at:
  2562 ;;		line 102 in file "Temp_Sens_Task.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    5
  2583 ;; This function calls:
  2584 ;;		_LED_init
  2585 ;;		_LM35_init
  2586 ;;		_cooler_init
  2587 ;;		_heater_init
  2588 ;; This function is called by:
  2589 ;;		_SYSTEM_init
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           
  2594                           ;psect for function _Temp_Sens_Task_init
  2595  16CA                     _Temp_Sens_Task_init:
  2596  16CA                     l3072:	
  2597                           ;incstack = 0
  2598                           ; Regs used in _Temp_Sens_Task_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2599                           
  2600                           
  2601                           ;Temp_Sens_Task.c: 104:     LED_init();
  2602  16CA  160A  118A  2657  160A  118A  	fcall	_LED_init
  2603                           
  2604                           ;Temp_Sens_Task.c: 105:     heater_init();
  2605  16CF  160A  118A  266F  160A  118A  	fcall	_heater_init
  2606                           
  2607                           ;Temp_Sens_Task.c: 106:     cooler_init();
  2608  16D4  160A  118A  2663  160A  118A  	fcall	_cooler_init
  2609  16D9                     l3074:
  2610                           
  2611                           ;Temp_Sens_Task.c: 107:     LM35_init();
  2612  16D9  160A  118A  25FE  160A  118A  	fcall	_LM35_init
  2613  16DE                     l419:
  2614  16DE  0008               	return
  2615  16DF                     __end_of_Temp_Sens_Task_init:
  2616                           
  2617                           	psect	text3
  2618  166F                     __ptext3:	
  2619 ;; *************** function _heater_init *****************
  2620 ;; Defined at:
  2621 ;;		line 16 in file "HEATER.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2635 ;;      Params:         0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0
  2638 ;;      Totals:         0       0       0       0       0
  2639 ;;Total ram usage:        0 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    4
  2642 ;; This function calls:
  2643 ;;		_heater_off
  2644 ;; This function is called by:
  2645 ;;		_Temp_Sens_Task_init
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function _heater_init
  2651  166F                     _heater_init:
  2652  166F                     l2944:	
  2653                           ;incstack = 0
  2654                           ; Regs used in _heater_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2655                           
  2656                           
  2657                           ;HEATER.c: 19:     (TRISC &= ~(1<<5));
  2658  166F  30DF               	movlw	223
  2659  1670  00FF               	movwf	btemp+1
  2660  1671  087F               	movf	btemp+1,w
  2661  1672  1683               	bsf	3,5	;RP0=1, select bank1
  2662  1673  1303               	bcf	3,6	;RP1=0, select bank1
  2663  1674  0587               	andwf	7,f	;volatile
  2664  1675                     l2946:
  2665                           
  2666                           ;HEATER.c: 21:     heater_off();
  2667  1675  160A  118A  25DE  160A  118A  	fcall	_heater_off
  2668  167A                     l122:
  2669  167A  0008               	return
  2670  167B                     __end_of_heater_init:
  2671                           
  2672                           	psect	text4
  2673  1663                     __ptext4:	
  2674 ;; *************** function _cooler_init *****************
  2675 ;; Defined at:
  2676 ;;		line 16 in file "COOLER.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2690 ;;      Params:         0       0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0
  2693 ;;      Totals:         0       0       0       0       0
  2694 ;;Total ram usage:        0 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    4
  2697 ;; This function calls:
  2698 ;;		_cooler_off
  2699 ;; This function is called by:
  2700 ;;		_Temp_Sens_Task_init
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function _cooler_init
  2706  1663                     _cooler_init:
  2707  1663                     l2938:	
  2708                           ;incstack = 0
  2709                           ; Regs used in _cooler_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2710                           
  2711                           
  2712                           ;COOLER.c: 19:     (TRISC &= ~(1<<2));
  2713  1663  30FB               	movlw	251
  2714  1664  00FF               	movwf	btemp+1
  2715  1665  087F               	movf	btemp+1,w
  2716  1666  1683               	bsf	3,5	;RP0=1, select bank1
  2717  1667  1303               	bcf	3,6	;RP1=0, select bank1
  2718  1668  0587               	andwf	7,f	;volatile
  2719  1669                     l2940:
  2720                           
  2721                           ;COOLER.c: 21:     cooler_off();
  2722  1669  160A  118A  25D7  160A  118A  	fcall	_cooler_off
  2723  166E                     l105:
  2724  166E  0008               	return
  2725  166F                     __end_of_cooler_init:
  2726                           
  2727                           	psect	text5
  2728  15FE                     __ptext5:	
  2729 ;; *************** function _LM35_init *****************
  2730 ;; Defined at:
  2731 ;;		line 13 in file "LM35.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		status,2, status,0, pclath, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2745 ;;      Params:         0       0       0       0       0
  2746 ;;      Locals:         0       0       0       0       0
  2747 ;;      Temps:          0       0       0       0       0
  2748 ;;      Totals:         0       0       0       0       0
  2749 ;;Total ram usage:        0 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; Hardware stack levels required when called:    4
  2752 ;; This function calls:
  2753 ;;		_ADC_init
  2754 ;; This function is called by:
  2755 ;;		_Temp_Sens_Task_init
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           
  2760                           ;psect for function _LM35_init
  2761  15FE                     _LM35_init:
  2762  15FE                     l3022:	
  2763                           ;incstack = 0
  2764                           ; Regs used in _LM35_init: [status,2+status,0+pclath+cstack]
  2765                           
  2766                           
  2767                           ;LM35.c: 15:     (PORTA |= (1<<2));
  2768  15FE  1283               	bcf	3,5	;RP0=0, select bank0
  2769  15FF  1303               	bcf	3,6	;RP1=0, select bank0
  2770  1600  1505               	bsf	5,2	;volatile
  2771  1601                     l3024:
  2772                           
  2773                           ;LM35.c: 16:     ADC_init();
  2774  1601  160A  118A  26A2  160A  118A  	fcall	_ADC_init
  2775  1606                     l232:
  2776  1606  0008               	return
  2777  1607                     __end_of_LM35_init:
  2778                           
  2779                           	psect	text6
  2780  16A2                     __ptext6:	
  2781 ;; *************** function _ADC_init *****************
  2782 ;; Defined at:
  2783 ;;		line 10 in file "ADC.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		status,2
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2797 ;;      Params:         0       0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0
  2799 ;;      Temps:          0       0       0       0       0
  2800 ;;      Totals:         0       0       0       0       0
  2801 ;;Total ram usage:        0 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    3
  2804 ;; This function calls:
  2805 ;;		Nothing
  2806 ;; This function is called by:
  2807 ;;		_LM35_init
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           
  2812                           ;psect for function _ADC_init
  2813  16A2                     _ADC_init:
  2814  16A2                     l2392:	
  2815                           ;incstack = 0
  2816                           ; Regs used in _ADC_init: [status,2]
  2817                           
  2818                           
  2819                           ;ADC.c: 18:     ADCON0 = 0x00;
  2820  16A2  1283               	bcf	3,5	;RP0=0, select bank0
  2821  16A3  1303               	bcf	3,6	;RP1=0, select bank0
  2822  16A4  019F               	clrf	31	;volatile
  2823                           
  2824                           ;ADC.c: 19:     ADCON1 = 0x00;
  2825  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2826  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2827  16A7  019F               	clrf	31	;volatile
  2828  16A8                     l2394:
  2829                           
  2830                           ;ADC.c: 20:     ADCON0 |= (1 << 6);
  2831  16A8  1283               	bcf	3,5	;RP0=0, select bank0
  2832  16A9  1303               	bcf	3,6	;RP1=0, select bank0
  2833  16AA  171F               	bsf	31,6	;volatile
  2834  16AB                     l2396:
  2835                           
  2836                           ;ADC.c: 21:     ADCON1 |= (1 << 6);
  2837  16AB  1683               	bsf	3,5	;RP0=1, select bank1
  2838  16AC  1303               	bcf	3,6	;RP1=0, select bank1
  2839  16AD  171F               	bsf	31,6	;volatile
  2840  16AE                     l2398:
  2841                           
  2842                           ;ADC.c: 23:     (ADCON0 |= (1<<0));
  2843  16AE  1283               	bcf	3,5	;RP0=0, select bank0
  2844  16AF  1303               	bcf	3,6	;RP1=0, select bank0
  2845  16B0  141F               	bsf	31,0	;volatile
  2846  16B1                     l2400:
  2847                           
  2848                           ;ADC.c: 24:     (ADCON1 |= (1<<7));
  2849  16B1  1683               	bsf	3,5	;RP0=1, select bank1
  2850  16B2  1303               	bcf	3,6	;RP1=0, select bank1
  2851  16B3  179F               	bsf	31,7	;volatile
  2852  16B4                     l211:
  2853  16B4  0008               	return
  2854  16B5                     __end_of_ADC_init:
  2855                           
  2856                           	psect	text7
  2857  1657                     __ptext7:	
  2858 ;; *************** function _LED_init *****************
  2859 ;; Defined at:
  2860 ;;		line 16 in file "LED.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2874 ;;      Params:         0       0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0
  2877 ;;      Totals:         0       0       0       0       0
  2878 ;;Total ram usage:        0 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    4
  2881 ;; This function calls:
  2882 ;;		_LED_off
  2883 ;; This function is called by:
  2884 ;;		_Temp_Sens_Task_init
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _LED_init
  2890  1657                     _LED_init:
  2891  1657                     l2930:	
  2892                           ;incstack = 0
  2893                           ; Regs used in _LED_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2894                           
  2895                           
  2896                           ;LED.c: 19:     (TRISB &= ~(1<<7));
  2897  1657  307F               	movlw	127
  2898  1658  00FF               	movwf	btemp+1
  2899  1659  087F               	movf	btemp+1,w
  2900  165A  1683               	bsf	3,5	;RP0=1, select bank1
  2901  165B  1303               	bcf	3,6	;RP1=0, select bank1
  2902  165C  0586               	andwf	6,f	;volatile
  2903  165D                     l2932:
  2904                           
  2905                           ;LED.c: 21:     LED_off();
  2906  165D  160A  118A  25C9  160A  118A  	fcall	_LED_off
  2907  1662                     l85:
  2908  1662  0008               	return
  2909  1663                     __end_of_LED_init:
  2910                           
  2911                           	psect	text8
  2912  161C                     __ptext8:	
  2913 ;; *************** function _SYSTEM_UPDATE_init *****************
  2914 ;; Defined at:
  2915 ;;		line 110 in file "SYSTEM_STATE_UPDATE_TASK.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2929 ;;      Params:         0       0       0       0       0
  2930 ;;      Locals:         0       0       0       0       0
  2931 ;;      Temps:          0       0       0       0       0
  2932 ;;      Totals:         0       0       0       0       0
  2933 ;;Total ram usage:        0 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    4
  2936 ;; This function calls:
  2937 ;;		_I2C_Master_Init
  2938 ;;		_keyboard_init
  2939 ;; This function is called by:
  2940 ;;		_SYSTEM_init
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           
  2945                           ;psect for function _SYSTEM_UPDATE_init
  2946  161C                     _SYSTEM_UPDATE_init:
  2947  161C                     l3068:	
  2948                           ;incstack = 0
  2949                           ; Regs used in _SYSTEM_UPDATE_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2950                           
  2951                           
  2952                           ;SYSTEM_STATE_UPDATE_TASK.c: 112:     keyboard_init();
  2953  161C  120A  118A  27F3  160A  118A  	fcall	_keyboard_init
  2954  1621                     l3070:
  2955                           
  2956                           ;SYSTEM_STATE_UPDATE_TASK.c: 113:     I2C_Master_Init();
  2957  1621  160A  118A  2695  160A  118A  	fcall	_I2C_Master_Init
  2958  1626                     l470:
  2959  1626  0008               	return
  2960  1627                     __end_of_SYSTEM_UPDATE_init:
  2961                           
  2962                           	psect	text9
  2963  07F3                     __ptext9:	
  2964 ;; *************** function _keyboard_init *****************
  2965 ;; Defined at:
  2966 ;;		line 33 in file "KEYBOARD.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0, btemp+1
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2980 ;;      Params:         0       0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0
  2982 ;;      Temps:          0       0       0       0       0
  2983 ;;      Totals:         0       0       0       0       0
  2984 ;;Total ram usage:        0 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    3
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_SYSTEM_UPDATE_init
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _keyboard_init
  2996  07F3                     _keyboard_init:
  2997  07F3                     l2950:	
  2998                           ;incstack = 0
  2999                           ; Regs used in _keyboard_init: [wreg+status,2+status,0+btemp+1]
  3000                           
  3001                           
  3002                           ;KEYBOARD.c: 36:     TRISB |= (1 << 0) | (1 << 2) | (1 << 1);
  3003  07F3  3007               	movlw	7
  3004  07F4  00FF               	movwf	btemp+1
  3005  07F5  087F               	movf	btemp+1,w
  3006  07F6  1683               	bsf	3,5	;RP0=1, select bank1
  3007  07F7  1303               	bcf	3,6	;RP1=0, select bank1
  3008  07F8  0486               	iorwf	6,f	;volatile
  3009  07F9                     l2952:
  3010                           
  3011                           ;KEYBOARD.c: 38:     UP_SW_pressed_st = 0;
  3012  07F9  01FD               	clrf	_UP_SW_pressed_st
  3013  07FA                     l2954:
  3014                           
  3015                           ;KEYBOARD.c: 39:     DOWN_SW_pressed_st = 0;
  3016  07FA  01FC               	clrf	_DOWN_SW_pressed_st
  3017  07FB                     l2956:
  3018                           
  3019                           ;KEYBOARD.c: 40:     UP_Sw_press_duration_G = 0;
  3020  07FB  01C4               	clrf	_UP_Sw_press_duration_G^(0+128)
  3021  07FC                     l2958:
  3022                           
  3023                           ;KEYBOARD.c: 41:     UP_Sw_blocked_G = 0;
  3024  07FC  01C2               	clrf	_UP_Sw_blocked_G^(0+128)
  3025  07FD                     l2960:
  3026                           
  3027                           ;KEYBOARD.c: 42:     DOWN_Sw_press_duration_G = 0;
  3028  07FD  01C3               	clrf	_DOWN_Sw_press_duration_G^(0+128)
  3029  07FE                     l2962:
  3030                           
  3031                           ;KEYBOARD.c: 43:     DOWN_Sw_blocked_G = 0;
  3032  07FE  01C1               	clrf	_DOWN_Sw_blocked_G^(0+128)
  3033  07FF                     l151:
  3034  07FF  0008               	return
  3035  0800                     __end_of_keyboard_init:
  3036                           
  3037                           	psect	text10
  3038  1695                     __ptext10:	
  3039 ;; *************** function _I2C_Master_Init *****************
  3040 ;; Defined at:
  3041 ;;		line 15 in file "I2C.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0
  3058 ;;      Totals:         0       0       0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    3
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_SYSTEM_UPDATE_init
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _I2C_Master_Init
  3071  1695                     _I2C_Master_Init:
  3072  1695                     l3042:	
  3073                           ;incstack = 0
  3074                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3075                           
  3076                           
  3077                           ;I2C.c: 17:     SSPCON = 0x28;
  3078  1695  3028               	movlw	40
  3079  1696  1283               	bcf	3,5	;RP0=0, select bank0
  3080  1697  1303               	bcf	3,6	;RP1=0, select bank0
  3081  1698  0094               	movwf	20	;volatile
  3082  1699                     l3044:
  3083                           
  3084                           ;I2C.c: 18:     SSPCON2 = 0x00;
  3085  1699  1683               	bsf	3,5	;RP0=1, select bank1
  3086  169A  1303               	bcf	3,6	;RP1=0, select bank1
  3087  169B  0191               	clrf	17	;volatile
  3088  169C                     l3046:
  3089                           
  3090                           ;I2C.c: 19:     SSPSTAT = 0x00;
  3091  169C  0194               	clrf	20	;volatile
  3092                           
  3093                           ;I2C.c: 20:     SSPADD = (((8000000UL) / 4) / 100000) - 1;
  3094  169D  3013               	movlw	19
  3095  169E  0093               	movwf	19	;volatile
  3096  169F                     l3048:
  3097                           
  3098                           ;I2C.c: 21:     TRISCbits.TRISC3 = 1;
  3099  169F  1587               	bsf	7,3	;volatile
  3100  16A0                     l3050:
  3101                           
  3102                           ;I2C.c: 22:     TRISCbits.TRISC4 = 1;
  3103  16A0  1607               	bsf	7,4	;volatile
  3104  16A1                     l529:
  3105  16A1  0008               	return
  3106  16A2                     __end_of_I2C_Master_Init:
  3107                           
  3108                           	psect	text11
  3109  1607                     __ptext11:	
  3110 ;; *************** function _EXT_INT_RB0_init *****************
  3111 ;; Defined at:
  3112 ;;		line 10 in file "EXT_INT_RB0.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, btemp+1
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3126 ;;      Params:         0       0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0
  3129 ;;      Totals:         0       0       0       0       0
  3130 ;;Total ram usage:        0 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    3
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_SYSTEM_init
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           
  3141                           ;psect for function _EXT_INT_RB0_init
  3142  1607                     _EXT_INT_RB0_init:
  3143  1607                     l3078:	
  3144                           ;incstack = 0
  3145                           ; Regs used in _EXT_INT_RB0_init: [wreg+status,2+status,0+btemp+1]
  3146                           
  3147                           
  3148                           ;EXT_INT_RB0.c: 13:     (OPTION_REG |= (1<<6));
  3149  1607  1683               	bsf	3,5	;RP0=1, select bank1
  3150  1608  1303               	bcf	3,6	;RP1=0, select bank1
  3151  1609  1701               	bsf	1,6	;volatile
  3152  160A                     l3080:
  3153                           
  3154                           ;EXT_INT_RB0.c: 20:     (INTCON &= ~(1<<1));
  3155  160A  30FD               	movlw	253
  3156  160B  00FF               	movwf	btemp+1
  3157  160C  087F               	movf	btemp+1,w
  3158  160D  058B               	andwf	11,f	;volatile
  3159  160E                     l3082:
  3160                           
  3161                           ;EXT_INT_RB0.c: 23:     (INTCON |= (1<<6));
  3162  160E  170B               	bsf	11,6	;volatile
  3163  160F                     l3084:
  3164                           
  3165                           ;EXT_INT_RB0.c: 25:     (INTCON |= (1<<7));
  3166  160F  178B               	bsf	11,7	;volatile
  3167  1610                     l266:
  3168  1610  0008               	return
  3169  1611                     __end_of_EXT_INT_RB0_init:
  3170                           
  3171                           	psect	text12
  3172  15C3                     __ptext12:	
  3173 ;; *************** function _EXT_INT_RB0_EN *****************
  3174 ;; Defined at:
  3175 ;;		line 28 in file "EXT_INT_RB0.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0, btemp+1
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0
  3192 ;;      Totals:         0       0       0       0       0
  3193 ;;Total ram usage:        0 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    3
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_SYSTEM_init
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           
  3204                           ;psect for function _EXT_INT_RB0_EN
  3205  15C3                     _EXT_INT_RB0_EN:
  3206  15C3                     l3086:	
  3207                           ;incstack = 0
  3208                           ; Regs used in _EXT_INT_RB0_EN: [wreg+status,2+status,0+btemp+1]
  3209                           
  3210                           
  3211                           ;EXT_INT_RB0.c: 31:     (INTCON &= ~(1<<1));
  3212  15C3  30FD               	movlw	253
  3213  15C4  00FF               	movwf	btemp+1
  3214  15C5  087F               	movf	btemp+1,w
  3215  15C6  058B               	andwf	11,f	;volatile
  3216  15C7                     l3088:
  3217                           
  3218                           ;EXT_INT_RB0.c: 33:     (INTCON |= (1<<4));
  3219  15C7  160B               	bsf	11,4	;volatile
  3220  15C8                     l269:
  3221  15C8  0008               	return
  3222  15C9                     __end_of_EXT_INT_RB0_EN:
  3223                           
  3224                           	psect	text13
  3225  15BD                     __ptext13:	
  3226 ;; *************** function _DISPLAY_TASK_init *****************
  3227 ;; Defined at:
  3228 ;;		line 16 in file "DISPLAY_TASK.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    4
  3249 ;; This function calls:
  3250 ;;		_SSD_init
  3251 ;; This function is called by:
  3252 ;;		_SYSTEM_init
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function _DISPLAY_TASK_init
  3258  15BD                     _DISPLAY_TASK_init:
  3259  15BD                     l3076:	
  3260                           ;incstack = 0
  3261                           ; Regs used in _DISPLAY_TASK_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3262                           
  3263                           
  3264                           ;DISPLAY_TASK.c: 18:     SSD_init();
  3265  15BD  160A  118A  25E5  160A  118A  	fcall	_SSD_init
  3266  15C2                     l491:
  3267  15C2  0008               	return
  3268  15C3                     __end_of_DISPLAY_TASK_init:
  3269                           
  3270                           	psect	text14
  3271  15E5                     __ptext14:	
  3272 ;; *************** function _SSD_init *****************
  3273 ;; Defined at:
  3274 ;;		line 36 in file "SSD.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0, btemp+1
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3288 ;;      Params:         0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0
  3291 ;;      Totals:         0       0       0       0       0
  3292 ;;Total ram usage:        0 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    3
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_DISPLAY_TASK_init
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function _SSD_init
  3304  15E5                     _SSD_init:
  3305  15E5                     l3012:	
  3306                           ;incstack = 0
  3307                           ; Regs used in _SSD_init: [wreg+status,2+status,0+btemp+1]
  3308                           
  3309                           
  3310                           ;SSD.c: 39:     TRISD = 0x00;
  3311  15E5  1683               	bsf	3,5	;RP0=1, select bank1
  3312  15E6  1303               	bcf	3,6	;RP1=0, select bank1
  3313  15E7  0188               	clrf	8	;volatile
  3314  15E8                     l3014:
  3315                           
  3316                           ;SSD.c: 41:     TRISA &= ~((1 << 5) | (1 << 4));
  3317  15E8  30CF               	movlw	207
  3318  15E9  00FF               	movwf	btemp+1
  3319  15EA  087F               	movf	btemp+1,w
  3320  15EB  0585               	andwf	5,f	;volatile
  3321  15EC                     l180:
  3322  15EC  0008               	return
  3323  15ED                     __end_of_SSD_init:
  3324                           
  3325                           	psect	text15
  3326  17CE                     __ptext15:	
  3327 ;; *************** function _SCH_init_TMR1 *****************
  3328 ;; Defined at:
  3329 ;;		line 15 in file "SCH_PIC16F877A.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  i               1    4[BANK0 ] unsigned char 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3343 ;;      Params:         0       0       0       0       0
  3344 ;;      Locals:         0       1       0       0       0
  3345 ;;      Temps:          0       0       0       0       0
  3346 ;;      Totals:         0       1       0       0       0
  3347 ;;Total ram usage:        1 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    5
  3350 ;; This function calls:
  3351 ;;		_SCH_Delete_Task
  3352 ;;		_TMR1_OVFINT_init
  3353 ;;		_TMR1_init
  3354 ;;		_TMR1_start
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _SCH_init_TMR1
  3362  17CE                     _SCH_init_TMR1:
  3363  17CE                     l3324:	
  3364                           ;incstack = 0
  3365                           ; Regs used in _SCH_init_TMR1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3366                           
  3367                           
  3368                           ;SCH_PIC16F877A.c: 17:     uint8 i;;SCH_PIC16F877A.c: 18:     for (i = 0; i < (3); i++)
  3369  17CE  1283               	bcf	3,5	;RP0=0, select bank0
  3370  17CF  1303               	bcf	3,6	;RP1=0, select bank0
  3371  17D0  01A4               	clrf	SCH_init_TMR1@i
  3372  17D1                     l3330:
  3373                           
  3374                           ;SCH_PIC16F877A.c: 19:         SCH_Delete_Task(i);
  3375  17D1  0824               	movf	SCH_init_TMR1@i,w
  3376  17D2  120A  158A  2237  160A  118A  	fcall	_SCH_Delete_Task
  3377  17D7                     l3332:
  3378  17D7  3001               	movlw	1
  3379  17D8  00FF               	movwf	btemp+1
  3380  17D9  087F               	movf	btemp+1,w
  3381  17DA  1283               	bcf	3,5	;RP0=0, select bank0
  3382  17DB  1303               	bcf	3,6	;RP1=0, select bank0
  3383  17DC  07A4               	addwf	SCH_init_TMR1@i,f
  3384  17DD                     l3334:
  3385  17DD  3003               	movlw	3
  3386  17DE  0224               	subwf	SCH_init_TMR1@i,w
  3387  17DF  1C03               	skipc
  3388  17E0  2FE2               	goto	u3671
  3389  17E1  2FE3               	goto	u3670
  3390  17E2                     u3671:
  3391  17E2  2FD1               	goto	l3330
  3392  17E3                     u3670:
  3393  17E3                     l3336:
  3394                           
  3395                           ;SCH_PIC16F877A.c: 22:     ERROR_Code = 0;
  3396  17E3  1683               	bsf	3,5	;RP0=1, select bank1
  3397  17E4  1303               	bcf	3,6	;RP1=0, select bank1
  3398  17E5  01BF               	clrf	_ERROR_Code^(0+128)
  3399  17E6                     l3338:
  3400                           
  3401                           ;SCH_PIC16F877A.c: 25:     TMR1_init();
  3402  17E6  120A  158A  2001  160A  118A  	fcall	_TMR1_init
  3403  17EB                     l3340:
  3404                           
  3405                           ;SCH_PIC16F877A.c: 26:     TMR1_OVFINT_init();
  3406  17EB  160A  118A  264B  160A  118A  	fcall	_TMR1_OVFINT_init
  3407  17F0                     l3342:
  3408                           
  3409                           ;SCH_PIC16F877A.c: 28:     (INTCON &= ~(1<<7));
  3410  17F0  307F               	movlw	127
  3411  17F1  00FF               	movwf	btemp+1
  3412  17F2  087F               	movf	btemp+1,w
  3413  17F3  058B               	andwf	11,f	;volatile
  3414  17F4                     l3344:
  3415                           
  3416                           ;SCH_PIC16F877A.c: 34:     TMR1 = (65536-((8000000UL)/(4*1))*((5)/1000.0));
  3417  17F4  30D8               	movlw	216
  3418  17F5  1283               	bcf	3,5	;RP0=0, select bank0
  3419  17F6  1303               	bcf	3,6	;RP1=0, select bank0
  3420  17F7  008F               	movwf	15	;volatile
  3421  17F8  30F0               	movlw	240
  3422  17F9  008E               	movwf	14	;volatile
  3423  17FA                     l3346:
  3424                           
  3425                           ;SCH_PIC16F877A.c: 37:     TMR1_start();
  3426  17FA  160A  118A  25B5  160A  118A  	fcall	_TMR1_start
  3427  17FF                     l314:
  3428  17FF  0008               	return
  3429  1800                     __end_of_SCH_init_TMR1:
  3430                           
  3431                           	psect	text16
  3432  15B5                     __ptext16:	
  3433 ;; *************** function _TMR1_start *****************
  3434 ;; Defined at:
  3435 ;;		line 41 in file "TIMER1.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		None
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3449 ;;      Params:         0       0       0       0       0
  3450 ;;      Locals:         0       0       0       0       0
  3451 ;;      Temps:          0       0       0       0       0
  3452 ;;      Totals:         0       0       0       0       0
  3453 ;;Total ram usage:        0 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    3
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_SCH_init_TMR1
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           
  3464                           ;psect for function _TMR1_start
  3465  15B5                     _TMR1_start:
  3466  15B5                     l3106:	
  3467                           ;incstack = 0
  3468                           ; Regs used in _TMR1_start: []
  3469                           
  3470                           
  3471                           ;TIMER1.c: 43:     (T1CON |= (1<<0));
  3472  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  3473  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  3474  15B7  1410               	bsf	16,0	;volatile
  3475  15B8                     l256:
  3476  15B8  0008               	return
  3477  15B9                     __end_of_TMR1_start:
  3478                           
  3479                           	psect	text17
  3480  0801                     __ptext17:	
  3481 ;; *************** function _TMR1_init *****************
  3482 ;; Defined at:
  3483 ;;		line 10 in file "TIMER1.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, btemp+1
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0
  3500 ;;      Totals:         0       0       0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    3
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_SCH_init_TMR1
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _TMR1_init
  3513  0801                     _TMR1_init:
  3514  0801                     l3090:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _TMR1_init: [wreg+status,2+status,0+btemp+1]
  3517                           
  3518                           
  3519                           ;TIMER1.c: 13:     TMR1 = 0x00;
  3520  0801  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0802  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0803  018E               	clrf	14	;volatile
  3523  0804  018F               	clrf	15	;volatile
  3524  0805                     l3092:
  3525                           
  3526                           ;TIMER1.c: 15:     (T1CON &= ~(1<<1));
  3527  0805  30FD               	movlw	253
  3528  0806  00FF               	movwf	btemp+1
  3529  0807  087F               	movf	btemp+1,w
  3530  0808  0590               	andwf	16,f	;volatile
  3531  0809                     l3094:
  3532                           
  3533                           ;TIMER1.c: 17:     T1CON &= ~((1 << 5) | (1 << 4));
  3534  0809  30CF               	movlw	207
  3535  080A  00FF               	movwf	btemp+1
  3536  080B  087F               	movf	btemp+1,w
  3537  080C  0590               	andwf	16,f	;volatile
  3538  080D                     l3096:
  3539                           
  3540                           ;TIMER1.c: 19:     T1CON &= ~((1 << 5) | (1 << 4));
  3541  080D  30CF               	movlw	207
  3542  080E  00FF               	movwf	btemp+1
  3543  080F  087F               	movf	btemp+1,w
  3544  0810  0590               	andwf	16,f	;volatile
  3545  0811                     l250:
  3546  0811  0008               	return
  3547  0812                     __end_of_TMR1_init:
  3548                           
  3549                           	psect	text18
  3550  164B                     __ptext18:	
  3551 ;; *************** function _TMR1_OVFINT_init *****************
  3552 ;; Defined at:
  3553 ;;		line 29 in file "TIMER1.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, btemp+1
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3567 ;;      Params:         0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0
  3570 ;;      Totals:         0       0       0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    3
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_SCH_init_TMR1
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           
  3582                           ;psect for function _TMR1_OVFINT_init
  3583  164B                     _TMR1_OVFINT_init:
  3584  164B                     l3098:	
  3585                           ;incstack = 0
  3586                           ; Regs used in _TMR1_OVFINT_init: [wreg+status,2+status,0+btemp+1]
  3587                           
  3588                           
  3589                           ;TIMER1.c: 32:     (PIR1 &= ~(1<<0));
  3590  164B  30FE               	movlw	254
  3591  164C  00FF               	movwf	btemp+1
  3592  164D  087F               	movf	btemp+1,w
  3593  164E  1283               	bcf	3,5	;RP0=0, select bank0
  3594  164F  1303               	bcf	3,6	;RP1=0, select bank0
  3595  1650  058C               	andwf	12,f	;volatile
  3596  1651                     l3100:
  3597                           
  3598                           ;TIMER1.c: 34:     (PIE1 |= (1<<0));
  3599  1651  1683               	bsf	3,5	;RP0=1, select bank1
  3600  1652  1303               	bcf	3,6	;RP1=0, select bank1
  3601  1653  140C               	bsf	12,0	;volatile
  3602  1654                     l3102:
  3603                           
  3604                           ;TIMER1.c: 36:     (INTCON |= (1<<6));
  3605  1654  170B               	bsf	11,6	;volatile
  3606  1655                     l3104:
  3607                           
  3608                           ;TIMER1.c: 38:     (INTCON |= (1<<7));
  3609  1655  178B               	bsf	11,7	;volatile
  3610  1656                     l253:
  3611  1656  0008               	return
  3612  1657                     __end_of_TMR1_OVFINT_init:
  3613                           
  3614                           	psect	text19
  3615  15A7                     __ptext19:	
  3616 ;; *************** function _SCH_Start *****************
  3617 ;; Defined at:
  3618 ;;		line 146 in file "SCH_PIC16F877A.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		None
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3632 ;;      Params:         0       0       0       0       0
  3633 ;;      Locals:         0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0
  3635 ;;      Totals:         0       0       0       0       0
  3636 ;;Total ram usage:        0 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    3
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           
  3647                           ;psect for function _SCH_Start
  3648  15A7                     _SCH_Start:
  3649  15A7                     l3380:	
  3650                           ;incstack = 0
  3651                           ; Regs used in _SCH_Start: []
  3652                           
  3653                           
  3654                           ;SCH_PIC16F877A.c: 149:     (INTCON |= (1<<7));
  3655  15A7  178B               	bsf	11,7	;volatile
  3656  15A8                     l342:
  3657  15A8  0008               	return
  3658  15A9                     __end_of_SCH_Start:
  3659                           
  3660                           	psect	text20
  3661  0B00                     __ptext20:	
  3662 ;; *************** function _SCH_Dispatch_Tasks *****************
  3663 ;; Defined at:
  3664 ;;		line 122 in file "SCH_PIC16F877A.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;		None
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  Index           1   79[BANK0 ] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3678 ;;      Params:         0       0       0       0       0
  3679 ;;      Locals:         0       1       0       0       0
  3680 ;;      Temps:          0       0       2       0       0
  3681 ;;      Totals:         0       1       2       0       0
  3682 ;;Total ram usage:        3 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    7
  3685 ;; This function calls:
  3686 ;;		Absolute function
  3687 ;;		_DISPLAY_TASK
  3688 ;;		_SCH_Delete_Task
  3689 ;;		_SYSTEM_STATE_UPDATE_TASK
  3690 ;;		_Temp_Sens_Task
  3691 ;;		___bmul
  3692 ;; This function is called by:
  3693 ;;		_main
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _SCH_Dispatch_Tasks
  3699  0B00                     _SCH_Dispatch_Tasks:
  3700  0B00                     l3384:	
  3701                           ;incstack = 0
  3702                           ; Regs used in _SCH_Dispatch_Tasks: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3703                           
  3704                           
  3705                           ;SCH_PIC16F877A.c: 124:     uint8 Index;;SCH_PIC16F877A.c: 127:     for (Index = 0; Inde
      +                          x < (3); Index++)
  3706  0B00  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0B01  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0B02  01EF               	clrf	SCH_Dispatch_Tasks@Index
  3709  0B03                     l3390:
  3710                           
  3711                           ;SCH_PIC16F877A.c: 128:     {;SCH_PIC16F877A.c: 129:         if (SCH_tasks[Index].Run > 
      +                          0)
  3712  0B03  3006               	movlw	6
  3713  0B04  00FF               	movwf	btemp+1
  3714  0B05  087F               	movf	btemp+1,w
  3715  0B06  00A0               	movwf	___bmul@multiplicand
  3716  0B07  086F               	movf	SCH_Dispatch_Tasks@Index,w
  3717  0B08  160A  118A  26F6  120A  158A  	fcall	___bmul
  3718  0B0D  3EA5               	addlw	(low ((_SCH_tasks| 0+5)))& (0+255)
  3719  0B0E  0084               	movwf	4
  3720  0B0F  1383               	bcf	3,7	;select IRP bank1
  3721  0B10  0800               	movf	0,w
  3722  0B11  1903               	btfsc	3,2
  3723  0B12  2B14               	goto	u3721
  3724  0B13  2B15               	goto	u3720
  3725  0B14                     u3721:
  3726  0B14  2B5F               	goto	l3396
  3727  0B15                     u3720:
  3728  0B15                     l3392:
  3729                           
  3730                           ;SCH_PIC16F877A.c: 130:         {;SCH_PIC16F877A.c: 131:             (*SCH_tasks[Index].
      +                          ptr_Task)();
  3731  0B15  3006               	movlw	6
  3732  0B16  00FF               	movwf	btemp+1
  3733  0B17  087F               	movf	btemp+1,w
  3734  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0B1A  00A0               	movwf	___bmul@multiplicand
  3737  0B1B  086F               	movf	SCH_Dispatch_Tasks@Index,w
  3738  0B1C  160A  118A  26F6  120A  158A  	fcall	___bmul
  3739  0B21  3EA0               	addlw	(low (_SCH_tasks| 0))& (0+255)
  3740  0B22  0084               	movwf	4
  3741  0B23  1383               	bcf	3,7	;select IRP bank1
  3742  0B24  0800               	movf	0,w
  3743  0B25  120A  118A  203F  120A  158A  	fcall	fptable
  3744                           
  3745                           ;SCH_PIC16F877A.c: 132:             SCH_tasks[Index].Run--;
  3746  0B2A  3006               	movlw	6
  3747  0B2B  00FF               	movwf	btemp+1
  3748  0B2C  087F               	movf	btemp+1,w
  3749  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  3751  0B2F  00A0               	movwf	___bmul@multiplicand
  3752  0B30  086F               	movf	SCH_Dispatch_Tasks@Index,w
  3753  0B31  160A  118A  26F6  120A  158A  	fcall	___bmul
  3754  0B36  3EA5               	addlw	(low ((_SCH_tasks| 0+5)))& (0+255)
  3755  0B37  0084               	movwf	4
  3756  0B38  3001               	movlw	1
  3757  0B39  1383               	bcf	3,7	;select IRP bank1
  3758  0B3A  0280               	subwf	0,f
  3759                           
  3760                           ;SCH_PIC16F877A.c: 136:             if (SCH_tasks[Index].Period == 0)
  3761  0B3B  3006               	movlw	6
  3762  0B3C  00FF               	movwf	btemp+1
  3763  0B3D  087F               	movf	btemp+1,w
  3764  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0B40  00A0               	movwf	___bmul@multiplicand
  3767  0B41  086F               	movf	SCH_Dispatch_Tasks@Index,w
  3768  0B42  160A  118A  26F6  120A  158A  	fcall	___bmul
  3769  0B47  3EA3               	addlw	(low ((_SCH_tasks| 0+3)))& (0+255)
  3770  0B48  0084               	movwf	4
  3771  0B49  1383               	bcf	3,7	;select IRP bank1
  3772  0B4A  0800               	movf	0,w
  3773  0B4B  1683               	bsf	3,5	;RP0=1, select bank1
  3774  0B4C  1303               	bcf	3,6	;RP1=0, select bank1
  3775  0B4D  00E0               	movwf	??_SCH_Dispatch_Tasks^(0+128)
  3776  0B4E  0A84               	incf	4,f
  3777  0B4F  0800               	movf	0,w
  3778  0B50  00E1               	movwf	(??_SCH_Dispatch_Tasks^(0+128)+1)
  3779  0B51  0860               	movf	??_SCH_Dispatch_Tasks^(0+128),w
  3780  0B52  0461               	iorwf	(??_SCH_Dispatch_Tasks^(0+128)+1),w
  3781  0B53  1D03               	btfss	3,2
  3782  0B54  2B56               	goto	u3731
  3783  0B55  2B57               	goto	u3730
  3784  0B56                     u3731:
  3785  0B56  2B5F               	goto	l3396
  3786  0B57                     u3730:
  3787  0B57                     l3394:
  3788                           
  3789                           ;SCH_PIC16F877A.c: 137:                 SCH_Delete_Task(Index);
  3790  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  3791  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  3792  0B59  086F               	movf	SCH_Dispatch_Tasks@Index,w
  3793  0B5A  120A  158A  2237  120A  158A  	fcall	_SCH_Delete_Task
  3794  0B5F                     l3396:
  3795                           
  3796                           ;SCH_PIC16F877A.c: 139:     }
  3797  0B5F  3001               	movlw	1
  3798  0B60  00FF               	movwf	btemp+1
  3799  0B61  087F               	movf	btemp+1,w
  3800  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  3801  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  3802  0B64  07EF               	addwf	SCH_Dispatch_Tasks@Index,f
  3803  0B65                     l3398:
  3804  0B65  3003               	movlw	3
  3805  0B66  026F               	subwf	SCH_Dispatch_Tasks@Index,w
  3806  0B67  1C03               	skipc
  3807  0B68  2B6A               	goto	u3741
  3808  0B69  2B6B               	goto	u3740
  3809  0B6A                     u3741:
  3810  0B6A  2B03               	goto	l3390
  3811  0B6B                     u3740:
  3812  0B6B                     l339:
  3813  0B6B  0008               	return
  3814  0B6C                     __end_of_SCH_Dispatch_Tasks:
  3815                           
  3816                           	psect	text21
  3817  0940                     __ptext21:	
  3818 ;; *************** function _DISPLAY_TASK *****************
  3819 ;; Defined at:
  3820 ;;		line 21 in file "DISPLAY_TASK.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3834 ;;      Params:         0       0       0       0       0
  3835 ;;      Locals:         0       0       0       0       0
  3836 ;;      Temps:          0       2       0       0       0
  3837 ;;      Totals:         0       2       0       0       0
  3838 ;;Total ram usage:        2 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    5
  3841 ;; This function calls:
  3842 ;;		_SSD_print_2dig
  3843 ;;		_SSD_turn_off
  3844 ;; This function is called by:
  3845 ;;		_main
  3846 ;;		_SCH_Dispatch_Tasks
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           
  3851                           ;psect for function _DISPLAY_TASK
  3852  0940                     _DISPLAY_TASK:
  3853  0940                     l3266:	
  3854                           ;incstack = 0
  3855                           ; Regs used in _DISPLAY_TASK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3856                           
  3857                           
  3858                           ;DISPLAY_TASK.c: 24:     switch (System_state)
  3859  0940  2978               	goto	l3284
  3860  0941                     l3268:
  3861                           
  3862                           ;DISPLAY_TASK.c: 27:         SSD_print_2dig(avg_temp_in_C);
  3863  0941  1683               	bsf	3,5	;RP0=1, select bank1
  3864  0942  1303               	bcf	3,6	;RP1=0, select bank1
  3865  0943  083B               	movf	_avg_temp_in_C^(0+128),w
  3866  0944  120A  158A  218D  120A  158A  	fcall	_SSD_print_2dig
  3867                           
  3868                           ;DISPLAY_TASK.c: 28:         break;
  3869  0949  298C               	goto	l502
  3870  094A                     l3270:
  3871                           
  3872                           ;DISPLAY_TASK.c: 31:         if(++SSD_blinking_time == (120))
  3873  094A  3001               	movlw	1
  3874  094B  00FF               	movwf	btemp+1
  3875  094C  087F               	movf	btemp+1,w
  3876  094D  1683               	bsf	3,5	;RP0=1, select bank1
  3877  094E  1303               	bcf	3,6	;RP1=0, select bank1
  3878  094F  07B7               	addwf	_SSD_blinking_time^(0+128),f
  3879  0950  3078               	movlw	120
  3880  0951  0637               	xorwf	_SSD_blinking_time^(0+128),w
  3881  0952  1D03               	btfss	3,2
  3882  0953  2955               	goto	u3591
  3883  0954  2956               	goto	u3590
  3884  0955                     u3591:
  3885  0955  2961               	goto	l3276
  3886  0956                     u3590:
  3887  0956                     l3272:
  3888                           
  3889                           ;DISPLAY_TASK.c: 32:         {;DISPLAY_TASK.c: 34:             blinking_state = !blinkin
      +                          g_state;
  3890  0956  0836               	movf	_blinking_state^(0+128),w
  3891  0957  1903               	btfsc	3,2
  3892  0958  295A               	goto	u3601
  3893  0959  295C               	goto	u3600
  3894  095A                     u3601:
  3895  095A  3001               	movlw	1
  3896  095B  295D               	goto	u3610
  3897  095C                     u3600:
  3898  095C  3000               	movlw	0
  3899  095D                     u3610:
  3900  095D  00FF               	movwf	btemp+1
  3901  095E  087F               	movf	btemp+1,w
  3902  095F  00B6               	movwf	_blinking_state^(0+128)
  3903  0960                     l3274:
  3904                           
  3905                           ;DISPLAY_TASK.c: 35:             SSD_blinking_time = 0;
  3906  0960  01B7               	clrf	_SSD_blinking_time^(0+128)
  3907  0961                     l3276:
  3908                           
  3909                           ;DISPLAY_TASK.c: 37:         if(blinking_state == (!0))
  3910  0961  0336               	decf	_blinking_state^(0+128),w
  3911  0962  1D03               	btfss	3,2
  3912  0963  2965               	goto	u3621
  3913  0964  2966               	goto	u3620
  3914  0965                     u3621:
  3915  0965  296D               	goto	l3280
  3916  0966                     u3620:
  3917  0966                     l3278:
  3918                           
  3919                           ;DISPLAY_TASK.c: 38:         {;DISPLAY_TASK.c: 39:             SSD_print_2dig(Set_temp);
  3920  0966  0846               	movf	_Set_temp^(0+128),w
  3921  0967  120A  158A  218D  120A  158A  	fcall	_SSD_print_2dig
  3922                           
  3923                           ;DISPLAY_TASK.c: 40:         }
  3924  096C  298C               	goto	l502
  3925  096D                     l3280:
  3926  096D  0836               	movf	_blinking_state^(0+128),w
  3927  096E  1D03               	btfss	3,2
  3928  096F  2971               	goto	u3631
  3929  0970  2972               	goto	u3630
  3930  0971                     u3631:
  3931  0971  298C               	goto	l502
  3932  0972                     u3630:
  3933  0972                     l3282:
  3934                           
  3935                           ;DISPLAY_TASK.c: 43:         {;DISPLAY_TASK.c: 44:             SSD_turn_off();
  3936  0972  160A  118A  2611  120A  158A  	fcall	_SSD_turn_off
  3937  0977  298C               	goto	l502
  3938  0978                     l3284:
  3939  0978  1683               	bsf	3,5	;RP0=1, select bank1
  3940  0979  1303               	bcf	3,6	;RP1=0, select bank1
  3941  097A  0868               	movf	_System_state^(0+128),w
  3942  097B  1283               	bcf	3,5	;RP0=0, select bank0
  3943  097C  1303               	bcf	3,6	;RP1=0, select bank0
  3944  097D  00AB               	movwf	??_DISPLAY_TASK
  3945  097E  01AC               	clrf	??_DISPLAY_TASK+1
  3946                           
  3947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3948                           ; Switch size 1, requested type "simple"
  3949                           ; Number of cases is 1, Range of values is 0 to 0
  3950                           ; switch strategies available:
  3951                           ; Name         Instructions Cycles
  3952                           ; simple_byte            4     3 (average)
  3953                           ; direct_byte           11     8 (fixed)
  3954                           ; jumptable            260     6 (fixed)
  3955                           ;	Chosen strategy is simple_byte
  3956  097F  082C               	movf	??_DISPLAY_TASK+1,w
  3957  0980  3A00               	xorlw	0	; case 0
  3958  0981  1903               	skipnz
  3959  0982  2984               	goto	l3650
  3960  0983  298C               	goto	l502
  3961  0984                     l3650:
  3962                           
  3963                           ; Switch size 1, requested type "simple"
  3964                           ; Number of cases is 2, Range of values is 1 to 2
  3965                           ; switch strategies available:
  3966                           ; Name         Instructions Cycles
  3967                           ; simple_byte            7     4 (average)
  3968                           ; direct_byte           17    11 (fixed)
  3969                           ; jumptable            263     9 (fixed)
  3970                           ;	Chosen strategy is simple_byte
  3971  0984  082B               	movf	??_DISPLAY_TASK,w
  3972  0985  3A01               	xorlw	1	; case 1
  3973  0986  1903               	skipnz
  3974  0987  2941               	goto	l3268
  3975  0988  3A03               	xorlw	3	; case 2
  3976  0989  1903               	skipnz
  3977  098A  294A               	goto	l3270
  3978  098B  298C               	goto	l502
  3979  098C                     l502:
  3980  098C  0008               	return
  3981  098D                     __end_of_DISPLAY_TASK:
  3982                           
  3983                           	psect	text22
  3984  06FF                     __ptext22:	
  3985 ;; *************** function _SYSTEM_STATE_UPDATE_TASK *****************
  3986 ;; Defined at:
  3987 ;;		line 31 in file "SYSTEM_STATE_UPDATE_TASK.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4001 ;;      Params:         0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0
  4003 ;;      Temps:          0       2       0       0       0
  4004 ;;      Totals:         0       2       0       0       0
  4005 ;;Total ram usage:        2 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; Hardware stack levels required when called:    6
  4008 ;; This function calls:
  4009 ;;		_DOWN_switch_update
  4010 ;;		_EEPROM_Write
  4011 ;;		_UP_switch_update
  4012 ;; This function is called by:
  4013 ;;		_main
  4014 ;;		_SCH_Dispatch_Tasks
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           
  4019                           ;psect for function _SYSTEM_STATE_UPDATE_TASK
  4020  06FF                     _SYSTEM_STATE_UPDATE_TASK:
  4021  06FF                     l3190:	
  4022                           ;incstack = 0
  4023                           ; Regs used in _SYSTEM_STATE_UPDATE_TASK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  4024                           
  4025                           
  4026                           ;SYSTEM_STATE_UPDATE_TASK.c: 34:     UP_switch_update();
  4027  06FF  120A  118A  27BD  120A  118A  	fcall	_UP_switch_update
  4028                           
  4029                           ;SYSTEM_STATE_UPDATE_TASK.c: 35:     DOWN_switch_update();
  4030  0704  120A  158A  207B  120A  118A  	fcall	_DOWN_switch_update
  4031                           
  4032                           ;SYSTEM_STATE_UPDATE_TASK.c: 37:     switch (System_state)
  4033  0709  2FA8               	goto	l3252
  4034  070A                     l3192:
  4035                           
  4036                           ;SYSTEM_STATE_UPDATE_TASK.c: 40:         if ((UP_SW_pressed_st == (!0)) || (DOWN_SW_pres
      +                          sed_st == (!0)))
  4037  070A  037D               	decf	_UP_SW_pressed_st,w
  4038  070B  1903               	btfsc	3,2
  4039  070C  2F0E               	goto	u3501
  4040  070D  2F0F               	goto	u3500
  4041  070E                     u3501:
  4042  070E  2F14               	goto	l3196
  4043  070F                     u3500:
  4044  070F                     l3194:
  4045  070F  037C               	decf	_DOWN_SW_pressed_st,w
  4046  0710  1D03               	btfss	3,2
  4047  0711  2F13               	goto	u3511
  4048  0712  2F14               	goto	u3510
  4049  0713                     u3511:
  4050  0713  2FBC               	goto	l467
  4051  0714                     u3510:
  4052  0714                     l3196:
  4053                           
  4054                           ;SYSTEM_STATE_UPDATE_TASK.c: 41:         {;SYSTEM_STATE_UPDATE_TASK.c: 42:             S
      +                          ystem_state = 2;
  4055  0714  3002               	movlw	2
  4056  0715  00FF               	movwf	btemp+1
  4057  0716  087F               	movf	btemp+1,w
  4058  0717  1683               	bsf	3,5	;RP0=1, select bank1
  4059  0718  1303               	bcf	3,6	;RP1=0, select bank1
  4060  0719  00E8               	movwf	_System_state^(0+128)
  4061  071A                     l3198:
  4062                           
  4063                           ;SYSTEM_STATE_UPDATE_TASK.c: 44:             UP_SW_pressed_st = 0;
  4064  071A  01FD               	clrf	_UP_SW_pressed_st
  4065  071B                     l3200:
  4066                           
  4067                           ;SYSTEM_STATE_UPDATE_TASK.c: 45:             DOWN_SW_pressed_st = 0;
  4068  071B  01FC               	clrf	_DOWN_SW_pressed_st
  4069  071C  2FBC               	goto	l467
  4070  071D                     l3202:
  4071                           
  4072                           ;SYSTEM_STATE_UPDATE_TASK.c: 50:         if ((UP_SW_pressed_st == 0) && (DOWN_SW_pressed
      +                          _st == 0))
  4073  071D  087D               	movf	_UP_SW_pressed_st,w
  4074  071E  1D03               	btfss	3,2
  4075  071F  2F21               	goto	u3521
  4076  0720  2F22               	goto	u3520
  4077  0721                     u3521:
  4078  0721  2F37               	goto	l3212
  4079  0722                     u3520:
  4080  0722                     l3204:
  4081  0722  087C               	movf	_DOWN_SW_pressed_st,w
  4082  0723  1D03               	btfss	3,2
  4083  0724  2F26               	goto	u3531
  4084  0725  2F27               	goto	u3530
  4085  0726                     u3531:
  4086  0726  2F37               	goto	l3212
  4087  0727                     u3530:
  4088  0727                     l3206:
  4089                           
  4090                           ;SYSTEM_STATE_UPDATE_TASK.c: 51:         {;SYSTEM_STATE_UPDATE_TASK.c: 52:             i
      +                          f (++Timeout_button == (250))
  4091  0727  3001               	movlw	1
  4092  0728  00FF               	movwf	btemp+1
  4093  0729  087F               	movf	btemp+1,w
  4094  072A  1683               	bsf	3,5	;RP0=1, select bank1
  4095  072B  1303               	bcf	3,6	;RP1=0, select bank1
  4096  072C  07B8               	addwf	_Timeout_button^(0+128),f
  4097  072D  30FA               	movlw	250
  4098  072E  0638               	xorwf	_Timeout_button^(0+128),w
  4099  072F  1D03               	btfss	3,2
  4100  0730  2F32               	goto	u3541
  4101  0731  2F33               	goto	u3540
  4102  0732                     u3541:
  4103  0732  2F91               	goto	l3250
  4104  0733                     u3540:
  4105  0733                     l3208:
  4106                           
  4107                           ;SYSTEM_STATE_UPDATE_TASK.c: 53:             {;SYSTEM_STATE_UPDATE_TASK.c: 54:          
      +                                 System_state = 1;
  4108  0733  01E8               	clrf	_System_state^(0+128)
  4109  0734  0AE8               	incf	_System_state^(0+128),f
  4110  0735                     l3210:
  4111                           
  4112                           ;SYSTEM_STATE_UPDATE_TASK.c: 55:                 Timeout_button = 0;
  4113  0735  01B8               	clrf	_Timeout_button^(0+128)
  4114                           
  4115                           ;SYSTEM_STATE_UPDATE_TASK.c: 57:                 break;
  4116  0736  2FBC               	goto	l467
  4117  0737                     l3212:
  4118                           
  4119                           ;SYSTEM_STATE_UPDATE_TASK.c: 62:         {;SYSTEM_STATE_UPDATE_TASK.c: 63:             i
      +                          f (UP_SW_pressed_st == (!0))
  4120  0737  037D               	decf	_UP_SW_pressed_st,w
  4121  0738  1D03               	btfss	3,2
  4122  0739  2F3B               	goto	u3551
  4123  073A  2F3C               	goto	u3550
  4124  073B                     u3551:
  4125  073B  2F43               	goto	l3218
  4126  073C                     u3550:
  4127  073C                     l3214:
  4128                           
  4129                           ;SYSTEM_STATE_UPDATE_TASK.c: 64:             {;SYSTEM_STATE_UPDATE_TASK.c: 65:          
      +                                 Read_Button_state = 2;
  4130  073C  3002               	movlw	2
  4131  073D  00FF               	movwf	btemp+1
  4132  073E  087F               	movf	btemp+1,w
  4133  073F  1683               	bsf	3,5	;RP0=1, select bank1
  4134  0740  1303               	bcf	3,6	;RP1=0, select bank1
  4135  0741  00B9               	movwf	_Read_Button_state^(0+128)
  4136  0742                     l3216:
  4137                           
  4138                           ;SYSTEM_STATE_UPDATE_TASK.c: 66:                 Timeout_button = 0;
  4139  0742  01B8               	clrf	_Timeout_button^(0+128)
  4140  0743                     l3218:
  4141                           
  4142                           ;SYSTEM_STATE_UPDATE_TASK.c: 69:             if (DOWN_SW_pressed_st == (!0))
  4143  0743  037C               	decf	_DOWN_SW_pressed_st,w
  4144  0744  1D03               	btfss	3,2
  4145  0745  2F47               	goto	u3561
  4146  0746  2F48               	goto	u3560
  4147  0747                     u3561:
  4148  0747  2F91               	goto	l3250
  4149  0748                     u3560:
  4150  0748                     l3220:
  4151                           
  4152                           ;SYSTEM_STATE_UPDATE_TASK.c: 70:             {;SYSTEM_STATE_UPDATE_TASK.c: 71:          
      +                                 Read_Button_state = 4;
  4153  0748  3004               	movlw	4
  4154  0749  00FF               	movwf	btemp+1
  4155  074A  087F               	movf	btemp+1,w
  4156  074B  1683               	bsf	3,5	;RP0=1, select bank1
  4157  074C  1303               	bcf	3,6	;RP1=0, select bank1
  4158  074D  00B9               	movwf	_Read_Button_state^(0+128)
  4159  074E                     l3222:
  4160                           
  4161                           ;SYSTEM_STATE_UPDATE_TASK.c: 72:                 Timeout_button = 0;
  4162  074E  01B8               	clrf	_Timeout_button^(0+128)
  4163  074F  2F91               	goto	l3250
  4164  0750                     l3224:
  4165                           
  4166                           ;SYSTEM_STATE_UPDATE_TASK.c: 81:             UP_SW_pressed_st = 0;
  4167  0750  01FD               	clrf	_UP_SW_pressed_st
  4168  0751                     l3226:
  4169                           
  4170                           ;SYSTEM_STATE_UPDATE_TASK.c: 82:             Read_Button_state = 5;
  4171  0751  3005               	movlw	5
  4172  0752  00FF               	movwf	btemp+1
  4173  0753  087F               	movf	btemp+1,w
  4174  0754  1683               	bsf	3,5	;RP0=1, select bank1
  4175  0755  1303               	bcf	3,6	;RP1=0, select bank1
  4176  0756  00B9               	movwf	_Read_Button_state^(0+128)
  4177  0757                     l3228:
  4178                           
  4179                           ;SYSTEM_STATE_UPDATE_TASK.c: 83:             if (Set_temp >= 75)
  4180  0757  0846               	movf	_Set_temp^(0+128),w
  4181  0758  3A80               	xorlw	128
  4182  0759  3E35               	addlw	-203
  4183  075A  1C03               	skipc
  4184  075B  2F5D               	goto	u3571
  4185  075C  2F5E               	goto	u3570
  4186  075D                     u3571:
  4187  075D  2F63               	goto	l3232
  4188  075E                     u3570:
  4189  075E                     l3230:
  4190                           
  4191                           ;SYSTEM_STATE_UPDATE_TASK.c: 84:                 Set_temp = 75;
  4192  075E  304B               	movlw	75
  4193  075F  00FF               	movwf	btemp+1
  4194  0760  087F               	movf	btemp+1,w
  4195  0761  00C6               	movwf	_Set_temp^(0+128)
  4196  0762  2F67               	goto	l3234
  4197  0763                     l3232:
  4198                           
  4199                           ;SYSTEM_STATE_UPDATE_TASK.c: 86:                 Set_temp += 5;
  4200  0763  3005               	movlw	5
  4201  0764  00FF               	movwf	btemp+1
  4202  0765  087F               	movf	btemp+1,w
  4203  0766  07C6               	addwf	_Set_temp^(0+128),f
  4204  0767                     l3234:
  4205                           
  4206                           ;SYSTEM_STATE_UPDATE_TASK.c: 87:             EEPROM_Write(0x00, Set_temp);
  4207  0767  3000               	movlw	0
  4208  0768  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0769  1303               	bcf	3,6	;RP1=0, select bank0
  4210  076A  00A2               	movwf	EEPROM_Write@add
  4211  076B  00A3               	movwf	EEPROM_Write@add+1
  4212  076C  1683               	bsf	3,5	;RP0=1, select bank1
  4213  076D  1303               	bcf	3,6	;RP1=0, select bank1
  4214  076E  0846               	movf	_Set_temp^(0+128),w
  4215  076F  00FF               	movwf	btemp+1
  4216  0770  087F               	movf	btemp+1,w
  4217  0771  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0772  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0773  00A4               	movwf	EEPROM_Write@data
  4220  0774  120A  158A  2012  120A  118A  	fcall	_EEPROM_Write
  4221                           
  4222                           ;SYSTEM_STATE_UPDATE_TASK.c: 89:             break;
  4223  0779  2FBC               	goto	l467
  4224  077A                     l3236:
  4225                           
  4226                           ;SYSTEM_STATE_UPDATE_TASK.c: 93:             DOWN_SW_pressed_st = 0;
  4227  077A  01FC               	clrf	_DOWN_SW_pressed_st
  4228  077B                     l3238:
  4229                           
  4230                           ;SYSTEM_STATE_UPDATE_TASK.c: 94:             Read_Button_state = 5;
  4231  077B  3005               	movlw	5
  4232  077C  00FF               	movwf	btemp+1
  4233  077D  087F               	movf	btemp+1,w
  4234  077E  1683               	bsf	3,5	;RP0=1, select bank1
  4235  077F  1303               	bcf	3,6	;RP1=0, select bank1
  4236  0780  00B9               	movwf	_Read_Button_state^(0+128)
  4237  0781                     l3240:
  4238                           
  4239                           ;SYSTEM_STATE_UPDATE_TASK.c: 95:             if (Set_temp <= 35)
  4240  0781  0846               	movf	_Set_temp^(0+128),w
  4241  0782  3A80               	xorlw	128
  4242  0783  3E5C               	addlw	-164
  4243  0784  1803               	skipnc
  4244  0785  2F87               	goto	u3581
  4245  0786  2F88               	goto	u3580
  4246  0787                     u3581:
  4247  0787  2F89               	goto	l3244
  4248  0788                     u3580:
  4249  0788  2F5E               	goto	l3230
  4250  0789                     l3244:
  4251                           
  4252                           ;SYSTEM_STATE_UPDATE_TASK.c: 98:                 Set_temp -= 5;
  4253  0789  30FB               	movlw	251
  4254  078A  00FF               	movwf	btemp+1
  4255  078B  087F               	movf	btemp+1,w
  4256  078C  07C6               	addwf	_Set_temp^(0+128),f
  4257  078D  2F67               	goto	l3234
  4258  078E                     l3248:
  4259                           
  4260                           ;SYSTEM_STATE_UPDATE_TASK.c: 104:             UP_SW_pressed_st = 0;
  4261  078E  01FD               	clrf	_UP_SW_pressed_st
  4262                           
  4263                           ;SYSTEM_STATE_UPDATE_TASK.c: 105:             DOWN_SW_pressed_st = 0;
  4264  078F  01FC               	clrf	_DOWN_SW_pressed_st
  4265                           
  4266                           ;SYSTEM_STATE_UPDATE_TASK.c: 106:         }
  4267  0790  2FBC               	goto	l467
  4268  0791                     l3250:
  4269  0791  1683               	bsf	3,5	;RP0=1, select bank1
  4270  0792  1303               	bcf	3,6	;RP1=0, select bank1
  4271  0793  0839               	movf	_Read_Button_state^(0+128),w
  4272  0794  1283               	bcf	3,5	;RP0=0, select bank0
  4273  0795  1303               	bcf	3,6	;RP1=0, select bank0
  4274  0796  00A5               	movwf	??_SYSTEM_STATE_UPDATE_TASK
  4275  0797  01A6               	clrf	??_SYSTEM_STATE_UPDATE_TASK+1
  4276                           
  4277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4278                           ; Switch size 1, requested type "simple"
  4279                           ; Number of cases is 1, Range of values is 0 to 0
  4280                           ; switch strategies available:
  4281                           ; Name         Instructions Cycles
  4282                           ; simple_byte            4     3 (average)
  4283                           ; direct_byte           11     8 (fixed)
  4284                           ; jumptable            260     6 (fixed)
  4285                           ;	Chosen strategy is simple_byte
  4286  0798  0826               	movf	??_SYSTEM_STATE_UPDATE_TASK+1,w
  4287  0799  3A00               	xorlw	0	; case 0
  4288  079A  1903               	skipnz
  4289  079B  2F9D               	goto	l3652
  4290  079C  2FBC               	goto	l467
  4291  079D                     l3652:
  4292                           
  4293                           ; Switch size 1, requested type "simple"
  4294                           ; Number of cases is 3, Range of values is 2 to 5
  4295                           ; switch strategies available:
  4296                           ; Name         Instructions Cycles
  4297                           ; simple_byte           10     6 (average)
  4298                           ; direct_byte           23    11 (fixed)
  4299                           ; jumptable            263     9 (fixed)
  4300                           ;	Chosen strategy is simple_byte
  4301  079D  0825               	movf	??_SYSTEM_STATE_UPDATE_TASK,w
  4302  079E  3A02               	xorlw	2	; case 2
  4303  079F  1903               	skipnz
  4304  07A0  2F50               	goto	l3224
  4305  07A1  3A06               	xorlw	6	; case 4
  4306  07A2  1903               	skipnz
  4307  07A3  2F7A               	goto	l3236
  4308  07A4  3A01               	xorlw	1	; case 5
  4309  07A5  1903               	skipnz
  4310  07A6  2F8E               	goto	l3248
  4311  07A7  2FBC               	goto	l467
  4312  07A8                     l3252:
  4313  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  4314  07A9  1303               	bcf	3,6	;RP1=0, select bank1
  4315  07AA  0868               	movf	_System_state^(0+128),w
  4316  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  4317  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  4318  07AD  00A5               	movwf	??_SYSTEM_STATE_UPDATE_TASK
  4319  07AE  01A6               	clrf	??_SYSTEM_STATE_UPDATE_TASK+1
  4320                           
  4321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4322                           ; Switch size 1, requested type "simple"
  4323                           ; Number of cases is 1, Range of values is 0 to 0
  4324                           ; switch strategies available:
  4325                           ; Name         Instructions Cycles
  4326                           ; simple_byte            4     3 (average)
  4327                           ; direct_byte           11     8 (fixed)
  4328                           ; jumptable            260     6 (fixed)
  4329                           ;	Chosen strategy is simple_byte
  4330  07AF  0826               	movf	??_SYSTEM_STATE_UPDATE_TASK+1,w
  4331  07B0  3A00               	xorlw	0	; case 0
  4332  07B1  1903               	skipnz
  4333  07B2  2FB4               	goto	l3654
  4334  07B3  2FBC               	goto	l467
  4335  07B4                     l3654:
  4336                           
  4337                           ; Switch size 1, requested type "simple"
  4338                           ; Number of cases is 2, Range of values is 1 to 2
  4339                           ; switch strategies available:
  4340                           ; Name         Instructions Cycles
  4341                           ; simple_byte            7     4 (average)
  4342                           ; direct_byte           17    11 (fixed)
  4343                           ; jumptable            263     9 (fixed)
  4344                           ;	Chosen strategy is simple_byte
  4345  07B4  0825               	movf	??_SYSTEM_STATE_UPDATE_TASK,w
  4346  07B5  3A01               	xorlw	1	; case 1
  4347  07B6  1903               	skipnz
  4348  07B7  2F0A               	goto	l3192
  4349  07B8  3A03               	xorlw	3	; case 2
  4350  07B9  1903               	skipnz
  4351  07BA  2F1D               	goto	l3202
  4352  07BB  2FBC               	goto	l467
  4353  07BC                     l467:
  4354  07BC  0008               	return
  4355  07BD                     __end_of_SYSTEM_STATE_UPDATE_TASK:
  4356                           
  4357                           	psect	text23
  4358  0EFE                     __ptext23:	
  4359 ;; *************** function _Temp_Sens_Task *****************
  4360 ;; Defined at:
  4361 ;;		line 29 in file "Temp_Sens_Task.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;		None
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4375 ;;      Params:         0       0       0       0       0
  4376 ;;      Locals:         0       0       0       0       0
  4377 ;;      Temps:          0       0       2       0       0
  4378 ;;      Totals:         0       0       2       0       0
  4379 ;;Total ram usage:        2 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    6
  4382 ;; This function calls:
  4383 ;;		_Calc_avg_reading
  4384 ;;		_LED_off
  4385 ;;		_LED_on
  4386 ;;		_LED_tog
  4387 ;;		_LM35_Read_Temp
  4388 ;;		_cooler_off
  4389 ;;		_cooler_on
  4390 ;;		_heater_off
  4391 ;;		_heater_on
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;;		_SCH_Dispatch_Tasks
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           
  4399                           ;psect for function _Temp_Sens_Task
  4400  0EFE                     _Temp_Sens_Task:
  4401  0EFE                     l3120:	
  4402                           ;incstack = 0
  4403                           ; Regs used in _Temp_Sens_Task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4404                           
  4405                           
  4406                           ;Temp_Sens_Task.c: 31:     static uint8 reading_count = 0;;Temp_Sens_Task.c: 32:     swi
      +                          tch (System_state)
  4407  0EFE  2FED               	goto	l3176
  4408  0EFF                     l3122:
  4409                           
  4410                           ;Temp_Sens_Task.c: 35:         heater_off();
  4411  0EFF  160A  118A  25DE  120A  158A  	fcall	_heater_off
  4412                           
  4413                           ;Temp_Sens_Task.c: 36:         cooler_off();
  4414  0F04  160A  118A  25D7  120A  158A  	fcall	_cooler_off
  4415                           
  4416                           ;Temp_Sens_Task.c: 37:         break;
  4417  0F09  2FFF               	goto	l411
  4418  0F0A                     l3124:
  4419                           
  4420                           ;Temp_Sens_Task.c: 39:         LM35_Read_Temp();
  4421  0F0A  120A  158A  2591  120A  158A  	fcall	_LM35_Read_Temp
  4422  0F0F                     l3126:
  4423                           
  4424                           ;Temp_Sens_Task.c: 40:         readings_arr[reading_count] = temp_in_C;
  4425  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  4426  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  4427  0F11  0840               	movf	_temp_in_C^(0+128),w
  4428  0F12  00FF               	movwf	btemp+1
  4429  0F13  083A               	movf	Temp_Sens_Task@reading_count^(0+128),w
  4430  0F14  3EC8               	addlw	(low (_readings_arr| 0))& (0+255)
  4431  0F15  0084               	movwf	4
  4432  0F16  087F               	movf	btemp+1,w
  4433  0F17  1383               	bcf	3,7	;select IRP bank1
  4434  0F18  0080               	movwf	0
  4435  0F19                     l3128:
  4436                           
  4437                           ;Temp_Sens_Task.c: 42:         if (++reading_count == 10)
  4438  0F19  3001               	movlw	1
  4439  0F1A  00FF               	movwf	btemp+1
  4440  0F1B  087F               	movf	btemp+1,w
  4441  0F1C  07BA               	addwf	Temp_Sens_Task@reading_count^(0+128),f
  4442  0F1D  300A               	movlw	10
  4443  0F1E  063A               	xorwf	Temp_Sens_Task@reading_count^(0+128),w
  4444  0F1F  1D03               	btfss	3,2
  4445  0F20  2F22               	goto	u3411
  4446  0F21  2F23               	goto	u3410
  4447  0F22                     u3411:
  4448  0F22  2F2E               	goto	l3136
  4449  0F23                     u3410:
  4450  0F23                     l3130:
  4451                           
  4452                           ;Temp_Sens_Task.c: 43:         {;Temp_Sens_Task.c: 44:             reading_count = 0;
  4453  0F23  01BA               	clrf	Temp_Sens_Task@reading_count^(0+128)
  4454  0F24                     l3132:
  4455                           
  4456                           ;Temp_Sens_Task.c: 45:             Calc_avg_reading(readings_arr);
  4457  0F24  30C8               	movlw	(low (_readings_arr| 0))& (0+255)
  4458  0F25  120A  158A  2046  120A  158A  	fcall	_Calc_avg_reading
  4459  0F2A                     l3134:
  4460                           
  4461                           ;Temp_Sens_Task.c: 46:             First_Reading_flag = 1;
  4462  0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  4463  0F2B  1303               	bcf	3,6	;RP1=0, select bank1
  4464  0F2C  01BD               	clrf	_First_Reading_flag^(0+128)
  4465  0F2D  0ABD               	incf	_First_Reading_flag^(0+128),f
  4466  0F2E                     l3136:
  4467                           
  4468                           ;Temp_Sens_Task.c: 48:         if (First_Reading_flag)
  4469  0F2E  083D               	movf	_First_Reading_flag^(0+128),w
  4470  0F2F  1903               	btfsc	3,2
  4471  0F30  2F32               	goto	u3421
  4472  0F31  2F33               	goto	u3420
  4473  0F32                     u3421:
  4474  0F32  2FFF               	goto	l411
  4475  0F33                     u3420:
  4476  0F33  2FD9               	goto	l3174
  4477  0F34                     l3140:
  4478                           
  4479                           ;Temp_Sens_Task.c: 53:                 heater_off();
  4480  0F34  160A  118A  25DE  120A  158A  	fcall	_heater_off
  4481                           
  4482                           ;Temp_Sens_Task.c: 54:                 cooler_off();
  4483  0F39  160A  118A  25D7  120A  158A  	fcall	_cooler_off
  4484                           
  4485                           ;Temp_Sens_Task.c: 55:                 LED_off();
  4486  0F3E  160A  118A  25C9  120A  158A  	fcall	_LED_off
  4487  0F43                     l3142:
  4488                           
  4489                           ;Temp_Sens_Task.c: 57:                 if ((avg_temp_in_C - Set_temp) < -5)
  4490  0F43  1683               	bsf	3,5	;RP0=1, select bank1
  4491  0F44  1303               	bcf	3,6	;RP1=0, select bank1
  4492  0F45  0846               	movf	_Set_temp^(0+128),w
  4493  0F46  023B               	subwf	_avg_temp_in_C^(0+128),w
  4494  0F47  00DE               	movwf	??_Temp_Sens_Task^(0+128)
  4495  0F48  01DF               	clrf	(??_Temp_Sens_Task^(0+128)+1)
  4496  0F49  1C03               	skipc
  4497  0F4A  03DF               	decf	(??_Temp_Sens_Task+1)^(0+128),f
  4498  0F4B  1FBB               	btfss	_avg_temp_in_C^(0+128),7
  4499  0F4C  2F4E               	goto	u3435n
  4500  0F4D  03DF               	decf	(??_Temp_Sens_Task^(0+128)+1),f
  4501  0F4E                     u3435n:
  4502  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  4503  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  4504  0F50  1FC6               	btfss	_Set_temp^(0+128),7
  4505  0F51  2F53               	goto	u3435o
  4506  0F52  0ADF               	incf	(??_Temp_Sens_Task^(0+128)+1),f
  4507  0F53                     u3435o:
  4508  0F53  1683               	bsf	3,5	;RP0=1, select bank1
  4509  0F54  1303               	bcf	3,6	;RP1=0, select bank1
  4510  0F55  085F               	movf	(??_Temp_Sens_Task+1)^(0+128),w
  4511  0F56  3A80               	xorlw	128
  4512  0F57  00FF               	movwf	btemp+1
  4513  0F58  307F               	movlw	127
  4514  0F59  027F               	subwf	btemp+1,w
  4515  0F5A  1D03               	skipz
  4516  0F5B  2F5E               	goto	u3445
  4517  0F5C  30FB               	movlw	251
  4518  0F5D  025E               	subwf	??_Temp_Sens_Task^(0+128),w
  4519  0F5E                     u3445:
  4520  0F5E  1803               	skipnc
  4521  0F5F  2F61               	goto	u3441
  4522  0F60  2F62               	goto	u3440
  4523  0F61                     u3441:
  4524  0F61  2F67               	goto	l3146
  4525  0F62                     u3440:
  4526  0F62                     l3144:
  4527                           
  4528                           ;Temp_Sens_Task.c: 58:                     Heating_Cooling_state = 1;
  4529  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  4530  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  4531  0F64  01BE               	clrf	_Heating_Cooling_state^(0+128)
  4532  0F65  0ABE               	incf	_Heating_Cooling_state^(0+128),f
  4533  0F66  2FFF               	goto	l411
  4534  0F67                     l3146:
  4535                           
  4536                           ;Temp_Sens_Task.c: 60:                     Heating_Cooling_state = 2;
  4537  0F67  3002               	movlw	2
  4538  0F68  00FF               	movwf	btemp+1
  4539  0F69  087F               	movf	btemp+1,w
  4540  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  4541  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  4542  0F6C  00BE               	movwf	_Heating_Cooling_state^(0+128)
  4543  0F6D  2FFF               	goto	l411
  4544  0F6E                     l3148:
  4545                           
  4546                           ;Temp_Sens_Task.c: 64:                 cooler_off();
  4547  0F6E  160A  118A  25D7  120A  158A  	fcall	_cooler_off
  4548  0F73                     l3150:
  4549                           
  4550                           ;Temp_Sens_Task.c: 65:                 heater_on();
  4551  0F73  160A  118A  25B1  120A  158A  	fcall	_heater_on
  4552  0F78                     l3152:
  4553                           
  4554                           ;Temp_Sens_Task.c: 67:                 if (++LED_heating_time == (10))
  4555  0F78  3001               	movlw	1
  4556  0F79  00FF               	movwf	btemp+1
  4557  0F7A  087F               	movf	btemp+1,w
  4558  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  4559  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  4560  0F7D  07BC               	addwf	_LED_heating_time^(0+128),f
  4561  0F7E  300A               	movlw	10
  4562  0F7F  063C               	xorwf	_LED_heating_time^(0+128),w
  4563  0F80  1D03               	btfss	3,2
  4564  0F81  2F83               	goto	u3451
  4565  0F82  2F84               	goto	u3450
  4566  0F83                     u3451:
  4567  0F83  2F8C               	goto	l3158
  4568  0F84                     u3450:
  4569  0F84                     l3154:
  4570                           
  4571                           ;Temp_Sens_Task.c: 68:                 {;Temp_Sens_Task.c: 69:                     LED_t
      +                          og();
  4572  0F84  160A  118A  25D0  120A  158A  	fcall	_LED_tog
  4573  0F89                     l3156:
  4574                           
  4575                           ;Temp_Sens_Task.c: 70:                     LED_heating_time = 0;
  4576  0F89  1683               	bsf	3,5	;RP0=1, select bank1
  4577  0F8A  1303               	bcf	3,6	;RP1=0, select bank1
  4578  0F8B  01BC               	clrf	_LED_heating_time^(0+128)
  4579  0F8C                     l3158:
  4580                           
  4581                           ;Temp_Sens_Task.c: 73:                 if ((avg_temp_in_C - Set_temp) >= 5)
  4582  0F8C  0846               	movf	_Set_temp^(0+128),w
  4583  0F8D  023B               	subwf	_avg_temp_in_C^(0+128),w
  4584  0F8E  00DE               	movwf	??_Temp_Sens_Task^(0+128)
  4585  0F8F  01DF               	clrf	(??_Temp_Sens_Task^(0+128)+1)
  4586  0F90  1C03               	skipc
  4587  0F91  03DF               	decf	(??_Temp_Sens_Task+1)^(0+128),f
  4588  0F92  1FBB               	btfss	_avg_temp_in_C^(0+128),7
  4589  0F93  2F95               	goto	u3465n
  4590  0F94  03DF               	decf	(??_Temp_Sens_Task^(0+128)+1),f
  4591  0F95                     u3465n:
  4592  0F95  1683               	bsf	3,5	;RP0=1, select bank1
  4593  0F96  1303               	bcf	3,6	;RP1=0, select bank1
  4594  0F97  1FC6               	btfss	_Set_temp^(0+128),7
  4595  0F98  2F9A               	goto	u3465o
  4596  0F99  0ADF               	incf	(??_Temp_Sens_Task^(0+128)+1),f
  4597  0F9A                     u3465o:
  4598  0F9A  1683               	bsf	3,5	;RP0=1, select bank1
  4599  0F9B  1303               	bcf	3,6	;RP1=0, select bank1
  4600  0F9C  085F               	movf	(??_Temp_Sens_Task+1)^(0+128),w
  4601  0F9D  3A80               	xorlw	128
  4602  0F9E  00FF               	movwf	btemp+1
  4603  0F9F  3080               	movlw	128
  4604  0FA0  027F               	subwf	btemp+1,w
  4605  0FA1  1D03               	skipz
  4606  0FA2  2FA5               	goto	u3475
  4607  0FA3  3005               	movlw	5
  4608  0FA4  025E               	subwf	??_Temp_Sens_Task^(0+128),w
  4609  0FA5                     u3475:
  4610  0FA5  1C03               	skipc
  4611  0FA6  2FA8               	goto	u3471
  4612  0FA7  2FA9               	goto	u3470
  4613  0FA8                     u3471:
  4614  0FA8  2FEC               	goto	l400
  4615  0FA9                     u3470:
  4616  0FA9  2F67               	goto	l3146
  4617  0FAA                     l3162:
  4618                           
  4619                           ;Temp_Sens_Task.c: 78:                 heater_off();
  4620  0FAA  160A  118A  25DE  120A  158A  	fcall	_heater_off
  4621  0FAF                     l3164:
  4622                           
  4623                           ;Temp_Sens_Task.c: 79:                 cooler_on();
  4624  0FAF  160A  118A  25AD  120A  158A  	fcall	_cooler_on
  4625  0FB4                     l3166:
  4626                           
  4627                           ;Temp_Sens_Task.c: 81:                 LED_on();
  4628  0FB4  160A  118A  25A9  120A  158A  	fcall	_LED_on
  4629  0FB9                     l3168:
  4630                           
  4631                           ;Temp_Sens_Task.c: 83:                 if ((avg_temp_in_C - Set_temp) < -5)
  4632  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  4633  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  4634  0FBB  0846               	movf	_Set_temp^(0+128),w
  4635  0FBC  023B               	subwf	_avg_temp_in_C^(0+128),w
  4636  0FBD  00DE               	movwf	??_Temp_Sens_Task^(0+128)
  4637  0FBE  01DF               	clrf	(??_Temp_Sens_Task^(0+128)+1)
  4638  0FBF  1C03               	skipc
  4639  0FC0  03DF               	decf	(??_Temp_Sens_Task+1)^(0+128),f
  4640  0FC1  1FBB               	btfss	_avg_temp_in_C^(0+128),7
  4641  0FC2  2FC4               	goto	u3485n
  4642  0FC3  03DF               	decf	(??_Temp_Sens_Task^(0+128)+1),f
  4643  0FC4                     u3485n:
  4644  0FC4  1683               	bsf	3,5	;RP0=1, select bank1
  4645  0FC5  1303               	bcf	3,6	;RP1=0, select bank1
  4646  0FC6  1FC6               	btfss	_Set_temp^(0+128),7
  4647  0FC7  2FC9               	goto	u3485o
  4648  0FC8  0ADF               	incf	(??_Temp_Sens_Task^(0+128)+1),f
  4649  0FC9                     u3485o:
  4650  0FC9  1683               	bsf	3,5	;RP0=1, select bank1
  4651  0FCA  1303               	bcf	3,6	;RP1=0, select bank1
  4652  0FCB  085F               	movf	(??_Temp_Sens_Task+1)^(0+128),w
  4653  0FCC  3A80               	xorlw	128
  4654  0FCD  00FF               	movwf	btemp+1
  4655  0FCE  307F               	movlw	127
  4656  0FCF  027F               	subwf	btemp+1,w
  4657  0FD0  1D03               	skipz
  4658  0FD1  2FD4               	goto	u3495
  4659  0FD2  30FB               	movlw	251
  4660  0FD3  025E               	subwf	??_Temp_Sens_Task^(0+128),w
  4661  0FD4                     u3495:
  4662  0FD4  1803               	skipnc
  4663  0FD5  2FD7               	goto	u3491
  4664  0FD6  2FD8               	goto	u3490
  4665  0FD7                     u3491:
  4666  0FD7  2FEC               	goto	l400
  4667  0FD8                     u3490:
  4668  0FD8  2F62               	goto	l3144
  4669  0FD9                     l3174:
  4670  0FD9  083E               	movf	_Heating_Cooling_state^(0+128),w
  4671  0FDA  00DE               	movwf	??_Temp_Sens_Task^(0+128)
  4672  0FDB  01DF               	clrf	(??_Temp_Sens_Task^(0+128)+1)
  4673                           
  4674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4675                           ; Switch size 1, requested type "simple"
  4676                           ; Number of cases is 1, Range of values is 0 to 0
  4677                           ; switch strategies available:
  4678                           ; Name         Instructions Cycles
  4679                           ; simple_byte            4     3 (average)
  4680                           ; direct_byte           11     8 (fixed)
  4681                           ; jumptable            260     6 (fixed)
  4682                           ;	Chosen strategy is simple_byte
  4683  0FDC  085F               	movf	(??_Temp_Sens_Task+1)^(0+128),w
  4684  0FDD  3A00               	xorlw	0	; case 0
  4685  0FDE  1903               	skipnz
  4686  0FDF  2FE1               	goto	l3656
  4687  0FE0  2FFF               	goto	l411
  4688  0FE1                     l3656:
  4689                           
  4690                           ; Switch size 1, requested type "simple"
  4691                           ; Number of cases is 3, Range of values is 0 to 2
  4692                           ; switch strategies available:
  4693                           ; Name         Instructions Cycles
  4694                           ; simple_byte           10     6 (average)
  4695                           ; direct_byte           17     8 (fixed)
  4696                           ; jumptable            260     6 (fixed)
  4697                           ;	Chosen strategy is simple_byte
  4698  0FE1  085E               	movf	??_Temp_Sens_Task^(0+128),w
  4699  0FE2  3A00               	xorlw	0	; case 0
  4700  0FE3  1903               	skipnz
  4701  0FE4  2F34               	goto	l3140
  4702  0FE5  3A01               	xorlw	1	; case 1
  4703  0FE6  1903               	skipnz
  4704  0FE7  2F6E               	goto	l3148
  4705  0FE8  3A03               	xorlw	3	; case 2
  4706  0FE9  1903               	skipnz
  4707  0FEA  2FAA               	goto	l3162
  4708  0FEB  2FFF               	goto	l411
  4709  0FEC                     l400:	
  4710                           ;Temp_Sens_Task.c: 87:         }
  4711                           
  4712                           
  4713                           ;Temp_Sens_Task.c: 88:     }
  4714  0FEC  2FFF               	goto	l411
  4715  0FED                     l3176:
  4716  0FED  1683               	bsf	3,5	;RP0=1, select bank1
  4717  0FEE  1303               	bcf	3,6	;RP1=0, select bank1
  4718  0FEF  0868               	movf	_System_state^(0+128),w
  4719  0FF0  00DE               	movwf	??_Temp_Sens_Task^(0+128)
  4720  0FF1  01DF               	clrf	(??_Temp_Sens_Task^(0+128)+1)
  4721                           
  4722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4723                           ; Switch size 1, requested type "simple"
  4724                           ; Number of cases is 1, Range of values is 0 to 0
  4725                           ; switch strategies available:
  4726                           ; Name         Instructions Cycles
  4727                           ; simple_byte            4     3 (average)
  4728                           ; direct_byte           11     8 (fixed)
  4729                           ; jumptable            260     6 (fixed)
  4730                           ;	Chosen strategy is simple_byte
  4731  0FF2  085F               	movf	(??_Temp_Sens_Task+1)^(0+128),w
  4732  0FF3  3A00               	xorlw	0	; case 0
  4733  0FF4  1903               	skipnz
  4734  0FF5  2FF7               	goto	l3658
  4735  0FF6  2FFF               	goto	l411
  4736  0FF7                     l3658:
  4737                           
  4738                           ; Switch size 1, requested type "simple"
  4739                           ; Number of cases is 2, Range of values is 1 to 2
  4740                           ; switch strategies available:
  4741                           ; Name         Instructions Cycles
  4742                           ; simple_byte            7     4 (average)
  4743                           ; direct_byte           17    11 (fixed)
  4744                           ; jumptable            263     9 (fixed)
  4745                           ;	Chosen strategy is simple_byte
  4746  0FF7  085E               	movf	??_Temp_Sens_Task^(0+128),w
  4747  0FF8  3A01               	xorlw	1	; case 1
  4748  0FF9  1903               	skipnz
  4749  0FFA  2F0A               	goto	l3124
  4750  0FFB  3A03               	xorlw	3	; case 2
  4751  0FFC  1903               	skipnz
  4752  0FFD  2EFF               	goto	l3122
  4753  0FFE  2FFF               	goto	l411
  4754  0FFF                     l411:
  4755  0FFF  0008               	return
  4756  1000                     __end_of_Temp_Sens_Task:
  4757                           
  4758                           	psect	text24
  4759  15B1                     __ptext24:	
  4760 ;; *************** function _heater_on *****************
  4761 ;; Defined at:
  4762 ;;		line 23 in file "HEATER.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;		None
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		None
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4776 ;;      Params:         0       0       0       0       0
  4777 ;;      Locals:         0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0
  4779 ;;      Totals:         0       0       0       0       0
  4780 ;;Total ram usage:        0 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    3
  4783 ;; This function calls:
  4784 ;;		Nothing
  4785 ;; This function is called by:
  4786 ;;		_Temp_Sens_Task
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           
  4791                           ;psect for function _heater_on
  4792  15B1                     _heater_on:
  4793  15B1                     l2948:	
  4794                           ;incstack = 0
  4795                           ; Regs used in _heater_on: []
  4796                           
  4797                           
  4798                           ;HEATER.c: 26:     (PORTC |= (1<<5));
  4799  15B1  1283               	bcf	3,5	;RP0=0, select bank0
  4800  15B2  1303               	bcf	3,6	;RP1=0, select bank0
  4801  15B3  1687               	bsf	7,5	;volatile
  4802  15B4                     l125:
  4803  15B4  0008               	return
  4804  15B5                     __end_of_heater_on:
  4805                           
  4806                           	psect	text25
  4807  15DE                     __ptext25:	
  4808 ;; *************** function _heater_off *****************
  4809 ;; Defined at:
  4810 ;;		line 28 in file "HEATER.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;		None
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;		None
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      void 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0, btemp+1
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4824 ;;      Params:         0       0       0       0       0
  4825 ;;      Locals:         0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0
  4827 ;;      Totals:         0       0       0       0       0
  4828 ;;Total ram usage:        0 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    3
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_heater_init
  4835 ;;		_Temp_Sens_Task
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function _heater_off
  4841  15DE                     _heater_off:
  4842  15DE                     l2372:	
  4843                           ;incstack = 0
  4844                           ; Regs used in _heater_off: [wreg+status,2+status,0+btemp+1]
  4845                           
  4846                           
  4847                           ;HEATER.c: 31:     (PORTC &= ~(1<<5));
  4848  15DE  30DF               	movlw	223
  4849  15DF  00FF               	movwf	btemp+1
  4850  15E0  087F               	movf	btemp+1,w
  4851  15E1  1283               	bcf	3,5	;RP0=0, select bank0
  4852  15E2  1303               	bcf	3,6	;RP1=0, select bank0
  4853  15E3  0587               	andwf	7,f	;volatile
  4854  15E4                     l128:
  4855  15E4  0008               	return
  4856  15E5                     __end_of_heater_off:
  4857                           
  4858                           	psect	text26
  4859  15AD                     __ptext26:	
  4860 ;; *************** function _cooler_on *****************
  4861 ;; Defined at:
  4862 ;;		line 23 in file "COOLER.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;		None
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		None
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4876 ;;      Params:         0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0
  4879 ;;      Totals:         0       0       0       0       0
  4880 ;;Total ram usage:        0 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:    3
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_Temp_Sens_Task
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           
  4891                           ;psect for function _cooler_on
  4892  15AD                     _cooler_on:
  4893  15AD                     l2942:	
  4894                           ;incstack = 0
  4895                           ; Regs used in _cooler_on: []
  4896                           
  4897                           
  4898                           ;COOLER.c: 26:     (PORTC |= (1<<2));
  4899  15AD  1283               	bcf	3,5	;RP0=0, select bank0
  4900  15AE  1303               	bcf	3,6	;RP1=0, select bank0
  4901  15AF  1507               	bsf	7,2	;volatile
  4902  15B0                     l108:
  4903  15B0  0008               	return
  4904  15B1                     __end_of_cooler_on:
  4905                           
  4906                           	psect	text27
  4907  15D7                     __ptext27:	
  4908 ;; *************** function _cooler_off *****************
  4909 ;; Defined at:
  4910 ;;		line 28 in file "COOLER.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;		None
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      void 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, btemp+1
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4924 ;;      Params:         0       0       0       0       0
  4925 ;;      Locals:         0       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0
  4927 ;;      Totals:         0       0       0       0       0
  4928 ;;Total ram usage:        0 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    3
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_cooler_init
  4935 ;;		_Temp_Sens_Task
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           
  4940                           ;psect for function _cooler_off
  4941  15D7                     _cooler_off:
  4942  15D7                     l2370:	
  4943                           ;incstack = 0
  4944                           ; Regs used in _cooler_off: [wreg+status,2+status,0+btemp+1]
  4945                           
  4946                           
  4947                           ;COOLER.c: 31:     (PORTC &= ~(1<<2));
  4948  15D7  30FB               	movlw	251
  4949  15D8  00FF               	movwf	btemp+1
  4950  15D9  087F               	movf	btemp+1,w
  4951  15DA  1283               	bcf	3,5	;RP0=0, select bank0
  4952  15DB  1303               	bcf	3,6	;RP1=0, select bank0
  4953  15DC  0587               	andwf	7,f	;volatile
  4954  15DD                     l111:
  4955  15DD  0008               	return
  4956  15DE                     __end_of_cooler_off:
  4957                           
  4958                           	psect	text28
  4959  0D91                     __ptext28:	
  4960 ;; *************** function _LM35_Read_Temp *****************
  4961 ;; Defined at:
  4962 ;;		line 19 in file "LM35.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4976 ;;      Params:         0       0       0       0       0
  4977 ;;      Locals:         0       0       4       0       0
  4978 ;;      Temps:          0       0       4       0       0
  4979 ;;      Totals:         0       0       8       0       0
  4980 ;;Total ram usage:        8 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; Hardware stack levels required when called:    5
  4983 ;; This function calls:
  4984 ;;		_ADC_get_Sample
  4985 ;;		___fldiv
  4986 ;;		___flmul
  4987 ;;		___fltol
  4988 ;;		___xxtofl
  4989 ;; This function is called by:
  4990 ;;		_Temp_Sens_Task
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           
  4995                           ;psect for function _LM35_Read_Temp
  4996  0D91                     _LM35_Read_Temp:
  4997  0D91                     l3026:	
  4998                           ;incstack = 0
  4999                           ; Regs used in _LM35_Read_Temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5000                           
  5001                           
  5002                           ;LM35.c: 21:     temp_in_C = ((ADC_get_Sample(2) * 5.0) / 1023.0) * 100.0;
  5003  0D91  3002               	movlw	2
  5004  0D92  120A  158A  236C  120A  158A  	fcall	_ADC_get_Sample
  5005  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  5006  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  5007  0D99  0820               	movf	?_ADC_get_Sample,w
  5008  0D9A  1683               	bsf	3,5	;RP0=1, select bank1
  5009  0D9B  1303               	bcf	3,6	;RP1=0, select bank1
  5010  0D9C  00D6               	movwf	??_LM35_Read_Temp^(0+128)
  5011  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  5012  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  5013  0D9F  0821               	movf	?_ADC_get_Sample+1,w
  5014  0DA0  1683               	bsf	3,5	;RP0=1, select bank1
  5015  0DA1  1303               	bcf	3,6	;RP1=0, select bank1
  5016  0DA2  00D7               	movwf	(??_LM35_Read_Temp^(0+128)+1)
  5017  0DA3  01D8               	clrf	(??_LM35_Read_Temp^(0+128)+2)
  5018  0DA4  01D9               	clrf	(??_LM35_Read_Temp^(0+128)+3)
  5019  0DA5  0859               	movf	(??_LM35_Read_Temp+3)^(0+128),w
  5020  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  5021  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  5022  0DA8  00AA               	movwf	___xxtofl@val+3
  5023  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  5024  0DAA  1303               	bcf	3,6	;RP1=0, select bank1
  5025  0DAB  0858               	movf	(??_LM35_Read_Temp+2)^(0+128),w
  5026  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  5027  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  5028  0DAE  00A9               	movwf	___xxtofl@val+2
  5029  0DAF  1683               	bsf	3,5	;RP0=1, select bank1
  5030  0DB0  1303               	bcf	3,6	;RP1=0, select bank1
  5031  0DB1  0857               	movf	(??_LM35_Read_Temp+1)^(0+128),w
  5032  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  5033  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  5034  0DB4  00A8               	movwf	___xxtofl@val+1
  5035  0DB5  1683               	bsf	3,5	;RP0=1, select bank1
  5036  0DB6  1303               	bcf	3,6	;RP1=0, select bank1
  5037  0DB7  0856               	movf	??_LM35_Read_Temp^(0+128),w
  5038  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  5039  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  5040  0DBA  00A7               	movwf	___xxtofl@val
  5041  0DBB  3000               	movlw	0
  5042  0DBC  120A  158A  2642  120A  158A  	fcall	___xxtofl
  5043  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  5044  0DC2  1303               	bcf	3,6	;RP1=0, select bank0
  5045  0DC3  082A               	movf	?___xxtofl+3,w
  5046  0DC4  00BC               	movwf	___flmul@a+3
  5047  0DC5  0829               	movf	?___xxtofl+2,w
  5048  0DC6  00BB               	movwf	___flmul@a+2
  5049  0DC7  0828               	movf	?___xxtofl+1,w
  5050  0DC8  00BA               	movwf	___flmul@a+1
  5051  0DC9  0827               	movf	?___xxtofl,w
  5052  0DCA  00B9               	movwf	___flmul@a
  5053  0DCB  3040               	movlw	64
  5054  0DCC  00B8               	movwf	___flmul@b+3
  5055  0DCD  30A0               	movlw	160
  5056  0DCE  00B7               	movwf	___flmul@b+2
  5057  0DCF  3000               	movlw	0
  5058  0DD0  00B6               	movwf	___flmul@b+1
  5059  0DD1  3000               	movlw	0
  5060  0DD2  00B5               	movwf	___flmul@b
  5061  0DD3  120A  118A  204E  120A  158A  	fcall	___flmul
  5062  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  5063  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  5064  0DDA  0838               	movf	?___flmul+3,w
  5065  0DDB  00D6               	movwf	___fldiv@b+3
  5066  0DDC  0837               	movf	?___flmul+2,w
  5067  0DDD  00D5               	movwf	___fldiv@b+2
  5068  0DDE  0836               	movf	?___flmul+1,w
  5069  0DDF  00D4               	movwf	___fldiv@b+1
  5070  0DE0  0835               	movf	?___flmul,w
  5071  0DE1  00D3               	movwf	___fldiv@b
  5072  0DE2  3044               	movlw	68
  5073  0DE3  00D2               	movwf	___fldiv@a+3
  5074  0DE4  307F               	movlw	127
  5075  0DE5  00D1               	movwf	___fldiv@a+2
  5076  0DE6  30C0               	movlw	192
  5077  0DE7  00D0               	movwf	___fldiv@a+1
  5078  0DE8  3000               	movlw	0
  5079  0DE9  00CF               	movwf	___fldiv@a
  5080  0DEA  120A  118A  23AF  120A  158A  	fcall	___fldiv
  5081  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  5082  0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  5083  0DF1  0852               	movf	?___fldiv+3,w
  5084  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  5085  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  5086  0DF4  00DD               	movwf	(_LM35_Read_Temp$1135+3)^(0+128)
  5087  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  5088  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  5089  0DF7  0851               	movf	?___fldiv+2,w
  5090  0DF8  1683               	bsf	3,5	;RP0=1, select bank1
  5091  0DF9  1303               	bcf	3,6	;RP1=0, select bank1
  5092  0DFA  00DC               	movwf	(_LM35_Read_Temp$1135+2)^(0+128)
  5093  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  5094  0DFC  1303               	bcf	3,6	;RP1=0, select bank0
  5095  0DFD  0850               	movf	?___fldiv+1,w
  5096  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  5097  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  5098  0E00  00DB               	movwf	(_LM35_Read_Temp$1135+1)^(0+128)
  5099  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0E03  084F               	movf	?___fldiv,w
  5102  0E04  1683               	bsf	3,5	;RP0=1, select bank1
  5103  0E05  1303               	bcf	3,6	;RP1=0, select bank1
  5104  0E06  00DA               	movwf	_LM35_Read_Temp$1135^(0+128)
  5105                           
  5106                           ;LM35.c: 21:     temp_in_C = ((ADC_get_Sample(2) * 5.0) / 1023.0) * 100.0;
  5107  0E07  085D               	movf	(_LM35_Read_Temp$1135+3)^(0+128),w
  5108  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  5109  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  5110  0E0A  00BC               	movwf	___flmul@a+3
  5111  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  5112  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  5113  0E0D  085C               	movf	(_LM35_Read_Temp$1135+2)^(0+128),w
  5114  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  5115  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  5116  0E10  00BB               	movwf	___flmul@a+2
  5117  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  5118  0E12  1303               	bcf	3,6	;RP1=0, select bank1
  5119  0E13  085B               	movf	(_LM35_Read_Temp$1135+1)^(0+128),w
  5120  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  5121  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  5122  0E16  00BA               	movwf	___flmul@a+1
  5123  0E17  1683               	bsf	3,5	;RP0=1, select bank1
  5124  0E18  1303               	bcf	3,6	;RP1=0, select bank1
  5125  0E19  085A               	movf	_LM35_Read_Temp$1135^(0+128),w
  5126  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0E1C  00B9               	movwf	___flmul@a
  5129  0E1D  3042               	movlw	66
  5130  0E1E  00B8               	movwf	___flmul@b+3
  5131  0E1F  30C8               	movlw	200
  5132  0E20  00B7               	movwf	___flmul@b+2
  5133  0E21  3000               	movlw	0
  5134  0E22  00B6               	movwf	___flmul@b+1
  5135  0E23  3000               	movlw	0
  5136  0E24  00B5               	movwf	___flmul@b
  5137  0E25  120A  118A  204E  120A  158A  	fcall	___flmul
  5138  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  5140  0E2C  0838               	movf	?___flmul+3,w
  5141  0E2D  00EC               	movwf	___fltol@f1+3
  5142  0E2E  0837               	movf	?___flmul+2,w
  5143  0E2F  00EB               	movwf	___fltol@f1+2
  5144  0E30  0836               	movf	?___flmul+1,w
  5145  0E31  00EA               	movwf	___fltol@f1+1
  5146  0E32  0835               	movf	?___flmul,w
  5147  0E33  00E9               	movwf	___fltol@f1
  5148  0E34  120A  158A  245A  120A  158A  	fcall	___fltol
  5149  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  5150  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  5151  0E3B  0869               	movf	?___fltol,w
  5152  0E3C  00FF               	movwf	btemp+1
  5153  0E3D  087F               	movf	btemp+1,w
  5154  0E3E  1683               	bsf	3,5	;RP0=1, select bank1
  5155  0E3F  1303               	bcf	3,6	;RP1=0, select bank1
  5156  0E40  00C0               	movwf	_temp_in_C^(0+128)
  5157  0E41                     l235:
  5158  0E41  0008               	return
  5159  0E42                     __end_of_LM35_Read_Temp:
  5160                           
  5161                           	psect	text29
  5162  0E42                     __ptext29:	
  5163 ;; *************** function ___xxtofl *****************
  5164 ;; Defined at:
  5165 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  sign            1    wreg     unsigned char 
  5168 ;;  val             4    7[BANK0 ] long 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  sign            1   15[BANK0 ] unsigned char 
  5171 ;;  arg             4   17[BANK0 ] unsigned long 
  5172 ;;  exp             1   16[BANK0 ] unsigned char 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  4    7[BANK0 ] unsigned char 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0, btemp+1
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5182 ;;      Params:         0       4       0       0       0
  5183 ;;      Locals:         0       6       0       0       0
  5184 ;;      Temps:          0       4       0       0       0
  5185 ;;      Totals:         0      14       0       0       0
  5186 ;;Total ram usage:       14 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    3
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_LM35_Read_Temp
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           
  5197                           ;psect for function ___xxtofl
  5198  0E42                     ___xxtofl:
  5199                           
  5200                           ;incstack = 0
  5201                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  5202                           ;___xxtofl@sign stored from wreg
  5203  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  5204  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  5205  0E44  00AF               	movwf	___xxtofl@sign
  5206  0E45                     l2876:
  5207  0E45  082F               	movf	___xxtofl@sign,w
  5208  0E46  1903               	btfsc	3,2
  5209  0E47  2E49               	goto	u3131
  5210  0E48  2E4A               	goto	u3130
  5211  0E49                     u3131:
  5212  0E49  2E5E               	goto	l2882
  5213  0E4A                     u3130:
  5214  0E4A                     l2878:
  5215  0E4A  1FAA               	btfss	___xxtofl@val+3,7
  5216  0E4B  2E4D               	goto	u3141
  5217  0E4C  2E4E               	goto	u3140
  5218  0E4D                     u3141:
  5219  0E4D  2E5E               	goto	l2882
  5220  0E4E                     u3140:
  5221  0E4E                     l2880:
  5222  0E4E  0927               	comf	___xxtofl@val,w
  5223  0E4F  00B1               	movwf	___xxtofl@arg
  5224  0E50  0928               	comf	___xxtofl@val+1,w
  5225  0E51  00B2               	movwf	___xxtofl@arg+1
  5226  0E52  0929               	comf	___xxtofl@val+2,w
  5227  0E53  00B3               	movwf	___xxtofl@arg+2
  5228  0E54  092A               	comf	___xxtofl@val+3,w
  5229  0E55  00B4               	movwf	___xxtofl@arg+3
  5230  0E56  0AB1               	incf	___xxtofl@arg,f
  5231  0E57  1903               	skipnz
  5232  0E58  0AB2               	incf	___xxtofl@arg+1,f
  5233  0E59  1903               	skipnz
  5234  0E5A  0AB3               	incf	___xxtofl@arg+2,f
  5235  0E5B  1903               	skipnz
  5236  0E5C  0AB4               	incf	___xxtofl@arg+3,f
  5237  0E5D  2E66               	goto	l1101
  5238  0E5E                     l2882:
  5239  0E5E  082A               	movf	___xxtofl@val+3,w
  5240  0E5F  00B4               	movwf	___xxtofl@arg+3
  5241  0E60  0829               	movf	___xxtofl@val+2,w
  5242  0E61  00B3               	movwf	___xxtofl@arg+2
  5243  0E62  0828               	movf	___xxtofl@val+1,w
  5244  0E63  00B2               	movwf	___xxtofl@arg+1
  5245  0E64  0827               	movf	___xxtofl@val,w
  5246  0E65  00B1               	movwf	___xxtofl@arg
  5247  0E66                     l1101:
  5248  0E66  082A               	movf	___xxtofl@val+3,w
  5249  0E67  0429               	iorwf	___xxtofl@val+2,w
  5250  0E68  0428               	iorwf	___xxtofl@val+1,w
  5251  0E69  0427               	iorwf	___xxtofl@val,w
  5252  0E6A  1D03               	skipz
  5253  0E6B  2E6D               	goto	u3151
  5254  0E6C  2E6E               	goto	u3150
  5255  0E6D                     u3151:
  5256  0E6D  2E77               	goto	l2888
  5257  0E6E                     u3150:
  5258  0E6E                     l2884:
  5259  0E6E  3000               	movlw	0
  5260  0E6F  00AA               	movwf	?___xxtofl+3
  5261  0E70  3000               	movlw	0
  5262  0E71  00A9               	movwf	?___xxtofl+2
  5263  0E72  3000               	movlw	0
  5264  0E73  00A8               	movwf	?___xxtofl+1
  5265  0E74  3000               	movlw	0
  5266  0E75  00A7               	movwf	?___xxtofl
  5267  0E76  2EFD               	goto	l1103
  5268  0E77                     l2888:
  5269  0E77  3096               	movlw	150
  5270  0E78  00FF               	movwf	btemp+1
  5271  0E79  087F               	movf	btemp+1,w
  5272  0E7A  00B0               	movwf	___xxtofl@exp
  5273  0E7B  2E89               	goto	l2894
  5274  0E7C                     l2890:
  5275  0E7C  3001               	movlw	1
  5276  0E7D  00FF               	movwf	btemp+1
  5277  0E7E  087F               	movf	btemp+1,w
  5278  0E7F  07B0               	addwf	___xxtofl@exp,f
  5279  0E80                     l2892:
  5280  0E80  3001               	movlw	1
  5281  0E81                     u3165:
  5282  0E81  1003               	clrc
  5283  0E82  0CB4               	rrf	___xxtofl@arg+3,f
  5284  0E83  0CB3               	rrf	___xxtofl@arg+2,f
  5285  0E84  0CB2               	rrf	___xxtofl@arg+1,f
  5286  0E85  0CB1               	rrf	___xxtofl@arg,f
  5287  0E86  3EFF               	addlw	-1
  5288  0E87  1D03               	skipz
  5289  0E88  2E81               	goto	u3165
  5290  0E89                     l2894:
  5291  0E89  30FE               	movlw	254
  5292  0E8A  0534               	andwf	___xxtofl@arg+3,w
  5293  0E8B  1D03               	btfss	3,2
  5294  0E8C  2E8E               	goto	u3171
  5295  0E8D  2E8F               	goto	u3170
  5296  0E8E                     u3171:
  5297  0E8E  2E7C               	goto	l2890
  5298  0E8F                     u3170:
  5299  0E8F  2EAB               	goto	l2902
  5300  0E90                     l2896:
  5301  0E90  3001               	movlw	1
  5302  0E91  00FF               	movwf	btemp+1
  5303  0E92  087F               	movf	btemp+1,w
  5304  0E93  07B0               	addwf	___xxtofl@exp,f
  5305  0E94                     l2898:
  5306  0E94  3001               	movlw	1
  5307  0E95  07B1               	addwf	___xxtofl@arg,f
  5308  0E96  3000               	movlw	0
  5309  0E97  1803               	skipnc
  5310  0E98  3001               	movlw	1
  5311  0E99  07B2               	addwf	___xxtofl@arg+1,f
  5312  0E9A  3000               	movlw	0
  5313  0E9B  1803               	skipnc
  5314  0E9C  3001               	movlw	1
  5315  0E9D  07B3               	addwf	___xxtofl@arg+2,f
  5316  0E9E  3000               	movlw	0
  5317  0E9F  1803               	skipnc
  5318  0EA0  3001               	movlw	1
  5319  0EA1  07B4               	addwf	___xxtofl@arg+3,f
  5320  0EA2                     l2900:
  5321  0EA2  3001               	movlw	1
  5322  0EA3                     u3185:
  5323  0EA3  1003               	clrc
  5324  0EA4  0CB4               	rrf	___xxtofl@arg+3,f
  5325  0EA5  0CB3               	rrf	___xxtofl@arg+2,f
  5326  0EA6  0CB2               	rrf	___xxtofl@arg+1,f
  5327  0EA7  0CB1               	rrf	___xxtofl@arg,f
  5328  0EA8  3EFF               	addlw	-1
  5329  0EA9  1D03               	skipz
  5330  0EAA  2EA3               	goto	u3185
  5331  0EAB                     l2902:
  5332  0EAB  30FF               	movlw	255
  5333  0EAC  0534               	andwf	___xxtofl@arg+3,w
  5334  0EAD  1D03               	btfss	3,2
  5335  0EAE  2EB0               	goto	u3191
  5336  0EAF  2EB1               	goto	u3190
  5337  0EB0                     u3191:
  5338  0EB0  2E90               	goto	l2896
  5339  0EB1                     u3190:
  5340  0EB1  2EBD               	goto	l2906
  5341  0EB2                     l2904:
  5342  0EB2  3001               	movlw	1
  5343  0EB3  02B0               	subwf	___xxtofl@exp,f
  5344  0EB4  3001               	movlw	1
  5345  0EB5  00AB               	movwf	??___xxtofl
  5346  0EB6                     u3205:
  5347  0EB6  1003               	clrc
  5348  0EB7  0DB1               	rlf	___xxtofl@arg,f
  5349  0EB8  0DB2               	rlf	___xxtofl@arg+1,f
  5350  0EB9  0DB3               	rlf	___xxtofl@arg+2,f
  5351  0EBA  0DB4               	rlf	___xxtofl@arg+3,f
  5352  0EBB  0BAB               	decfsz	??___xxtofl,f
  5353  0EBC  2EB6               	goto	u3205
  5354  0EBD                     l2906:
  5355  0EBD  1BB3               	btfsc	___xxtofl@arg+2,7
  5356  0EBE  2EC0               	goto	u3211
  5357  0EBF  2EC1               	goto	u3210
  5358  0EC0                     u3211:
  5359  0EC0  2EC7               	goto	l1114
  5360  0EC1                     u3210:
  5361  0EC1                     l2908:
  5362  0EC1  3002               	movlw	2
  5363  0EC2  0230               	subwf	___xxtofl@exp,w
  5364  0EC3  1803               	skipnc
  5365  0EC4  2EC6               	goto	u3221
  5366  0EC5  2EC7               	goto	u3220
  5367  0EC6                     u3221:
  5368  0EC6  2EB2               	goto	l2904
  5369  0EC7                     u3220:
  5370  0EC7                     l1114:
  5371  0EC7  1830               	btfsc	___xxtofl@exp,0
  5372  0EC8  2ECA               	goto	u3231
  5373  0EC9  2ECB               	goto	u3230
  5374  0ECA                     u3231:
  5375  0ECA  2ED3               	goto	l1115
  5376  0ECB                     u3230:
  5377  0ECB                     l2910:
  5378  0ECB  30FF               	movlw	255
  5379  0ECC  05B1               	andwf	___xxtofl@arg,f
  5380  0ECD  30FF               	movlw	255
  5381  0ECE  05B2               	andwf	___xxtofl@arg+1,f
  5382  0ECF  307F               	movlw	127
  5383  0ED0  05B3               	andwf	___xxtofl@arg+2,f
  5384  0ED1  30FF               	movlw	255
  5385  0ED2  05B4               	andwf	___xxtofl@arg+3,f
  5386  0ED3                     l1115:
  5387  0ED3  1003               	clrc
  5388  0ED4  0CB0               	rrf	___xxtofl@exp,f
  5389  0ED5                     l2912:
  5390  0ED5  0830               	movf	___xxtofl@exp,w
  5391  0ED6  00AB               	movwf	??___xxtofl
  5392  0ED7  01AC               	clrf	??___xxtofl+1
  5393  0ED8  01AD               	clrf	??___xxtofl+2
  5394  0ED9  01AE               	clrf	??___xxtofl+3
  5395  0EDA  3018               	movlw	24
  5396  0EDB                     u3245:
  5397  0EDB  1003               	clrc
  5398  0EDC  0DAB               	rlf	??___xxtofl,f
  5399  0EDD  0DAC               	rlf	??___xxtofl+1,f
  5400  0EDE  0DAD               	rlf	??___xxtofl+2,f
  5401  0EDF  0DAE               	rlf	??___xxtofl+3,f
  5402  0EE0                     u3240:
  5403  0EE0  3EFF               	addlw	-1
  5404  0EE1  1D03               	skipz
  5405  0EE2  2EDB               	goto	u3245
  5406  0EE3  082B               	movf	??___xxtofl,w
  5407  0EE4  04B1               	iorwf	___xxtofl@arg,f
  5408  0EE5  082C               	movf	??___xxtofl+1,w
  5409  0EE6  04B2               	iorwf	___xxtofl@arg+1,f
  5410  0EE7  082D               	movf	??___xxtofl+2,w
  5411  0EE8  04B3               	iorwf	___xxtofl@arg+2,f
  5412  0EE9  082E               	movf	??___xxtofl+3,w
  5413  0EEA  04B4               	iorwf	___xxtofl@arg+3,f
  5414  0EEB                     l2914:
  5415  0EEB  082F               	movf	___xxtofl@sign,w
  5416  0EEC  1903               	btfsc	3,2
  5417  0EED  2EEF               	goto	u3251
  5418  0EEE  2EF0               	goto	u3250
  5419  0EEF                     u3251:
  5420  0EEF  2EF5               	goto	l2920
  5421  0EF0                     u3250:
  5422  0EF0                     l2916:
  5423  0EF0  1FAA               	btfss	___xxtofl@val+3,7
  5424  0EF1  2EF3               	goto	u3261
  5425  0EF2  2EF4               	goto	u3260
  5426  0EF3                     u3261:
  5427  0EF3  2EF5               	goto	l2920
  5428  0EF4                     u3260:
  5429  0EF4                     l2918:
  5430  0EF4  17B4               	bsf	___xxtofl@arg+3,7
  5431  0EF5                     l2920:
  5432  0EF5  0834               	movf	___xxtofl@arg+3,w
  5433  0EF6  00AA               	movwf	?___xxtofl+3
  5434  0EF7  0833               	movf	___xxtofl@arg+2,w
  5435  0EF8  00A9               	movwf	?___xxtofl+2
  5436  0EF9  0832               	movf	___xxtofl@arg+1,w
  5437  0EFA  00A8               	movwf	?___xxtofl+1
  5438  0EFB  0831               	movf	___xxtofl@arg,w
  5439  0EFC  00A7               	movwf	?___xxtofl
  5440  0EFD                     l1103:
  5441  0EFD  0008               	return
  5442  0EFE                     __end_of___xxtofl:
  5443                           
  5444                           	psect	text30
  5445  0C5A                     __ptext30:	
  5446 ;; *************** function ___fltol *****************
  5447 ;; Defined at:
  5448 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  f1              4   73[BANK0 ] unsigned char 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  exp1            1   78[BANK0 ] unsigned char 
  5453 ;;  sign1           1   77[BANK0 ] unsigned char 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  4   73[BANK0 ] long 
  5456 ;; Registers used:
  5457 ;;		wreg, status,2, status,0, btemp+1
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5463 ;;      Params:         0       4       0       0       0
  5464 ;;      Locals:         0       2       0       0       0
  5465 ;;      Temps:          0       0       4       0       0
  5466 ;;      Totals:         0       6       4       0       0
  5467 ;;Total ram usage:       10 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; Hardware stack levels required when called:    3
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		_LM35_Read_Temp
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           
  5478                           ;psect for function ___fltol
  5479  0C5A                     ___fltol:
  5480  0C5A                     l2526:	
  5481                           ;incstack = 0
  5482                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  5483                           
  5484  0C5A  1003               	clrc
  5485  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5486  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5487  0C5D  0D6B               	rlf	___fltol@f1+2,w
  5488  0C5E  0D6C               	rlf	___fltol@f1+3,w
  5489  0C5F  00FF               	movwf	btemp+1
  5490  0C60  087F               	movf	btemp+1,w
  5491  0C61  00EE               	movwf	___fltol@exp1
  5492  0C62  086E               	movf	___fltol@exp1,w
  5493  0C63  1D03               	btfss	3,2
  5494  0C64  2C66               	goto	u2301
  5495  0C65  2C67               	goto	u2300
  5496  0C66                     u2301:
  5497  0C66  2C70               	goto	l2532
  5498  0C67                     u2300:
  5499  0C67                     l2528:
  5500  0C67  3000               	movlw	0
  5501  0C68  00EC               	movwf	?___fltol+3
  5502  0C69  3000               	movlw	0
  5503  0C6A  00EB               	movwf	?___fltol+2
  5504  0C6B  3000               	movlw	0
  5505  0C6C  00EA               	movwf	?___fltol+1
  5506  0C6D  3000               	movlw	0
  5507  0C6E  00E9               	movwf	?___fltol
  5508  0C6F  2CED               	goto	l854
  5509  0C70                     l2532:
  5510  0C70  0869               	movf	___fltol@f1,w
  5511  0C71  1683               	bsf	3,5	;RP0=1, select bank1
  5512  0C72  1303               	bcf	3,6	;RP1=0, select bank1
  5513  0C73  00D2               	movwf	??___fltol^(0+128)
  5514  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  5515  0C75  1303               	bcf	3,6	;RP1=0, select bank0
  5516  0C76  086A               	movf	___fltol@f1+1,w
  5517  0C77  1683               	bsf	3,5	;RP0=1, select bank1
  5518  0C78  1303               	bcf	3,6	;RP1=0, select bank1
  5519  0C79  00D3               	movwf	(??___fltol^(0+128)+1)
  5520  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5521  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5522  0C7C  086B               	movf	___fltol@f1+2,w
  5523  0C7D  1683               	bsf	3,5	;RP0=1, select bank1
  5524  0C7E  1303               	bcf	3,6	;RP1=0, select bank1
  5525  0C7F  00D4               	movwf	(??___fltol^(0+128)+2)
  5526  0C80  1283               	bcf	3,5	;RP0=0, select bank0
  5527  0C81  1303               	bcf	3,6	;RP1=0, select bank0
  5528  0C82  086C               	movf	___fltol@f1+3,w
  5529  0C83  1683               	bsf	3,5	;RP0=1, select bank1
  5530  0C84  1303               	bcf	3,6	;RP1=0, select bank1
  5531  0C85  00D5               	movwf	(??___fltol^(0+128)+3)
  5532  0C86  301F               	movlw	31
  5533  0C87                     u2315:
  5534  0C87  1003               	clrc
  5535  0C88  0CD5               	rrf	(??___fltol^(0+128)+3),f
  5536  0C89  0CD4               	rrf	(??___fltol^(0+128)+2),f
  5537  0C8A  0CD3               	rrf	(??___fltol^(0+128)+1),f
  5538  0C8B  0CD2               	rrf	??___fltol^(0+128),f
  5539  0C8C                     u2310:
  5540  0C8C  3EFF               	addlw	-1
  5541  0C8D  1D03               	skipz
  5542  0C8E  2C87               	goto	u2315
  5543  0C8F  0852               	movf	??___fltol^(0+128),w
  5544  0C90  00FF               	movwf	btemp+1
  5545  0C91  087F               	movf	btemp+1,w
  5546  0C92  1283               	bcf	3,5	;RP0=0, select bank0
  5547  0C93  1303               	bcf	3,6	;RP1=0, select bank0
  5548  0C94  00ED               	movwf	___fltol@sign1
  5549  0C95                     l2534:
  5550  0C95  17EB               	bsf	___fltol@f1+2,7
  5551  0C96                     l2536:
  5552  0C96  30FF               	movlw	255
  5553  0C97  05E9               	andwf	___fltol@f1,f
  5554  0C98  30FF               	movlw	255
  5555  0C99  05EA               	andwf	___fltol@f1+1,f
  5556  0C9A  30FF               	movlw	255
  5557  0C9B  05EB               	andwf	___fltol@f1+2,f
  5558  0C9C  3000               	movlw	0
  5559  0C9D  05EC               	andwf	___fltol@f1+3,f
  5560  0C9E                     l2538:
  5561  0C9E  3096               	movlw	150
  5562  0C9F  02EE               	subwf	___fltol@exp1,f
  5563  0CA0                     l2540:
  5564  0CA0  1FEE               	btfss	___fltol@exp1,7
  5565  0CA1  2CA3               	goto	u2321
  5566  0CA2  2CA4               	goto	u2320
  5567  0CA3                     u2321:
  5568  0CA3  2CBE               	goto	l2552
  5569  0CA4                     u2320:
  5570  0CA4                     l2542:
  5571  0CA4  086E               	movf	___fltol@exp1,w
  5572  0CA5  3A80               	xorlw	128
  5573  0CA6  3E97               	addlw	151
  5574  0CA7  1803               	skipnc
  5575  0CA8  2CAA               	goto	u2331
  5576  0CA9  2CAB               	goto	u2330
  5577  0CAA                     u2331:
  5578  0CAA  2CAC               	goto	l2548
  5579  0CAB                     u2330:
  5580  0CAB  2C67               	goto	l2528
  5581  0CAC                     l2548:
  5582  0CAC  3001               	movlw	1
  5583  0CAD                     u2345:
  5584  0CAD  1003               	clrc
  5585  0CAE  0CEC               	rrf	___fltol@f1+3,f
  5586  0CAF  0CEB               	rrf	___fltol@f1+2,f
  5587  0CB0  0CEA               	rrf	___fltol@f1+1,f
  5588  0CB1  0CE9               	rrf	___fltol@f1,f
  5589  0CB2  3EFF               	addlw	-1
  5590  0CB3  1D03               	skipz
  5591  0CB4  2CAD               	goto	u2345
  5592  0CB5                     l2550:
  5593  0CB5  3001               	movlw	1
  5594  0CB6  00FF               	movwf	btemp+1
  5595  0CB7  087F               	movf	btemp+1,w
  5596  0CB8  07EE               	addwf	___fltol@exp1,f
  5597  0CB9  1D03               	btfss	3,2
  5598  0CBA  2CBC               	goto	u2351
  5599  0CBB  2CBD               	goto	u2350
  5600  0CBC                     u2351:
  5601  0CBC  2CAC               	goto	l2548
  5602  0CBD                     u2350:
  5603  0CBD  2CDD               	goto	l2560
  5604  0CBE                     l2552:
  5605  0CBE  3020               	movlw	32
  5606  0CBF  026E               	subwf	___fltol@exp1,w
  5607  0CC0  1C03               	skipc
  5608  0CC1  2CC3               	goto	u2361
  5609  0CC2  2CC4               	goto	u2360
  5610  0CC3                     u2361:
  5611  0CC3  2CD8               	goto	l861
  5612  0CC4                     u2360:
  5613  0CC4  2C67               	goto	l2528
  5614  0CC5                     l2558:
  5615  0CC5  3001               	movlw	1
  5616  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  5617  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  5618  0CC8  00D2               	movwf	??___fltol^(0+128)
  5619  0CC9                     u2375:
  5620  0CC9  1003               	clrc
  5621  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  5622  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  5623  0CCC  0DE9               	rlf	___fltol@f1,f
  5624  0CCD  0DEA               	rlf	___fltol@f1+1,f
  5625  0CCE  0DEB               	rlf	___fltol@f1+2,f
  5626  0CCF  0DEC               	rlf	___fltol@f1+3,f
  5627  0CD0  1683               	bsf	3,5	;RP0=1, select bank1
  5628  0CD1  1303               	bcf	3,6	;RP1=0, select bank1
  5629  0CD2  0BD2               	decfsz	??___fltol^(0+128),f
  5630  0CD3  2CC9               	goto	u2375
  5631  0CD4  3001               	movlw	1
  5632  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  5633  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  5634  0CD7  02EE               	subwf	___fltol@exp1,f
  5635  0CD8                     l861:
  5636  0CD8  086E               	movf	___fltol@exp1,w
  5637  0CD9  1D03               	btfss	3,2
  5638  0CDA  2CDC               	goto	u2381
  5639  0CDB  2CDD               	goto	u2380
  5640  0CDC                     u2381:
  5641  0CDC  2CC5               	goto	l2558
  5642  0CDD                     u2380:
  5643  0CDD                     l2560:
  5644  0CDD  086D               	movf	___fltol@sign1,w
  5645  0CDE  1903               	btfsc	3,2
  5646  0CDF  2CE1               	goto	u2391
  5647  0CE0  2CE2               	goto	u2390
  5648  0CE1                     u2391:
  5649  0CE1  2CED               	goto	l864
  5650  0CE2                     u2390:
  5651  0CE2                     l2562:
  5652  0CE2  09E9               	comf	___fltol@f1,f
  5653  0CE3  09EA               	comf	___fltol@f1+1,f
  5654  0CE4  09EB               	comf	___fltol@f1+2,f
  5655  0CE5  09EC               	comf	___fltol@f1+3,f
  5656  0CE6  0AE9               	incf	___fltol@f1,f
  5657  0CE7  1903               	skipnz
  5658  0CE8  0AEA               	incf	___fltol@f1+1,f
  5659  0CE9  1903               	skipnz
  5660  0CEA  0AEB               	incf	___fltol@f1+2,f
  5661  0CEB  1903               	skipnz
  5662  0CEC  0AEC               	incf	___fltol@f1+3,f
  5663  0CED                     l864:
  5664  0CED                     l854:
  5665  0CED  0008               	return
  5666  0CEE                     __end_of___fltol:
  5667                           
  5668                           	psect	text31
  5669  004E                     __ptext31:	
  5670 ;; *************** function ___flmul *****************
  5671 ;; Defined at:
  5672 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  b               4   21[BANK0 ] long 
  5675 ;;  a               4   25[BANK0 ] long 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  prod            4   41[BANK0 ] struct .
  5678 ;;  grs             4   35[BANK0 ] unsigned long 
  5679 ;;  temp            2   45[BANK0 ] struct .
  5680 ;;  bexp            1   40[BANK0 ] unsigned char 
  5681 ;;  aexp            1   39[BANK0 ] unsigned char 
  5682 ;;  sign            1   34[BANK0 ] unsigned char 
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  4   21[BANK0 ] unsigned char 
  5685 ;; Registers used:
  5686 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5692 ;;      Params:         0       8       0       0       0
  5693 ;;      Locals:         0      13       0       0       0
  5694 ;;      Temps:          0       5       0       0       0
  5695 ;;      Totals:         0      26       0       0       0
  5696 ;;Total ram usage:       26 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; Hardware stack levels required when called:    4
  5699 ;; This function calls:
  5700 ;;		__Umul8_16
  5701 ;; This function is called by:
  5702 ;;		_LM35_Read_Temp
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           
  5707                           ;psect for function ___flmul
  5708  004E                     ___flmul:
  5709  004E                     l2734:	
  5710                           ;incstack = 0
  5711                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5712                           
  5713  004E  1283               	bcf	3,5	;RP0=0, select bank0
  5714  004F  1303               	bcf	3,6	;RP1=0, select bank0
  5715  0050  0838               	movf	___flmul@b+3,w
  5716  0051  3980               	andlw	128
  5717  0052  00FF               	movwf	btemp+1
  5718  0053  087F               	movf	btemp+1,w
  5719  0054  00C2               	movwf	___flmul@sign
  5720  0055                     l2736:
  5721  0055  0838               	movf	___flmul@b+3,w
  5722  0056  00BD               	movwf	??___flmul
  5723  0057  073D               	addwf	??___flmul,w
  5724  0058  00FF               	movwf	btemp+1
  5725  0059  087F               	movf	btemp+1,w
  5726  005A  00C8               	movwf	___flmul@bexp
  5727  005B                     l2738:
  5728  005B  1FB7               	btfss	___flmul@b+2,7
  5729  005C  285E               	goto	u2761
  5730  005D  285F               	goto	u2760
  5731  005E                     u2761:
  5732  005E  2860               	goto	l2742
  5733  005F                     u2760:
  5734  005F                     l2740:
  5735  005F  1448               	bsf	___flmul@bexp,0
  5736  0060                     l2742:
  5737  0060  0848               	movf	___flmul@bexp,w
  5738  0061  1903               	btfsc	3,2
  5739  0062  2864               	goto	u2771
  5740  0063  2865               	goto	u2770
  5741  0064                     u2771:
  5742  0064  2874               	goto	l2750
  5743  0065                     u2770:
  5744  0065                     l2744:
  5745  0065  0A48               	incf	___flmul@bexp,w
  5746  0066  1D03               	btfss	3,2
  5747  0067  2869               	goto	u2781
  5748  0068  286A               	goto	u2780
  5749  0069                     u2781:
  5750  0069  2872               	goto	l2748
  5751  006A                     u2780:
  5752  006A                     l2746:
  5753  006A  3000               	movlw	0
  5754  006B  00B8               	movwf	___flmul@b+3
  5755  006C  3000               	movlw	0
  5756  006D  00B7               	movwf	___flmul@b+2
  5757  006E  3000               	movlw	0
  5758  006F  00B6               	movwf	___flmul@b+1
  5759  0070  3000               	movlw	0
  5760  0071  00B5               	movwf	___flmul@b
  5761  0072                     l2748:
  5762  0072  17B7               	bsf	___flmul@b+2,7
  5763  0073  287C               	goto	l2752
  5764  0074                     l2750:
  5765  0074  3000               	movlw	0
  5766  0075  00B8               	movwf	___flmul@b+3
  5767  0076  3000               	movlw	0
  5768  0077  00B7               	movwf	___flmul@b+2
  5769  0078  3000               	movlw	0
  5770  0079  00B6               	movwf	___flmul@b+1
  5771  007A  3000               	movlw	0
  5772  007B  00B5               	movwf	___flmul@b
  5773  007C                     l2752:
  5774  007C  083C               	movf	___flmul@a+3,w
  5775  007D  3980               	andlw	128
  5776  007E  00FF               	movwf	btemp+1
  5777  007F  087F               	movf	btemp+1,w
  5778  0080  06C2               	xorwf	___flmul@sign,f
  5779  0081                     l2754:
  5780  0081  083C               	movf	___flmul@a+3,w
  5781  0082  00BD               	movwf	??___flmul
  5782  0083  073D               	addwf	??___flmul,w
  5783  0084  00FF               	movwf	btemp+1
  5784  0085  087F               	movf	btemp+1,w
  5785  0086  00C7               	movwf	___flmul@aexp
  5786  0087                     l2756:
  5787  0087  1FBB               	btfss	___flmul@a+2,7
  5788  0088  288A               	goto	u2791
  5789  0089  288B               	goto	u2790
  5790  008A                     u2791:
  5791  008A  288C               	goto	l2760
  5792  008B                     u2790:
  5793  008B                     l2758:
  5794  008B  1447               	bsf	___flmul@aexp,0
  5795  008C                     l2760:
  5796  008C  0847               	movf	___flmul@aexp,w
  5797  008D  1903               	btfsc	3,2
  5798  008E  2890               	goto	u2801
  5799  008F  2891               	goto	u2800
  5800  0090                     u2801:
  5801  0090  28A0               	goto	l2768
  5802  0091                     u2800:
  5803  0091                     l2762:
  5804  0091  0A47               	incf	___flmul@aexp,w
  5805  0092  1D03               	btfss	3,2
  5806  0093  2895               	goto	u2811
  5807  0094  2896               	goto	u2810
  5808  0095                     u2811:
  5809  0095  289E               	goto	l2766
  5810  0096                     u2810:
  5811  0096                     l2764:
  5812  0096  3000               	movlw	0
  5813  0097  00BC               	movwf	___flmul@a+3
  5814  0098  3000               	movlw	0
  5815  0099  00BB               	movwf	___flmul@a+2
  5816  009A  3000               	movlw	0
  5817  009B  00BA               	movwf	___flmul@a+1
  5818  009C  3000               	movlw	0
  5819  009D  00B9               	movwf	___flmul@a
  5820  009E                     l2766:
  5821  009E  17BB               	bsf	___flmul@a+2,7
  5822  009F  28A8               	goto	l2770
  5823  00A0                     l2768:
  5824  00A0  3000               	movlw	0
  5825  00A1  00BC               	movwf	___flmul@a+3
  5826  00A2  3000               	movlw	0
  5827  00A3  00BB               	movwf	___flmul@a+2
  5828  00A4  3000               	movlw	0
  5829  00A5  00BA               	movwf	___flmul@a+1
  5830  00A6  3000               	movlw	0
  5831  00A7  00B9               	movwf	___flmul@a
  5832  00A8                     l2770:
  5833  00A8  0847               	movf	___flmul@aexp,w
  5834  00A9  1903               	btfsc	3,2
  5835  00AA  28AC               	goto	u2821
  5836  00AB  28AD               	goto	u2820
  5837  00AC                     u2821:
  5838  00AC  28B2               	goto	l2774
  5839  00AD                     u2820:
  5840  00AD                     l2772:
  5841  00AD  0848               	movf	___flmul@bexp,w
  5842  00AE  1D03               	btfss	3,2
  5843  00AF  28B1               	goto	u2831
  5844  00B0  28B2               	goto	u2830
  5845  00B1                     u2831:
  5846  00B1  28BB               	goto	l2778
  5847  00B2                     u2830:
  5848  00B2                     l2774:
  5849  00B2  3000               	movlw	0
  5850  00B3  00B8               	movwf	?___flmul+3
  5851  00B4  3000               	movlw	0
  5852  00B5  00B7               	movwf	?___flmul+2
  5853  00B6  3000               	movlw	0
  5854  00B7  00B6               	movwf	?___flmul+1
  5855  00B8  3000               	movlw	0
  5856  00B9  00B5               	movwf	?___flmul
  5857  00BA  2BAE               	goto	l1057
  5858  00BB                     l2778:
  5859  00BB  0835               	movf	___flmul@b,w
  5860  00BC  00FF               	movwf	btemp+1
  5861  00BD  087F               	movf	btemp+1,w
  5862  00BE  00A0               	movwf	__Umul8_16@multiplicand
  5863  00BF  083B               	movf	___flmul@a+2,w
  5864  00C0  160A  118A  2742  120A  118A  	fcall	__Umul8_16
  5865  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  5866  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  5867  00C7  0821               	movf	?__Umul8_16+1,w
  5868  00C8  00CE               	movwf	___flmul@temp+1
  5869  00C9  0820               	movf	?__Umul8_16,w
  5870  00CA  00CD               	movwf	___flmul@temp
  5871  00CB                     l2780:
  5872  00CB  084D               	movf	___flmul@temp,w
  5873  00CC  00BD               	movwf	??___flmul
  5874  00CD  01BE               	clrf	??___flmul+1
  5875  00CE  01BF               	clrf	??___flmul+2
  5876  00CF  01C0               	clrf	??___flmul+3
  5877  00D0  0840               	movf	??___flmul+3,w
  5878  00D1  00C6               	movwf	___flmul@grs+3
  5879  00D2  083F               	movf	??___flmul+2,w
  5880  00D3  00C5               	movwf	___flmul@grs+2
  5881  00D4  083E               	movf	??___flmul+1,w
  5882  00D5  00C4               	movwf	___flmul@grs+1
  5883  00D6  083D               	movf	??___flmul,w
  5884  00D7  00C3               	movwf	___flmul@grs
  5885  00D8                     l2782:
  5886  00D8  084E               	movf	___flmul@temp+1,w
  5887  00D9  00BD               	movwf	??___flmul
  5888  00DA  01BE               	clrf	??___flmul+1
  5889  00DB  01BF               	clrf	??___flmul+2
  5890  00DC  01C0               	clrf	??___flmul+3
  5891  00DD  0840               	movf	??___flmul+3,w
  5892  00DE  00CC               	movwf	___flmul@prod+3
  5893  00DF  083F               	movf	??___flmul+2,w
  5894  00E0  00CB               	movwf	___flmul@prod+2
  5895  00E1  083E               	movf	??___flmul+1,w
  5896  00E2  00CA               	movwf	___flmul@prod+1
  5897  00E3  083D               	movf	??___flmul,w
  5898  00E4  00C9               	movwf	___flmul@prod
  5899  00E5  0836               	movf	___flmul@b+1,w
  5900  00E6  00FF               	movwf	btemp+1
  5901  00E7  087F               	movf	btemp+1,w
  5902  00E8  00A0               	movwf	__Umul8_16@multiplicand
  5903  00E9  083A               	movf	___flmul@a+1,w
  5904  00EA  160A  118A  2742  120A  118A  	fcall	__Umul8_16
  5905  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  5906  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  5907  00F1  0821               	movf	?__Umul8_16+1,w
  5908  00F2  00CE               	movwf	___flmul@temp+1
  5909  00F3  0820               	movf	?__Umul8_16,w
  5910  00F4  00CD               	movwf	___flmul@temp
  5911  00F5                     l2784:
  5912  00F5  084D               	movf	___flmul@temp,w
  5913  00F6  00BD               	movwf	??___flmul
  5914  00F7  01BE               	clrf	??___flmul+1
  5915  00F8  01BF               	clrf	??___flmul+2
  5916  00F9  01C0               	clrf	??___flmul+3
  5917  00FA  083D               	movf	??___flmul,w
  5918  00FB  07C3               	addwf	___flmul@grs,f
  5919  00FC  083E               	movf	??___flmul+1,w
  5920  00FD  1103               	clrz
  5921  00FE  1803               	skipnc
  5922  00FF  3E01               	addlw	1
  5923  0100  1903               	skipnz
  5924  0101  2903               	goto	u2841
  5925  0102  07C4               	addwf	___flmul@grs+1,f
  5926  0103                     u2841:
  5927  0103  083F               	movf	??___flmul+2,w
  5928  0104  1103               	clrz
  5929  0105  1803               	skipnc
  5930  0106  3E01               	addlw	1
  5931  0107  1903               	skipnz
  5932  0108  290A               	goto	u2842
  5933  0109  07C5               	addwf	___flmul@grs+2,f
  5934  010A                     u2842:
  5935  010A  0840               	movf	??___flmul+3,w
  5936  010B  1103               	clrz
  5937  010C  1803               	skipnc
  5938  010D  3E01               	addlw	1
  5939  010E  1903               	skipnz
  5940  010F  2911               	goto	u2843
  5941  0110  07C6               	addwf	___flmul@grs+3,f
  5942  0111                     u2843:
  5943  0111                     l2786:
  5944  0111  084E               	movf	___flmul@temp+1,w
  5945  0112  00BD               	movwf	??___flmul
  5946  0113  01BE               	clrf	??___flmul+1
  5947  0114  01BF               	clrf	??___flmul+2
  5948  0115  01C0               	clrf	??___flmul+3
  5949  0116  083D               	movf	??___flmul,w
  5950  0117  07C9               	addwf	___flmul@prod,f
  5951  0118  083E               	movf	??___flmul+1,w
  5952  0119  1103               	clrz
  5953  011A  1803               	skipnc
  5954  011B  3E01               	addlw	1
  5955  011C  1903               	skipnz
  5956  011D  291F               	goto	u2851
  5957  011E  07CA               	addwf	___flmul@prod+1,f
  5958  011F                     u2851:
  5959  011F  083F               	movf	??___flmul+2,w
  5960  0120  1103               	clrz
  5961  0121  1803               	skipnc
  5962  0122  3E01               	addlw	1
  5963  0123  1903               	skipnz
  5964  0124  2926               	goto	u2852
  5965  0125  07CB               	addwf	___flmul@prod+2,f
  5966  0126                     u2852:
  5967  0126  0840               	movf	??___flmul+3,w
  5968  0127  1103               	clrz
  5969  0128  1803               	skipnc
  5970  0129  3E01               	addlw	1
  5971  012A  1903               	skipnz
  5972  012B  292D               	goto	u2853
  5973  012C  07CC               	addwf	___flmul@prod+3,f
  5974  012D                     u2853:
  5975  012D  0837               	movf	___flmul@b+2,w
  5976  012E  00FF               	movwf	btemp+1
  5977  012F  087F               	movf	btemp+1,w
  5978  0130  00A0               	movwf	__Umul8_16@multiplicand
  5979  0131  0839               	movf	___flmul@a,w
  5980  0132  160A  118A  2742  120A  118A  	fcall	__Umul8_16
  5981  0137  1283               	bcf	3,5	;RP0=0, select bank0
  5982  0138  1303               	bcf	3,6	;RP1=0, select bank0
  5983  0139  0821               	movf	?__Umul8_16+1,w
  5984  013A  00CE               	movwf	___flmul@temp+1
  5985  013B  0820               	movf	?__Umul8_16,w
  5986  013C  00CD               	movwf	___flmul@temp
  5987  013D                     l2788:
  5988  013D  084D               	movf	___flmul@temp,w
  5989  013E  00BD               	movwf	??___flmul
  5990  013F  01BE               	clrf	??___flmul+1
  5991  0140  01BF               	clrf	??___flmul+2
  5992  0141  01C0               	clrf	??___flmul+3
  5993  0142  083D               	movf	??___flmul,w
  5994  0143  07C3               	addwf	___flmul@grs,f
  5995  0144  083E               	movf	??___flmul+1,w
  5996  0145  1103               	clrz
  5997  0146  1803               	skipnc
  5998  0147  3E01               	addlw	1
  5999  0148  1903               	skipnz
  6000  0149  294B               	goto	u2861
  6001  014A  07C4               	addwf	___flmul@grs+1,f
  6002  014B                     u2861:
  6003  014B  083F               	movf	??___flmul+2,w
  6004  014C  1103               	clrz
  6005  014D  1803               	skipnc
  6006  014E  3E01               	addlw	1
  6007  014F  1903               	skipnz
  6008  0150  2952               	goto	u2862
  6009  0151  07C5               	addwf	___flmul@grs+2,f
  6010  0152                     u2862:
  6011  0152  0840               	movf	??___flmul+3,w
  6012  0153  1103               	clrz
  6013  0154  1803               	skipnc
  6014  0155  3E01               	addlw	1
  6015  0156  1903               	skipnz
  6016  0157  2959               	goto	u2863
  6017  0158  07C6               	addwf	___flmul@grs+3,f
  6018  0159                     u2863:
  6019  0159                     l2790:
  6020  0159  084E               	movf	___flmul@temp+1,w
  6021  015A  00BD               	movwf	??___flmul
  6022  015B  01BE               	clrf	??___flmul+1
  6023  015C  01BF               	clrf	??___flmul+2
  6024  015D  01C0               	clrf	??___flmul+3
  6025  015E  083D               	movf	??___flmul,w
  6026  015F  07C9               	addwf	___flmul@prod,f
  6027  0160  083E               	movf	??___flmul+1,w
  6028  0161  1103               	clrz
  6029  0162  1803               	skipnc
  6030  0163  3E01               	addlw	1
  6031  0164  1903               	skipnz
  6032  0165  2967               	goto	u2871
  6033  0166  07CA               	addwf	___flmul@prod+1,f
  6034  0167                     u2871:
  6035  0167  083F               	movf	??___flmul+2,w
  6036  0168  1103               	clrz
  6037  0169  1803               	skipnc
  6038  016A  3E01               	addlw	1
  6039  016B  1903               	skipnz
  6040  016C  296E               	goto	u2872
  6041  016D  07CB               	addwf	___flmul@prod+2,f
  6042  016E                     u2872:
  6043  016E  0840               	movf	??___flmul+3,w
  6044  016F  1103               	clrz
  6045  0170  1803               	skipnc
  6046  0171  3E01               	addlw	1
  6047  0172  1903               	skipnz
  6048  0173  2975               	goto	u2873
  6049  0174  07CC               	addwf	___flmul@prod+3,f
  6050  0175                     u2873:
  6051  0175                     l2792:
  6052  0175  3008               	movlw	8
  6053  0176  00BD               	movwf	??___flmul
  6054  0177                     u2885:
  6055  0177  1003               	clrc
  6056  0178  0DC3               	rlf	___flmul@grs,f
  6057  0179  0DC4               	rlf	___flmul@grs+1,f
  6058  017A  0DC5               	rlf	___flmul@grs+2,f
  6059  017B  0DC6               	rlf	___flmul@grs+3,f
  6060  017C  0BBD               	decfsz	??___flmul,f
  6061  017D  2977               	goto	u2885
  6062  017E                     l2794:
  6063  017E  0836               	movf	___flmul@b+1,w
  6064  017F  00FF               	movwf	btemp+1
  6065  0180  087F               	movf	btemp+1,w
  6066  0181  00A0               	movwf	__Umul8_16@multiplicand
  6067  0182  0839               	movf	___flmul@a,w
  6068  0183  160A  118A  2742  120A  118A  	fcall	__Umul8_16
  6069  0188  1283               	bcf	3,5	;RP0=0, select bank0
  6070  0189  1303               	bcf	3,6	;RP1=0, select bank0
  6071  018A  0821               	movf	?__Umul8_16+1,w
  6072  018B  00CE               	movwf	___flmul@temp+1
  6073  018C  0820               	movf	?__Umul8_16,w
  6074  018D  00CD               	movwf	___flmul@temp
  6075  018E                     l2796:
  6076  018E  084D               	movf	___flmul@temp,w
  6077  018F  00BD               	movwf	??___flmul
  6078  0190  084E               	movf	___flmul@temp+1,w
  6079  0191  00BE               	movwf	??___flmul+1
  6080  0192  01BF               	clrf	??___flmul+2
  6081  0193  01C0               	clrf	??___flmul+3
  6082  0194  083D               	movf	??___flmul,w
  6083  0195  07C3               	addwf	___flmul@grs,f
  6084  0196  083E               	movf	??___flmul+1,w
  6085  0197  1103               	clrz
  6086  0198  1803               	skipnc
  6087  0199  3E01               	addlw	1
  6088  019A  1903               	skipnz
  6089  019B  299D               	goto	u2891
  6090  019C  07C4               	addwf	___flmul@grs+1,f
  6091  019D                     u2891:
  6092  019D  083F               	movf	??___flmul+2,w
  6093  019E  1103               	clrz
  6094  019F  1803               	skipnc
  6095  01A0  3E01               	addlw	1
  6096  01A1  1903               	skipnz
  6097  01A2  29A4               	goto	u2892
  6098  01A3  07C5               	addwf	___flmul@grs+2,f
  6099  01A4                     u2892:
  6100  01A4  0840               	movf	??___flmul+3,w
  6101  01A5  1103               	clrz
  6102  01A6  1803               	skipnc
  6103  01A7  3E01               	addlw	1
  6104  01A8  1903               	skipnz
  6105  01A9  29AB               	goto	u2893
  6106  01AA  07C6               	addwf	___flmul@grs+3,f
  6107  01AB                     u2893:
  6108  01AB                     l2798:
  6109  01AB  0835               	movf	___flmul@b,w
  6110  01AC  00FF               	movwf	btemp+1
  6111  01AD  087F               	movf	btemp+1,w
  6112  01AE  00A0               	movwf	__Umul8_16@multiplicand
  6113  01AF  083A               	movf	___flmul@a+1,w
  6114  01B0  160A  118A  2742  120A  118A  	fcall	__Umul8_16
  6115  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  6116  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  6117  01B7  0821               	movf	?__Umul8_16+1,w
  6118  01B8  00CE               	movwf	___flmul@temp+1
  6119  01B9  0820               	movf	?__Umul8_16,w
  6120  01BA  00CD               	movwf	___flmul@temp
  6121  01BB                     l2800:
  6122  01BB  084D               	movf	___flmul@temp,w
  6123  01BC  00BD               	movwf	??___flmul
  6124  01BD  084E               	movf	___flmul@temp+1,w
  6125  01BE  00BE               	movwf	??___flmul+1
  6126  01BF  01BF               	clrf	??___flmul+2
  6127  01C0  01C0               	clrf	??___flmul+3
  6128  01C1  083D               	movf	??___flmul,w
  6129  01C2  07C3               	addwf	___flmul@grs,f
  6130  01C3  083E               	movf	??___flmul+1,w
  6131  01C4  1103               	clrz
  6132  01C5  1803               	skipnc
  6133  01C6  3E01               	addlw	1
  6134  01C7  1903               	skipnz
  6135  01C8  29CA               	goto	u2901
  6136  01C9  07C4               	addwf	___flmul@grs+1,f
  6137  01CA                     u2901:
  6138  01CA  083F               	movf	??___flmul+2,w
  6139  01CB  1103               	clrz
  6140  01CC  1803               	skipnc
  6141  01CD  3E01               	addlw	1
  6142  01CE  1903               	skipnz
  6143  01CF  29D1               	goto	u2902
  6144  01D0  07C5               	addwf	___flmul@grs+2,f
  6145  01D1                     u2902:
  6146  01D1  0840               	movf	??___flmul+3,w
  6147  01D2  1103               	clrz
  6148  01D3  1803               	skipnc
  6149  01D4  3E01               	addlw	1
  6150  01D5  1903               	skipnz
  6151  01D6  29D8               	goto	u2903
  6152  01D7  07C6               	addwf	___flmul@grs+3,f
  6153  01D8                     u2903:
  6154  01D8                     l2802:
  6155  01D8  3008               	movlw	8
  6156  01D9  00BD               	movwf	??___flmul
  6157  01DA                     u2915:
  6158  01DA  1003               	clrc
  6159  01DB  0DC3               	rlf	___flmul@grs,f
  6160  01DC  0DC4               	rlf	___flmul@grs+1,f
  6161  01DD  0DC5               	rlf	___flmul@grs+2,f
  6162  01DE  0DC6               	rlf	___flmul@grs+3,f
  6163  01DF  0BBD               	decfsz	??___flmul,f
  6164  01E0  29DA               	goto	u2915
  6165  01E1  0835               	movf	___flmul@b,w
  6166  01E2  00FF               	movwf	btemp+1
  6167  01E3  087F               	movf	btemp+1,w
  6168  01E4  00A0               	movwf	__Umul8_16@multiplicand
  6169  01E5  0839               	movf	___flmul@a,w
  6170  01E6  160A  118A  2742  120A  118A  	fcall	__Umul8_16
  6171  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  6172  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  6173  01ED  0821               	movf	?__Umul8_16+1,w
  6174  01EE  00CE               	movwf	___flmul@temp+1
  6175  01EF  0820               	movf	?__Umul8_16,w
  6176  01F0  00CD               	movwf	___flmul@temp
  6177  01F1                     l2804:
  6178  01F1  084D               	movf	___flmul@temp,w
  6179  01F2  00BD               	movwf	??___flmul
  6180  01F3  084E               	movf	___flmul@temp+1,w
  6181  01F4  00BE               	movwf	??___flmul+1
  6182  01F5  01BF               	clrf	??___flmul+2
  6183  01F6  01C0               	clrf	??___flmul+3
  6184  01F7  083D               	movf	??___flmul,w
  6185  01F8  07C3               	addwf	___flmul@grs,f
  6186  01F9  083E               	movf	??___flmul+1,w
  6187  01FA  1103               	clrz
  6188  01FB  1803               	skipnc
  6189  01FC  3E01               	addlw	1
  6190  01FD  1903               	skipnz
  6191  01FE  2A00               	goto	u2921
  6192  01FF  07C4               	addwf	___flmul@grs+1,f
  6193  0200                     u2921:
  6194  0200  083F               	movf	??___flmul+2,w
  6195  0201  1103               	clrz
  6196  0202  1803               	skipnc
  6197  0203  3E01               	addlw	1
  6198  0204  1903               	skipnz
  6199  0205  2A07               	goto	u2922
  6200  0206  07C5               	addwf	___flmul@grs+2,f
  6201  0207                     u2922:
  6202  0207  0840               	movf	??___flmul+3,w
  6203  0208  1103               	clrz
  6204  0209  1803               	skipnc
  6205  020A  3E01               	addlw	1
  6206  020B  1903               	skipnz
  6207  020C  2A0E               	goto	u2923
  6208  020D  07C6               	addwf	___flmul@grs+3,f
  6209  020E                     u2923:
  6210  020E                     l2806:
  6211  020E  0836               	movf	___flmul@b+1,w
  6212  020F  00FF               	movwf	btemp+1
  6213  0210  087F               	movf	btemp+1,w
  6214  0211  00A0               	movwf	__Umul8_16@multiplicand
  6215  0212  083B               	movf	___flmul@a+2,w
  6216  0213  160A  118A  2742  120A  118A  	fcall	__Umul8_16
  6217  0218  1283               	bcf	3,5	;RP0=0, select bank0
  6218  0219  1303               	bcf	3,6	;RP1=0, select bank0
  6219  021A  0821               	movf	?__Umul8_16+1,w
  6220  021B  00CE               	movwf	___flmul@temp+1
  6221  021C  0820               	movf	?__Umul8_16,w
  6222  021D  00CD               	movwf	___flmul@temp
  6223  021E  084D               	movf	___flmul@temp,w
  6224  021F  00BD               	movwf	??___flmul
  6225  0220  084E               	movf	___flmul@temp+1,w
  6226  0221  00BE               	movwf	??___flmul+1
  6227  0222  01BF               	clrf	??___flmul+2
  6228  0223  01C0               	clrf	??___flmul+3
  6229  0224  083D               	movf	??___flmul,w
  6230  0225  07C9               	addwf	___flmul@prod,f
  6231  0226  083E               	movf	??___flmul+1,w
  6232  0227  1103               	clrz
  6233  0228  1803               	skipnc
  6234  0229  3E01               	addlw	1
  6235  022A  1903               	skipnz
  6236  022B  2A2D               	goto	u2931
  6237  022C  07CA               	addwf	___flmul@prod+1,f
  6238  022D                     u2931:
  6239  022D  083F               	movf	??___flmul+2,w
  6240  022E  1103               	clrz
  6241  022F  1803               	skipnc
  6242  0230  3E01               	addlw	1
  6243  0231  1903               	skipnz
  6244  0232  2A34               	goto	u2932
  6245  0233  07CB               	addwf	___flmul@prod+2,f
  6246  0234                     u2932:
  6247  0234  0840               	movf	??___flmul+3,w
  6248  0235  1103               	clrz
  6249  0236  1803               	skipnc
  6250  0237  3E01               	addlw	1
  6251  0238  1903               	skipnz
  6252  0239  2A3B               	goto	u2933
  6253  023A  07CC               	addwf	___flmul@prod+3,f
  6254  023B                     u2933:
  6255  023B                     l2808:
  6256  023B  0837               	movf	___flmul@b+2,w
  6257  023C  00FF               	movwf	btemp+1
  6258  023D  087F               	movf	btemp+1,w
  6259  023E  00A0               	movwf	__Umul8_16@multiplicand
  6260  023F  083A               	movf	___flmul@a+1,w
  6261  0240  160A  118A  2742  120A  118A  	fcall	__Umul8_16
  6262  0245  1283               	bcf	3,5	;RP0=0, select bank0
  6263  0246  1303               	bcf	3,6	;RP1=0, select bank0
  6264  0247  0821               	movf	?__Umul8_16+1,w
  6265  0248  00CE               	movwf	___flmul@temp+1
  6266  0249  0820               	movf	?__Umul8_16,w
  6267  024A  00CD               	movwf	___flmul@temp
  6268  024B                     l2810:
  6269  024B  084D               	movf	___flmul@temp,w
  6270  024C  00BD               	movwf	??___flmul
  6271  024D  084E               	movf	___flmul@temp+1,w
  6272  024E  00BE               	movwf	??___flmul+1
  6273  024F  01BF               	clrf	??___flmul+2
  6274  0250  01C0               	clrf	??___flmul+3
  6275  0251  083D               	movf	??___flmul,w
  6276  0252  07C9               	addwf	___flmul@prod,f
  6277  0253  083E               	movf	??___flmul+1,w
  6278  0254  1103               	clrz
  6279  0255  1803               	skipnc
  6280  0256  3E01               	addlw	1
  6281  0257  1903               	skipnz
  6282  0258  2A5A               	goto	u2941
  6283  0259  07CA               	addwf	___flmul@prod+1,f
  6284  025A                     u2941:
  6285  025A  083F               	movf	??___flmul+2,w
  6286  025B  1103               	clrz
  6287  025C  1803               	skipnc
  6288  025D  3E01               	addlw	1
  6289  025E  1903               	skipnz
  6290  025F  2A61               	goto	u2942
  6291  0260  07CB               	addwf	___flmul@prod+2,f
  6292  0261                     u2942:
  6293  0261  0840               	movf	??___flmul+3,w
  6294  0262  1103               	clrz
  6295  0263  1803               	skipnc
  6296  0264  3E01               	addlw	1
  6297  0265  1903               	skipnz
  6298  0266  2A68               	goto	u2943
  6299  0267  07CC               	addwf	___flmul@prod+3,f
  6300  0268                     u2943:
  6301  0268  0837               	movf	___flmul@b+2,w
  6302  0269  00FF               	movwf	btemp+1
  6303  026A  087F               	movf	btemp+1,w
  6304  026B  00A0               	movwf	__Umul8_16@multiplicand
  6305  026C  083B               	movf	___flmul@a+2,w
  6306  026D  160A  118A  2742  120A  118A  	fcall	__Umul8_16
  6307  0272  1283               	bcf	3,5	;RP0=0, select bank0
  6308  0273  1303               	bcf	3,6	;RP1=0, select bank0
  6309  0274  0821               	movf	?__Umul8_16+1,w
  6310  0275  00CE               	movwf	___flmul@temp+1
  6311  0276  0820               	movf	?__Umul8_16,w
  6312  0277  00CD               	movwf	___flmul@temp
  6313  0278                     l2812:
  6314  0278  084D               	movf	___flmul@temp,w
  6315  0279  00BD               	movwf	??___flmul
  6316  027A  084E               	movf	___flmul@temp+1,w
  6317  027B  00BE               	movwf	??___flmul+1
  6318  027C  01BF               	clrf	??___flmul+2
  6319  027D  01C0               	clrf	??___flmul+3
  6320  027E  3008               	movlw	8
  6321  027F                     u2955:
  6322  027F  1003               	clrc
  6323  0280  0DBD               	rlf	??___flmul,f
  6324  0281  0DBE               	rlf	??___flmul+1,f
  6325  0282  0DBF               	rlf	??___flmul+2,f
  6326  0283  0DC0               	rlf	??___flmul+3,f
  6327  0284                     u2950:
  6328  0284  3EFF               	addlw	-1
  6329  0285  1D03               	skipz
  6330  0286  2A7F               	goto	u2955
  6331  0287  083D               	movf	??___flmul,w
  6332  0288  07C9               	addwf	___flmul@prod,f
  6333  0289  083E               	movf	??___flmul+1,w
  6334  028A  1103               	clrz
  6335  028B  1803               	skipnc
  6336  028C  3E01               	addlw	1
  6337  028D  1903               	skipnz
  6338  028E  2A90               	goto	u2961
  6339  028F  07CA               	addwf	___flmul@prod+1,f
  6340  0290                     u2961:
  6341  0290  083F               	movf	??___flmul+2,w
  6342  0291  1103               	clrz
  6343  0292  1803               	skipnc
  6344  0293  3E01               	addlw	1
  6345  0294  1903               	skipnz
  6346  0295  2A97               	goto	u2962
  6347  0296  07CB               	addwf	___flmul@prod+2,f
  6348  0297                     u2962:
  6349  0297  0840               	movf	??___flmul+3,w
  6350  0298  1103               	clrz
  6351  0299  1803               	skipnc
  6352  029A  3E01               	addlw	1
  6353  029B  1903               	skipnz
  6354  029C  2A9E               	goto	u2963
  6355  029D  07CC               	addwf	___flmul@prod+3,f
  6356  029E                     u2963:
  6357  029E                     l2814:
  6358  029E  0843               	movf	___flmul@grs,w
  6359  029F  00BD               	movwf	??___flmul
  6360  02A0  0844               	movf	___flmul@grs+1,w
  6361  02A1  00BE               	movwf	??___flmul+1
  6362  02A2  0845               	movf	___flmul@grs+2,w
  6363  02A3  00BF               	movwf	??___flmul+2
  6364  02A4  0846               	movf	___flmul@grs+3,w
  6365  02A5  00C0               	movwf	??___flmul+3
  6366  02A6  3018               	movlw	24
  6367  02A7                     u2975:
  6368  02A7  1003               	clrc
  6369  02A8  0CC0               	rrf	??___flmul+3,f
  6370  02A9  0CBF               	rrf	??___flmul+2,f
  6371  02AA  0CBE               	rrf	??___flmul+1,f
  6372  02AB  0CBD               	rrf	??___flmul,f
  6373  02AC                     u2970:
  6374  02AC  3EFF               	addlw	-1
  6375  02AD  1D03               	skipz
  6376  02AE  2AA7               	goto	u2975
  6377  02AF  083D               	movf	??___flmul,w
  6378  02B0  07C9               	addwf	___flmul@prod,f
  6379  02B1  083E               	movf	??___flmul+1,w
  6380  02B2  1103               	clrz
  6381  02B3  1803               	skipnc
  6382  02B4  3E01               	addlw	1
  6383  02B5  1903               	skipnz
  6384  02B6  2AB8               	goto	u2981
  6385  02B7  07CA               	addwf	___flmul@prod+1,f
  6386  02B8                     u2981:
  6387  02B8  083F               	movf	??___flmul+2,w
  6388  02B9  1103               	clrz
  6389  02BA  1803               	skipnc
  6390  02BB  3E01               	addlw	1
  6391  02BC  1903               	skipnz
  6392  02BD  2ABF               	goto	u2982
  6393  02BE  07CB               	addwf	___flmul@prod+2,f
  6394  02BF                     u2982:
  6395  02BF  0840               	movf	??___flmul+3,w
  6396  02C0  1103               	clrz
  6397  02C1  1803               	skipnc
  6398  02C2  3E01               	addlw	1
  6399  02C3  1903               	skipnz
  6400  02C4  2AC6               	goto	u2983
  6401  02C5  07CC               	addwf	___flmul@prod+3,f
  6402  02C6                     u2983:
  6403  02C6                     l2816:
  6404  02C6  3008               	movlw	8
  6405  02C7  00BD               	movwf	??___flmul
  6406  02C8                     u2995:
  6407  02C8  1003               	clrc
  6408  02C9  0DC3               	rlf	___flmul@grs,f
  6409  02CA  0DC4               	rlf	___flmul@grs+1,f
  6410  02CB  0DC5               	rlf	___flmul@grs+2,f
  6411  02CC  0DC6               	rlf	___flmul@grs+3,f
  6412  02CD  0BBD               	decfsz	??___flmul,f
  6413  02CE  2AC8               	goto	u2995
  6414  02CF                     l2818:
  6415  02CF  0848               	movf	___flmul@bexp,w
  6416  02D0  0747               	addwf	___flmul@aexp,w
  6417  02D1  00BD               	movwf	??___flmul
  6418  02D2  01BE               	clrf	??___flmul+1
  6419  02D3  0DBE               	rlf	??___flmul+1,f
  6420  02D4  083D               	movf	??___flmul,w
  6421  02D5  3E82               	addlw	130
  6422  02D6  00CD               	movwf	___flmul@temp
  6423  02D7  083E               	movf	??___flmul+1,w
  6424  02D8  1803               	skipnc
  6425  02D9  3E01               	addlw	1
  6426  02DA  3EFF               	addlw	255
  6427  02DB  00CE               	movwf	___flmul@temp+1
  6428  02DC  2AFA               	goto	l2830
  6429  02DD                     l2820:
  6430  02DD  3001               	movlw	1
  6431  02DE  00BD               	movwf	??___flmul
  6432  02DF                     u3005:
  6433  02DF  1003               	clrc
  6434  02E0  0DC9               	rlf	___flmul@prod,f
  6435  02E1  0DCA               	rlf	___flmul@prod+1,f
  6436  02E2  0DCB               	rlf	___flmul@prod+2,f
  6437  02E3  0DCC               	rlf	___flmul@prod+3,f
  6438  02E4  0BBD               	decfsz	??___flmul,f
  6439  02E5  2ADF               	goto	u3005
  6440  02E6                     l2822:
  6441  02E6  1FC6               	btfss	___flmul@grs+3,7
  6442  02E7  2AE9               	goto	u3011
  6443  02E8  2AEA               	goto	u3010
  6444  02E9                     u3011:
  6445  02E9  2AEB               	goto	l2826
  6446  02EA                     u3010:
  6447  02EA                     l2824:
  6448  02EA  1449               	bsf	___flmul@prod,0
  6449  02EB                     l2826:
  6450  02EB  3001               	movlw	1
  6451  02EC  00BD               	movwf	??___flmul
  6452  02ED                     u3025:
  6453  02ED  1003               	clrc
  6454  02EE  0DC3               	rlf	___flmul@grs,f
  6455  02EF  0DC4               	rlf	___flmul@grs+1,f
  6456  02F0  0DC5               	rlf	___flmul@grs+2,f
  6457  02F1  0DC6               	rlf	___flmul@grs+3,f
  6458  02F2  0BBD               	decfsz	??___flmul,f
  6459  02F3  2AED               	goto	u3025
  6460  02F4                     l2828:
  6461  02F4  30FF               	movlw	255
  6462  02F5  07CD               	addwf	___flmul@temp,f
  6463  02F6  1803               	skipnc
  6464  02F7  0ACE               	incf	___flmul@temp+1,f
  6465  02F8  30FF               	movlw	255
  6466  02F9  07CE               	addwf	___flmul@temp+1,f
  6467  02FA                     l2830:
  6468  02FA  1FCB               	btfss	___flmul@prod+2,7
  6469  02FB  2AFD               	goto	u3031
  6470  02FC  2AFE               	goto	u3030
  6471  02FD                     u3031:
  6472  02FD  2ADD               	goto	l2820
  6473  02FE                     u3030:
  6474  02FE                     l2832:
  6475  02FE  01C7               	clrf	___flmul@aexp
  6476  02FF                     l2834:
  6477  02FF  1FC6               	btfss	___flmul@grs+3,7
  6478  0300  2B02               	goto	u3041
  6479  0301  2B03               	goto	u3040
  6480  0302                     u3041:
  6481  0302  2B1F               	goto	l2842
  6482  0303                     u3040:
  6483  0303                     l2836:
  6484  0303  30FF               	movlw	255
  6485  0304  0543               	andwf	___flmul@grs,w
  6486  0305  00BD               	movwf	??___flmul
  6487  0306  30FF               	movlw	255
  6488  0307  0544               	andwf	___flmul@grs+1,w
  6489  0308  00BE               	movwf	??___flmul+1
  6490  0309  30FF               	movlw	255
  6491  030A  0545               	andwf	___flmul@grs+2,w
  6492  030B  00BF               	movwf	??___flmul+2
  6493  030C  307F               	movlw	127
  6494  030D  0546               	andwf	___flmul@grs+3,w
  6495  030E  00C0               	movwf	??___flmul+3
  6496  030F  0840               	movf	??___flmul+3,w
  6497  0310  043F               	iorwf	??___flmul+2,w
  6498  0311  043E               	iorwf	??___flmul+1,w
  6499  0312  043D               	iorwf	??___flmul,w
  6500  0313  1903               	skipnz
  6501  0314  2B16               	goto	u3051
  6502  0315  2B17               	goto	u3050
  6503  0316                     u3051:
  6504  0316  2B1A               	goto	l1063
  6505  0317                     u3050:
  6506  0317                     l2838:
  6507  0317  01C7               	clrf	___flmul@aexp
  6508  0318  0AC7               	incf	___flmul@aexp,f
  6509  0319  2B1F               	goto	l2842
  6510  031A                     l1063:
  6511  031A  1C49               	btfss	___flmul@prod,0
  6512  031B  2B1D               	goto	u3061
  6513  031C  2B1E               	goto	u3060
  6514  031D                     u3061:
  6515  031D  2B1F               	goto	l2842
  6516  031E                     u3060:
  6517  031E  2B17               	goto	l2838
  6518  031F                     l2842:
  6519  031F  0847               	movf	___flmul@aexp,w
  6520  0320  1903               	btfsc	3,2
  6521  0321  2B23               	goto	u3071
  6522  0322  2B24               	goto	u3070
  6523  0323                     u3071:
  6524  0323  2B55               	goto	l2852
  6525  0324                     u3070:
  6526  0324                     l2844:
  6527  0324  3001               	movlw	1
  6528  0325  07C9               	addwf	___flmul@prod,f
  6529  0326  3000               	movlw	0
  6530  0327  1803               	skipnc
  6531  0328  3001               	movlw	1
  6532  0329  07CA               	addwf	___flmul@prod+1,f
  6533  032A  3000               	movlw	0
  6534  032B  1803               	skipnc
  6535  032C  3001               	movlw	1
  6536  032D  07CB               	addwf	___flmul@prod+2,f
  6537  032E  3000               	movlw	0
  6538  032F  1803               	skipnc
  6539  0330  3001               	movlw	1
  6540  0331  07CC               	addwf	___flmul@prod+3,f
  6541  0332                     l2846:
  6542  0332  1C4C               	btfss	___flmul@prod+3,0
  6543  0333  2B35               	goto	u3081
  6544  0334  2B36               	goto	u3080
  6545  0335                     u3081:
  6546  0335  2B55               	goto	l2852
  6547  0336                     u3080:
  6548  0336                     l2848:
  6549  0336  0849               	movf	___flmul@prod,w
  6550  0337  00BD               	movwf	??___flmul
  6551  0338  084A               	movf	___flmul@prod+1,w
  6552  0339  00BE               	movwf	??___flmul+1
  6553  033A  084B               	movf	___flmul@prod+2,w
  6554  033B  00BF               	movwf	??___flmul+2
  6555  033C  084C               	movf	___flmul@prod+3,w
  6556  033D  00C0               	movwf	??___flmul+3
  6557  033E  3001               	movlw	1
  6558  033F  00C1               	movwf	??___flmul+4
  6559  0340                     u3095:
  6560  0340  0D40               	rlf	??___flmul+3,w
  6561  0341  0CC0               	rrf	??___flmul+3,f
  6562  0342  0CBF               	rrf	??___flmul+2,f
  6563  0343  0CBE               	rrf	??___flmul+1,f
  6564  0344  0CBD               	rrf	??___flmul,f
  6565  0345                     u3090:
  6566  0345  0BC1               	decfsz	??___flmul+4,f
  6567  0346  2B40               	goto	u3095
  6568  0347  0840               	movf	??___flmul+3,w
  6569  0348  00CC               	movwf	___flmul@prod+3
  6570  0349  083F               	movf	??___flmul+2,w
  6571  034A  00CB               	movwf	___flmul@prod+2
  6572  034B  083E               	movf	??___flmul+1,w
  6573  034C  00CA               	movwf	___flmul@prod+1
  6574  034D  083D               	movf	??___flmul,w
  6575  034E  00C9               	movwf	___flmul@prod
  6576  034F                     l2850:
  6577  034F  3001               	movlw	1
  6578  0350  07CD               	addwf	___flmul@temp,f
  6579  0351  1803               	skipnc
  6580  0352  0ACE               	incf	___flmul@temp+1,f
  6581  0353  3000               	movlw	0
  6582  0354  07CE               	addwf	___flmul@temp+1,f
  6583  0355                     l2852:
  6584  0355  084E               	movf	___flmul@temp+1,w
  6585  0356  3A80               	xorlw	128
  6586  0357  00FF               	movwf	btemp+1
  6587  0358  3080               	movlw	128
  6588  0359  027F               	subwf	btemp+1,w
  6589  035A  1D03               	skipz
  6590  035B  2B5E               	goto	u3105
  6591  035C  30FF               	movlw	255
  6592  035D  024D               	subwf	___flmul@temp,w
  6593  035E                     u3105:
  6594  035E  1C03               	skipc
  6595  035F  2B61               	goto	u3101
  6596  0360  2B62               	goto	u3100
  6597  0361                     u3101:
  6598  0361  2B6D               	goto	l2856
  6599  0362                     u3100:
  6600  0362                     l2854:
  6601  0362  307F               	movlw	127
  6602  0363  1283               	bcf	3,5	;RP0=0, select bank0
  6603  0364  1303               	bcf	3,6	;RP1=0, select bank0
  6604  0365  00CC               	movwf	___flmul@prod+3
  6605  0366  3080               	movlw	128
  6606  0367  00CB               	movwf	___flmul@prod+2
  6607  0368  3000               	movlw	0
  6608  0369  00CA               	movwf	___flmul@prod+1
  6609  036A  3000               	movlw	0
  6610  036B  00C9               	movwf	___flmul@prod
  6611  036C  2BA2               	goto	l1069
  6612  036D                     l2856:
  6613  036D  1283               	bcf	3,5	;RP0=0, select bank0
  6614  036E  1303               	bcf	3,6	;RP1=0, select bank0
  6615  036F  084E               	movf	___flmul@temp+1,w
  6616  0370  3A80               	xorlw	128
  6617  0371  00FF               	movwf	btemp+1
  6618  0372  3080               	movlw	128
  6619  0373  027F               	subwf	btemp+1,w
  6620  0374  1D03               	skipz
  6621  0375  2B78               	goto	u3115
  6622  0376  3001               	movlw	1
  6623  0377  024D               	subwf	___flmul@temp,w
  6624  0378                     u3115:
  6625  0378  1803               	skipnc
  6626  0379  2B7B               	goto	u3111
  6627  037A  2B7C               	goto	u3110
  6628  037B                     u3111:
  6629  037B  2B88               	goto	l2862
  6630  037C                     u3110:
  6631  037C                     l2858:
  6632  037C  3000               	movlw	0
  6633  037D  1283               	bcf	3,5	;RP0=0, select bank0
  6634  037E  1303               	bcf	3,6	;RP1=0, select bank0
  6635  037F  00CC               	movwf	___flmul@prod+3
  6636  0380  3000               	movlw	0
  6637  0381  00CB               	movwf	___flmul@prod+2
  6638  0382  3000               	movlw	0
  6639  0383  00CA               	movwf	___flmul@prod+1
  6640  0384  3000               	movlw	0
  6641  0385  00C9               	movwf	___flmul@prod
  6642  0386                     l2860:
  6643  0386  01C2               	clrf	___flmul@sign
  6644  0387  2BA2               	goto	l1069
  6645  0388                     l2862:
  6646  0388  1283               	bcf	3,5	;RP0=0, select bank0
  6647  0389  1303               	bcf	3,6	;RP1=0, select bank0
  6648  038A  084D               	movf	___flmul@temp,w
  6649  038B  00FF               	movwf	btemp+1
  6650  038C  087F               	movf	btemp+1,w
  6651  038D  00C8               	movwf	___flmul@bexp
  6652  038E                     l2864:
  6653  038E  30FF               	movlw	255
  6654  038F  05C9               	andwf	___flmul@prod,f
  6655  0390  30FF               	movlw	255
  6656  0391  05CA               	andwf	___flmul@prod+1,f
  6657  0392  307F               	movlw	127
  6658  0393  05CB               	andwf	___flmul@prod+2,f
  6659  0394  3000               	movlw	0
  6660  0395  05CC               	andwf	___flmul@prod+3,f
  6661  0396                     l2866:
  6662  0396  1C48               	btfss	___flmul@bexp,0
  6663  0397  2B99               	goto	u3121
  6664  0398  2B9A               	goto	u3120
  6665  0399                     u3121:
  6666  0399  2B9B               	goto	l2870
  6667  039A                     u3120:
  6668  039A                     l2868:
  6669  039A  17CB               	bsf	___flmul@prod+2,7
  6670  039B                     l2870:
  6671  039B  0848               	movf	___flmul@bexp,w
  6672  039C  00BD               	movwf	??___flmul
  6673  039D  1003               	clrc
  6674  039E  0C3D               	rrf	??___flmul,w
  6675  039F  00FF               	movwf	btemp+1
  6676  03A0  087F               	movf	btemp+1,w
  6677  03A1  00CC               	movwf	___flmul@prod+3
  6678  03A2                     l1069:
  6679  03A2  0842               	movf	___flmul@sign,w
  6680  03A3  00FF               	movwf	btemp+1
  6681  03A4  087F               	movf	btemp+1,w
  6682  03A5  04CC               	iorwf	___flmul@prod+3,f
  6683  03A6                     l2872:
  6684  03A6  084C               	movf	___flmul@prod+3,w
  6685  03A7  00B8               	movwf	?___flmul+3
  6686  03A8  084B               	movf	___flmul@prod+2,w
  6687  03A9  00B7               	movwf	?___flmul+2
  6688  03AA  084A               	movf	___flmul@prod+1,w
  6689  03AB  00B6               	movwf	?___flmul+1
  6690  03AC  0849               	movf	___flmul@prod,w
  6691  03AD  00B5               	movwf	?___flmul
  6692  03AE                     l1057:
  6693  03AE  0008               	return
  6694  03AF                     __end_of___flmul:
  6695                           
  6696                           	psect	text32
  6697  1742                     __ptext32:	
  6698 ;; *************** function __Umul8_16 *****************
  6699 ;; Defined at:
  6700 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  multiplier      1    wreg     unsigned char 
  6703 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6706 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  6707 ;;  product         2    4[BANK0 ] unsigned int 
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  2    0[BANK0 ] unsigned int 
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6717 ;;      Params:         0       2       0       0       0
  6718 ;;      Locals:         0       5       0       0       0
  6719 ;;      Temps:          0       2       0       0       0
  6720 ;;      Totals:         0       9       0       0       0
  6721 ;;Total ram usage:        9 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; Hardware stack levels required when called:    3
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		___flmul
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           
  6732                           ;psect for function __Umul8_16
  6733  1742                     __Umul8_16:
  6734                           
  6735                           ;incstack = 0
  6736                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6737                           ;__Umul8_16@multiplier stored from wreg
  6738  1742  1283               	bcf	3,5	;RP0=0, select bank0
  6739  1743  1303               	bcf	3,6	;RP1=0, select bank0
  6740  1744  00A8               	movwf	__Umul8_16@multiplier
  6741  1745                     l2354:
  6742  1745  01A4               	clrf	__Umul8_16@product
  6743  1746  01A5               	clrf	__Umul8_16@product+1
  6744  1747                     l2356:
  6745  1747  0820               	movf	__Umul8_16@multiplicand,w
  6746  1748  00A2               	movwf	??__Umul8_16
  6747  1749  01A3               	clrf	??__Umul8_16+1
  6748  174A  0822               	movf	??__Umul8_16,w
  6749  174B  00A6               	movwf	__Umul8_16@word_mpld
  6750  174C  0823               	movf	??__Umul8_16+1,w
  6751  174D  00A7               	movwf	__Umul8_16@word_mpld+1
  6752  174E                     l2358:
  6753  174E  1C28               	btfss	__Umul8_16@multiplier,0
  6754  174F  2F51               	goto	u2001
  6755  1750  2F52               	goto	u2000
  6756  1751                     u2001:
  6757  1751  2F58               	goto	l1076
  6758  1752                     u2000:
  6759  1752                     l2360:
  6760  1752  0826               	movf	__Umul8_16@word_mpld,w
  6761  1753  07A4               	addwf	__Umul8_16@product,f
  6762  1754  1803               	skipnc
  6763  1755  0AA5               	incf	__Umul8_16@product+1,f
  6764  1756  0827               	movf	__Umul8_16@word_mpld+1,w
  6765  1757  07A5               	addwf	__Umul8_16@product+1,f
  6766  1758                     l1076:
  6767  1758  3001               	movlw	1
  6768  1759                     u2015:
  6769  1759  1003               	clrc
  6770  175A  0DA6               	rlf	__Umul8_16@word_mpld,f
  6771  175B  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  6772  175C  3EFF               	addlw	-1
  6773  175D  1D03               	skipz
  6774  175E  2F59               	goto	u2015
  6775  175F  1003               	clrc
  6776  1760  0CA8               	rrf	__Umul8_16@multiplier,f
  6777  1761                     l2362:
  6778  1761  0828               	movf	__Umul8_16@multiplier,w
  6779  1762  1D03               	btfss	3,2
  6780  1763  2F65               	goto	u2021
  6781  1764  2F66               	goto	u2020
  6782  1765                     u2021:
  6783  1765  2F4E               	goto	l2358
  6784  1766                     u2020:
  6785  1766                     l2364:
  6786  1766  0825               	movf	__Umul8_16@product+1,w
  6787  1767  00A1               	movwf	?__Umul8_16+1
  6788  1768  0824               	movf	__Umul8_16@product,w
  6789  1769  00A0               	movwf	?__Umul8_16
  6790  176A                     l1078:
  6791  176A  0008               	return
  6792  176B                     __end_of__Umul8_16:
  6793                           
  6794                           	psect	text33
  6795  03AF                     __ptext33:	
  6796 ;; *************** function ___fldiv *****************
  6797 ;; Defined at:
  6798 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  a               4   47[BANK0 ] unsigned int 
  6801 ;;  b               4   51[BANK0 ] unsigned int 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;  grs             4   67[BANK0 ] unsigned long 
  6804 ;;  rem             4   60[BANK0 ] unsigned long 
  6805 ;;  new_exp         2   65[BANK0 ] int 
  6806 ;;  aexp            1   72[BANK0 ] unsigned char 
  6807 ;;  bexp            1   71[BANK0 ] unsigned char 
  6808 ;;  sign            1   64[BANK0 ] unsigned char 
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  4   47[BANK0 ] unsigned char 
  6811 ;; Registers used:
  6812 ;;		wreg, status,2, status,0, btemp+1
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6818 ;;      Params:         0       8       0       0       0
  6819 ;;      Locals:         0      13       0       0       0
  6820 ;;      Temps:          0       5       0       0       0
  6821 ;;      Totals:         0      26       0       0       0
  6822 ;;Total ram usage:       26 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; Hardware stack levels required when called:    3
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_LM35_Read_Temp
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           
  6833                           ;psect for function ___fldiv
  6834  03AF                     ___fldiv:
  6835  03AF                     l2590:	
  6836                           ;incstack = 0
  6837                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6838                           
  6839  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  6840  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  6841  03B1  0856               	movf	___fldiv@b+3,w
  6842  03B2  3980               	andlw	128
  6843  03B3  00FF               	movwf	btemp+1
  6844  03B4  087F               	movf	btemp+1,w
  6845  03B5  00E0               	movwf	___fldiv@sign
  6846  03B6                     l2592:
  6847  03B6  0856               	movf	___fldiv@b+3,w
  6848  03B7  00D7               	movwf	??___fldiv
  6849  03B8  0757               	addwf	??___fldiv,w
  6850  03B9  00FF               	movwf	btemp+1
  6851  03BA  087F               	movf	btemp+1,w
  6852  03BB  00E7               	movwf	___fldiv@bexp
  6853  03BC                     l2594:
  6854  03BC  1FD5               	btfss	___fldiv@b+2,7
  6855  03BD  2BBF               	goto	u2471
  6856  03BE  2BC0               	goto	u2470
  6857  03BF                     u2471:
  6858  03BF  2BC1               	goto	l2598
  6859  03C0                     u2470:
  6860  03C0                     l2596:
  6861  03C0  1467               	bsf	___fldiv@bexp,0
  6862  03C1                     l2598:
  6863  03C1  0867               	movf	___fldiv@bexp,w
  6864  03C2  1903               	btfsc	3,2
  6865  03C3  2BC5               	goto	u2481
  6866  03C4  2BC6               	goto	u2480
  6867  03C5                     u2481:
  6868  03C5  2BD6               	goto	l2608
  6869  03C6                     u2480:
  6870  03C6                     l2600:
  6871  03C6  0A67               	incf	___fldiv@bexp,w
  6872  03C7  1D03               	btfss	3,2
  6873  03C8  2BCA               	goto	u2491
  6874  03C9  2BCB               	goto	u2490
  6875  03CA                     u2491:
  6876  03CA  2BD3               	goto	l2604
  6877  03CB                     u2490:
  6878  03CB                     l2602:
  6879  03CB  3000               	movlw	0
  6880  03CC  00D6               	movwf	___fldiv@b+3
  6881  03CD  3000               	movlw	0
  6882  03CE  00D5               	movwf	___fldiv@b+2
  6883  03CF  3000               	movlw	0
  6884  03D0  00D4               	movwf	___fldiv@b+1
  6885  03D1  3000               	movlw	0
  6886  03D2  00D3               	movwf	___fldiv@b
  6887  03D3                     l2604:
  6888  03D3  17D5               	bsf	___fldiv@b+2,7
  6889  03D4                     l2606:
  6890  03D4  01D6               	clrf	___fldiv@b+3
  6891  03D5  2BDE               	goto	l2610
  6892  03D6                     l2608:
  6893  03D6  3000               	movlw	0
  6894  03D7  00D6               	movwf	___fldiv@b+3
  6895  03D8  3000               	movlw	0
  6896  03D9  00D5               	movwf	___fldiv@b+2
  6897  03DA  3000               	movlw	0
  6898  03DB  00D4               	movwf	___fldiv@b+1
  6899  03DC  3000               	movlw	0
  6900  03DD  00D3               	movwf	___fldiv@b
  6901  03DE                     l2610:
  6902  03DE  0852               	movf	___fldiv@a+3,w
  6903  03DF  3980               	andlw	128
  6904  03E0  00FF               	movwf	btemp+1
  6905  03E1  087F               	movf	btemp+1,w
  6906  03E2  06E0               	xorwf	___fldiv@sign,f
  6907  03E3                     l2612:
  6908  03E3  0852               	movf	___fldiv@a+3,w
  6909  03E4  00D7               	movwf	??___fldiv
  6910  03E5  0757               	addwf	??___fldiv,w
  6911  03E6  00FF               	movwf	btemp+1
  6912  03E7  087F               	movf	btemp+1,w
  6913  03E8  00E8               	movwf	___fldiv@aexp
  6914  03E9                     l2614:
  6915  03E9  1FD1               	btfss	___fldiv@a+2,7
  6916  03EA  2BEC               	goto	u2501
  6917  03EB  2BED               	goto	u2500
  6918  03EC                     u2501:
  6919  03EC  2BEE               	goto	l2618
  6920  03ED                     u2500:
  6921  03ED                     l2616:
  6922  03ED  1468               	bsf	___fldiv@aexp,0
  6923  03EE                     l2618:
  6924  03EE  0868               	movf	___fldiv@aexp,w
  6925  03EF  1903               	btfsc	3,2
  6926  03F0  2BF2               	goto	u2511
  6927  03F1  2BF3               	goto	u2510
  6928  03F2                     u2511:
  6929  03F2  2C03               	goto	l2628
  6930  03F3                     u2510:
  6931  03F3                     l2620:
  6932  03F3  0A68               	incf	___fldiv@aexp,w
  6933  03F4  1D03               	btfss	3,2
  6934  03F5  2BF7               	goto	u2521
  6935  03F6  2BF8               	goto	u2520
  6936  03F7                     u2521:
  6937  03F7  2C00               	goto	l2624
  6938  03F8                     u2520:
  6939  03F8                     l2622:
  6940  03F8  3000               	movlw	0
  6941  03F9  00D2               	movwf	___fldiv@a+3
  6942  03FA  3000               	movlw	0
  6943  03FB  00D1               	movwf	___fldiv@a+2
  6944  03FC  3000               	movlw	0
  6945  03FD  00D0               	movwf	___fldiv@a+1
  6946  03FE  3000               	movlw	0
  6947  03FF  00CF               	movwf	___fldiv@a
  6948  0400                     l2624:
  6949  0400  17D1               	bsf	___fldiv@a+2,7
  6950  0401                     l2626:
  6951  0401  01D2               	clrf	___fldiv@a+3
  6952  0402  2C0B               	goto	l1017
  6953  0403                     l2628:
  6954  0403  3000               	movlw	0
  6955  0404  00D2               	movwf	___fldiv@a+3
  6956  0405  3000               	movlw	0
  6957  0406  00D1               	movwf	___fldiv@a+2
  6958  0407  3000               	movlw	0
  6959  0408  00D0               	movwf	___fldiv@a+1
  6960  0409  3000               	movlw	0
  6961  040A  00CF               	movwf	___fldiv@a
  6962  040B                     l1017:
  6963  040B  0852               	movf	___fldiv@a+3,w
  6964  040C  0451               	iorwf	___fldiv@a+2,w
  6965  040D  0450               	iorwf	___fldiv@a+1,w
  6966  040E  044F               	iorwf	___fldiv@a,w
  6967  040F  1D03               	skipz
  6968  0410  2C12               	goto	u2531
  6969  0411  2C13               	goto	u2530
  6970  0412                     u2531:
  6971  0412  2C2C               	goto	l2638
  6972  0413                     u2530:
  6973  0413                     l2630:
  6974  0413  3000               	movlw	0
  6975  0414  00D6               	movwf	___fldiv@b+3
  6976  0415  3000               	movlw	0
  6977  0416  00D5               	movwf	___fldiv@b+2
  6978  0417  3000               	movlw	0
  6979  0418  00D4               	movwf	___fldiv@b+1
  6980  0419  3000               	movlw	0
  6981  041A  00D3               	movwf	___fldiv@b
  6982  041B  3080               	movlw	128
  6983  041C  04D5               	iorwf	___fldiv@b+2,f
  6984  041D  307F               	movlw	127
  6985  041E  04D6               	iorwf	___fldiv@b+3,f
  6986  041F                     l2632:
  6987  041F  0860               	movf	___fldiv@sign,w
  6988  0420  00FF               	movwf	btemp+1
  6989  0421  087F               	movf	btemp+1,w
  6990  0422  04D6               	iorwf	___fldiv@b+3,f
  6991  0423                     l2634:
  6992  0423  0856               	movf	___fldiv@b+3,w
  6993  0424  00D2               	movwf	?___fldiv+3
  6994  0425  0855               	movf	___fldiv@b+2,w
  6995  0426  00D1               	movwf	?___fldiv+2
  6996  0427  0854               	movf	___fldiv@b+1,w
  6997  0428  00D0               	movwf	?___fldiv+1
  6998  0429  0853               	movf	___fldiv@b,w
  6999  042A  00CF               	movwf	?___fldiv
  7000  042B  2D8B               	goto	l1019
  7001  042C                     l2638:
  7002  042C  0867               	movf	___fldiv@bexp,w
  7003  042D  1D03               	btfss	3,2
  7004  042E  2C30               	goto	u2541
  7005  042F  2C31               	goto	u2540
  7006  0430                     u2541:
  7007  0430  2C3A               	goto	l2644
  7008  0431                     u2540:
  7009  0431                     l2640:
  7010  0431  3000               	movlw	0
  7011  0432  00D2               	movwf	?___fldiv+3
  7012  0433  3000               	movlw	0
  7013  0434  00D1               	movwf	?___fldiv+2
  7014  0435  3000               	movlw	0
  7015  0436  00D0               	movwf	?___fldiv+1
  7016  0437  3000               	movlw	0
  7017  0438  00CF               	movwf	?___fldiv
  7018  0439  2D8B               	goto	l1019
  7019  043A                     l2644:
  7020  043A  0867               	movf	___fldiv@bexp,w
  7021  043B  00D7               	movwf	??___fldiv
  7022  043C  01D8               	clrf	??___fldiv+1
  7023  043D  0858               	movf	??___fldiv+1,w
  7024  043E  00DA               	movwf	??___fldiv+3
  7025  043F  0868               	movf	___fldiv@aexp,w
  7026  0440  0257               	subwf	??___fldiv,w
  7027  0441  00D9               	movwf	??___fldiv+2
  7028  0442  1C03               	skipc
  7029  0443  03DA               	decf	??___fldiv+3,f
  7030  0444  0859               	movf	??___fldiv+2,w
  7031  0445  3E7F               	addlw	127
  7032  0446  00E1               	movwf	___fldiv@new_exp
  7033  0447  085A               	movf	??___fldiv+3,w
  7034  0448  1803               	skipnc
  7035  0449  3E01               	addlw	1
  7036  044A  3E00               	addlw	0
  7037  044B  00E2               	movwf	___fldiv@new_exp+1
  7038  044C                     l2646:
  7039  044C  0856               	movf	___fldiv@b+3,w
  7040  044D  00DF               	movwf	___fldiv@rem+3
  7041  044E  0855               	movf	___fldiv@b+2,w
  7042  044F  00DE               	movwf	___fldiv@rem+2
  7043  0450  0854               	movf	___fldiv@b+1,w
  7044  0451  00DD               	movwf	___fldiv@rem+1
  7045  0452  0853               	movf	___fldiv@b,w
  7046  0453  00DC               	movwf	___fldiv@rem
  7047  0454                     l2648:
  7048  0454  3000               	movlw	0
  7049  0455  00D6               	movwf	___fldiv@b+3
  7050  0456  3000               	movlw	0
  7051  0457  00D5               	movwf	___fldiv@b+2
  7052  0458  3000               	movlw	0
  7053  0459  00D4               	movwf	___fldiv@b+1
  7054  045A  3000               	movlw	0
  7055  045B  00D3               	movwf	___fldiv@b
  7056  045C                     l2650:
  7057  045C  3000               	movlw	0
  7058  045D  00E6               	movwf	___fldiv@grs+3
  7059  045E  3000               	movlw	0
  7060  045F  00E5               	movwf	___fldiv@grs+2
  7061  0460  3000               	movlw	0
  7062  0461  00E4               	movwf	___fldiv@grs+1
  7063  0462  3000               	movlw	0
  7064  0463  00E3               	movwf	___fldiv@grs
  7065  0464                     l2652:
  7066  0464  01E8               	clrf	___fldiv@aexp
  7067  0465  2CB0               	goto	l2672
  7068  0466                     l2654:
  7069  0466  0868               	movf	___fldiv@aexp,w
  7070  0467  1903               	btfsc	3,2
  7071  0468  2C6A               	goto	u2551
  7072  0469  2C6B               	goto	u2550
  7073  046A                     u2551:
  7074  046A  2C8B               	goto	l2664
  7075  046B                     u2550:
  7076  046B                     l2656:
  7077  046B  3001               	movlw	1
  7078  046C  00D7               	movwf	??___fldiv
  7079  046D                     u2565:
  7080  046D  1003               	clrc
  7081  046E  0DDC               	rlf	___fldiv@rem,f
  7082  046F  0DDD               	rlf	___fldiv@rem+1,f
  7083  0470  0DDE               	rlf	___fldiv@rem+2,f
  7084  0471  0DDF               	rlf	___fldiv@rem+3,f
  7085  0472  0BD7               	decfsz	??___fldiv,f
  7086  0473  2C6D               	goto	u2565
  7087  0474  3001               	movlw	1
  7088  0475  00D7               	movwf	??___fldiv
  7089  0476                     u2575:
  7090  0476  1003               	clrc
  7091  0477  0DD3               	rlf	___fldiv@b,f
  7092  0478  0DD4               	rlf	___fldiv@b+1,f
  7093  0479  0DD5               	rlf	___fldiv@b+2,f
  7094  047A  0DD6               	rlf	___fldiv@b+3,f
  7095  047B  0BD7               	decfsz	??___fldiv,f
  7096  047C  2C76               	goto	u2575
  7097  047D                     l2658:
  7098  047D  1FE6               	btfss	___fldiv@grs+3,7
  7099  047E  2C80               	goto	u2581
  7100  047F  2C81               	goto	u2580
  7101  0480                     u2581:
  7102  0480  2C82               	goto	l2662
  7103  0481                     u2580:
  7104  0481                     l2660:
  7105  0481  1453               	bsf	___fldiv@b,0
  7106  0482                     l2662:
  7107  0482  3001               	movlw	1
  7108  0483  00D7               	movwf	??___fldiv
  7109  0484                     u2595:
  7110  0484  1003               	clrc
  7111  0485  0DE3               	rlf	___fldiv@grs,f
  7112  0486  0DE4               	rlf	___fldiv@grs+1,f
  7113  0487  0DE5               	rlf	___fldiv@grs+2,f
  7114  0488  0DE6               	rlf	___fldiv@grs+3,f
  7115  0489  0BD7               	decfsz	??___fldiv,f
  7116  048A  2C84               	goto	u2595
  7117  048B                     l2664:
  7118  048B  0852               	movf	___fldiv@a+3,w
  7119  048C  025F               	subwf	___fldiv@rem+3,w
  7120  048D  1D03               	skipz
  7121  048E  2C99               	goto	u2605
  7122  048F  0851               	movf	___fldiv@a+2,w
  7123  0490  025E               	subwf	___fldiv@rem+2,w
  7124  0491  1D03               	skipz
  7125  0492  2C99               	goto	u2605
  7126  0493  0850               	movf	___fldiv@a+1,w
  7127  0494  025D               	subwf	___fldiv@rem+1,w
  7128  0495  1D03               	skipz
  7129  0496  2C99               	goto	u2605
  7130  0497  084F               	movf	___fldiv@a,w
  7131  0498  025C               	subwf	___fldiv@rem,w
  7132  0499                     u2605:
  7133  0499  1C03               	skipc
  7134  049A  2C9C               	goto	u2601
  7135  049B  2C9D               	goto	u2600
  7136  049C                     u2601:
  7137  049C  2CAC               	goto	l2670
  7138  049D                     u2600:
  7139  049D                     l2666:
  7140  049D  1766               	bsf	___fldiv@grs+3,6
  7141  049E                     l2668:
  7142  049E  084F               	movf	___fldiv@a,w
  7143  049F  02DC               	subwf	___fldiv@rem,f
  7144  04A0  0850               	movf	___fldiv@a+1,w
  7145  04A1  1C03               	skipc
  7146  04A2  0F50               	incfsz	___fldiv@a+1,w
  7147  04A3  02DD               	subwf	___fldiv@rem+1,f
  7148  04A4  0851               	movf	___fldiv@a+2,w
  7149  04A5  1C03               	skipc
  7150  04A6  0F51               	incfsz	___fldiv@a+2,w
  7151  04A7  02DE               	subwf	___fldiv@rem+2,f
  7152  04A8  0852               	movf	___fldiv@a+3,w
  7153  04A9  1C03               	skipc
  7154  04AA  0F52               	incfsz	___fldiv@a+3,w
  7155  04AB  02DF               	subwf	___fldiv@rem+3,f
  7156  04AC                     l2670:
  7157  04AC  3001               	movlw	1
  7158  04AD  00FF               	movwf	btemp+1
  7159  04AE  087F               	movf	btemp+1,w
  7160  04AF  07E8               	addwf	___fldiv@aexp,f
  7161  04B0                     l2672:
  7162  04B0  301A               	movlw	26
  7163  04B1  0268               	subwf	___fldiv@aexp,w
  7164  04B2  1C03               	skipc
  7165  04B3  2CB5               	goto	u2611
  7166  04B4  2CB6               	goto	u2610
  7167  04B5                     u2611:
  7168  04B5  2C66               	goto	l2654
  7169  04B6                     u2610:
  7170  04B6                     l2674:
  7171  04B6  085F               	movf	___fldiv@rem+3,w
  7172  04B7  045E               	iorwf	___fldiv@rem+2,w
  7173  04B8  045D               	iorwf	___fldiv@rem+1,w
  7174  04B9  045C               	iorwf	___fldiv@rem,w
  7175  04BA  1903               	skipnz
  7176  04BB  2CBD               	goto	u2621
  7177  04BC  2CBE               	goto	u2620
  7178  04BD                     u2621:
  7179  04BD  2CDD               	goto	l2688
  7180  04BE                     u2620:
  7181  04BE                     l2676:
  7182  04BE  1463               	bsf	___fldiv@grs,0
  7183  04BF  2CDD               	goto	l2688
  7184  04C0                     l2678:
  7185  04C0  3001               	movlw	1
  7186  04C1  00D7               	movwf	??___fldiv
  7187  04C2                     u2635:
  7188  04C2  1003               	clrc
  7189  04C3  0DD3               	rlf	___fldiv@b,f
  7190  04C4  0DD4               	rlf	___fldiv@b+1,f
  7191  04C5  0DD5               	rlf	___fldiv@b+2,f
  7192  04C6  0DD6               	rlf	___fldiv@b+3,f
  7193  04C7  0BD7               	decfsz	??___fldiv,f
  7194  04C8  2CC2               	goto	u2635
  7195  04C9                     l2680:
  7196  04C9  1FE6               	btfss	___fldiv@grs+3,7
  7197  04CA  2CCC               	goto	u2641
  7198  04CB  2CCD               	goto	u2640
  7199  04CC                     u2641:
  7200  04CC  2CCE               	goto	l2684
  7201  04CD                     u2640:
  7202  04CD                     l2682:
  7203  04CD  1453               	bsf	___fldiv@b,0
  7204  04CE                     l2684:
  7205  04CE  3001               	movlw	1
  7206  04CF  00D7               	movwf	??___fldiv
  7207  04D0                     u2655:
  7208  04D0  1003               	clrc
  7209  04D1  0DE3               	rlf	___fldiv@grs,f
  7210  04D2  0DE4               	rlf	___fldiv@grs+1,f
  7211  04D3  0DE5               	rlf	___fldiv@grs+2,f
  7212  04D4  0DE6               	rlf	___fldiv@grs+3,f
  7213  04D5  0BD7               	decfsz	??___fldiv,f
  7214  04D6  2CD0               	goto	u2655
  7215  04D7                     l2686:
  7216  04D7  30FF               	movlw	255
  7217  04D8  07E1               	addwf	___fldiv@new_exp,f
  7218  04D9  1803               	skipnc
  7219  04DA  0AE2               	incf	___fldiv@new_exp+1,f
  7220  04DB  30FF               	movlw	255
  7221  04DC  07E2               	addwf	___fldiv@new_exp+1,f
  7222  04DD                     l2688:
  7223  04DD  1FD5               	btfss	___fldiv@b+2,7
  7224  04DE  2CE0               	goto	u2661
  7225  04DF  2CE1               	goto	u2660
  7226  04E0                     u2661:
  7227  04E0  2CC0               	goto	l2678
  7228  04E1                     u2660:
  7229  04E1                     l2690:
  7230  04E1  01E8               	clrf	___fldiv@aexp
  7231  04E2                     l2692:
  7232  04E2  1FE6               	btfss	___fldiv@grs+3,7
  7233  04E3  2CE5               	goto	u2671
  7234  04E4  2CE6               	goto	u2670
  7235  04E5                     u2671:
  7236  04E5  2D02               	goto	l2700
  7237  04E6                     u2670:
  7238  04E6                     l2694:
  7239  04E6  30FF               	movlw	255
  7240  04E7  0563               	andwf	___fldiv@grs,w
  7241  04E8  00D7               	movwf	??___fldiv
  7242  04E9  30FF               	movlw	255
  7243  04EA  0564               	andwf	___fldiv@grs+1,w
  7244  04EB  00D8               	movwf	??___fldiv+1
  7245  04EC  30FF               	movlw	255
  7246  04ED  0565               	andwf	___fldiv@grs+2,w
  7247  04EE  00D9               	movwf	??___fldiv+2
  7248  04EF  307F               	movlw	127
  7249  04F0  0566               	andwf	___fldiv@grs+3,w
  7250  04F1  00DA               	movwf	??___fldiv+3
  7251  04F2  085A               	movf	??___fldiv+3,w
  7252  04F3  0459               	iorwf	??___fldiv+2,w
  7253  04F4  0458               	iorwf	??___fldiv+1,w
  7254  04F5  0457               	iorwf	??___fldiv,w
  7255  04F6  1903               	skipnz
  7256  04F7  2CF9               	goto	u2681
  7257  04F8  2CFA               	goto	u2680
  7258  04F9                     u2681:
  7259  04F9  2CFD               	goto	l1033
  7260  04FA                     u2680:
  7261  04FA                     l2696:
  7262  04FA  01E8               	clrf	___fldiv@aexp
  7263  04FB  0AE8               	incf	___fldiv@aexp,f
  7264  04FC  2D02               	goto	l2700
  7265  04FD                     l1033:
  7266  04FD  1C53               	btfss	___fldiv@b,0
  7267  04FE  2D00               	goto	u2691
  7268  04FF  2D01               	goto	u2690
  7269  0500                     u2691:
  7270  0500  2D02               	goto	l2700
  7271  0501                     u2690:
  7272  0501  2CFA               	goto	l2696
  7273  0502                     l2700:
  7274  0502  0868               	movf	___fldiv@aexp,w
  7275  0503  1903               	btfsc	3,2
  7276  0504  2D06               	goto	u2701
  7277  0505  2D07               	goto	u2700
  7278  0506                     u2701:
  7279  0506  2D38               	goto	l2710
  7280  0507                     u2700:
  7281  0507                     l2702:
  7282  0507  3001               	movlw	1
  7283  0508  07D3               	addwf	___fldiv@b,f
  7284  0509  3000               	movlw	0
  7285  050A  1803               	skipnc
  7286  050B  3001               	movlw	1
  7287  050C  07D4               	addwf	___fldiv@b+1,f
  7288  050D  3000               	movlw	0
  7289  050E  1803               	skipnc
  7290  050F  3001               	movlw	1
  7291  0510  07D5               	addwf	___fldiv@b+2,f
  7292  0511  3000               	movlw	0
  7293  0512  1803               	skipnc
  7294  0513  3001               	movlw	1
  7295  0514  07D6               	addwf	___fldiv@b+3,f
  7296  0515                     l2704:
  7297  0515  1C56               	btfss	___fldiv@b+3,0
  7298  0516  2D18               	goto	u2711
  7299  0517  2D19               	goto	u2710
  7300  0518                     u2711:
  7301  0518  2D38               	goto	l2710
  7302  0519                     u2710:
  7303  0519                     l2706:
  7304  0519  0853               	movf	___fldiv@b,w
  7305  051A  00D7               	movwf	??___fldiv
  7306  051B  0854               	movf	___fldiv@b+1,w
  7307  051C  00D8               	movwf	??___fldiv+1
  7308  051D  0855               	movf	___fldiv@b+2,w
  7309  051E  00D9               	movwf	??___fldiv+2
  7310  051F  0856               	movf	___fldiv@b+3,w
  7311  0520  00DA               	movwf	??___fldiv+3
  7312  0521  3001               	movlw	1
  7313  0522  00DB               	movwf	??___fldiv+4
  7314  0523                     u2725:
  7315  0523  0D5A               	rlf	??___fldiv+3,w
  7316  0524  0CDA               	rrf	??___fldiv+3,f
  7317  0525  0CD9               	rrf	??___fldiv+2,f
  7318  0526  0CD8               	rrf	??___fldiv+1,f
  7319  0527  0CD7               	rrf	??___fldiv,f
  7320  0528                     u2720:
  7321  0528  0BDB               	decfsz	??___fldiv+4,f
  7322  0529  2D23               	goto	u2725
  7323  052A  085A               	movf	??___fldiv+3,w
  7324  052B  00D6               	movwf	___fldiv@b+3
  7325  052C  0859               	movf	??___fldiv+2,w
  7326  052D  00D5               	movwf	___fldiv@b+2
  7327  052E  0858               	movf	??___fldiv+1,w
  7328  052F  00D4               	movwf	___fldiv@b+1
  7329  0530  0857               	movf	??___fldiv,w
  7330  0531  00D3               	movwf	___fldiv@b
  7331  0532                     l2708:
  7332  0532  3001               	movlw	1
  7333  0533  07E1               	addwf	___fldiv@new_exp,f
  7334  0534  1803               	skipnc
  7335  0535  0AE2               	incf	___fldiv@new_exp+1,f
  7336  0536  3000               	movlw	0
  7337  0537  07E2               	addwf	___fldiv@new_exp+1,f
  7338  0538                     l2710:
  7339  0538  0862               	movf	___fldiv@new_exp+1,w
  7340  0539  3A80               	xorlw	128
  7341  053A  00FF               	movwf	btemp+1
  7342  053B  3080               	movlw	128
  7343  053C  027F               	subwf	btemp+1,w
  7344  053D  1D03               	skipz
  7345  053E  2D41               	goto	u2735
  7346  053F  30FF               	movlw	255
  7347  0540  0261               	subwf	___fldiv@new_exp,w
  7348  0541                     u2735:
  7349  0541  1C03               	skipc
  7350  0542  2D44               	goto	u2731
  7351  0543  2D45               	goto	u2730
  7352  0544                     u2731:
  7353  0544  2D53               	goto	l2714
  7354  0545                     u2730:
  7355  0545                     l2712:
  7356  0545  30FF               	movlw	255
  7357  0546  1283               	bcf	3,5	;RP0=0, select bank0
  7358  0547  1303               	bcf	3,6	;RP1=0, select bank0
  7359  0548  00E1               	movwf	___fldiv@new_exp
  7360  0549  3000               	movlw	0
  7361  054A  00E2               	movwf	___fldiv@new_exp+1
  7362  054B  3000               	movlw	0
  7363  054C  00D6               	movwf	___fldiv@b+3
  7364  054D  3000               	movlw	0
  7365  054E  00D5               	movwf	___fldiv@b+2
  7366  054F  3000               	movlw	0
  7367  0550  00D4               	movwf	___fldiv@b+1
  7368  0551  3000               	movlw	0
  7369  0552  00D3               	movwf	___fldiv@b
  7370  0553                     l2714:
  7371  0553  1283               	bcf	3,5	;RP0=0, select bank0
  7372  0554  1303               	bcf	3,6	;RP1=0, select bank0
  7373  0555  0862               	movf	___fldiv@new_exp+1,w
  7374  0556  3A80               	xorlw	128
  7375  0557  00FF               	movwf	btemp+1
  7376  0558  3080               	movlw	128
  7377  0559  027F               	subwf	btemp+1,w
  7378  055A  1D03               	skipz
  7379  055B  2D5E               	goto	u2745
  7380  055C  3001               	movlw	1
  7381  055D  0261               	subwf	___fldiv@new_exp,w
  7382  055E                     u2745:
  7383  055E  1803               	skipnc
  7384  055F  2D61               	goto	u2741
  7385  0560  2D62               	goto	u2740
  7386  0561                     u2741:
  7387  0561  2D6F               	goto	l2722
  7388  0562                     u2740:
  7389  0562                     l2716:
  7390  0562  1283               	bcf	3,5	;RP0=0, select bank0
  7391  0563  1303               	bcf	3,6	;RP1=0, select bank0
  7392  0564  01E1               	clrf	___fldiv@new_exp
  7393  0565  01E2               	clrf	___fldiv@new_exp+1
  7394  0566                     l2718:
  7395  0566  3000               	movlw	0
  7396  0567  00D6               	movwf	___fldiv@b+3
  7397  0568  3000               	movlw	0
  7398  0569  00D5               	movwf	___fldiv@b+2
  7399  056A  3000               	movlw	0
  7400  056B  00D4               	movwf	___fldiv@b+1
  7401  056C  3000               	movlw	0
  7402  056D  00D3               	movwf	___fldiv@b
  7403  056E                     l2720:
  7404  056E  01E0               	clrf	___fldiv@sign
  7405  056F                     l2722:
  7406  056F  1283               	bcf	3,5	;RP0=0, select bank0
  7407  0570  1303               	bcf	3,6	;RP1=0, select bank0
  7408  0571  0861               	movf	___fldiv@new_exp,w
  7409  0572  00FF               	movwf	btemp+1
  7410  0573  087F               	movf	btemp+1,w
  7411  0574  00E7               	movwf	___fldiv@bexp
  7412  0575                     l2724:
  7413  0575  1C67               	btfss	___fldiv@bexp,0
  7414  0576  2D78               	goto	u2751
  7415  0577  2D79               	goto	u2750
  7416  0578                     u2751:
  7417  0578  2D7B               	goto	l2728
  7418  0579                     u2750:
  7419  0579                     l2726:
  7420  0579  17D5               	bsf	___fldiv@b+2,7
  7421  057A  2D7F               	goto	l1041
  7422  057B                     l2728:
  7423  057B  307F               	movlw	127
  7424  057C  00FF               	movwf	btemp+1
  7425  057D  087F               	movf	btemp+1,w
  7426  057E  05D5               	andwf	___fldiv@b+2,f
  7427  057F                     l1041:
  7428  057F  0867               	movf	___fldiv@bexp,w
  7429  0580  00D7               	movwf	??___fldiv
  7430  0581  1003               	clrc
  7431  0582  0C57               	rrf	??___fldiv,w
  7432  0583  00FF               	movwf	btemp+1
  7433  0584  087F               	movf	btemp+1,w
  7434  0585  00D6               	movwf	___fldiv@b+3
  7435  0586  0860               	movf	___fldiv@sign,w
  7436  0587  00FF               	movwf	btemp+1
  7437  0588  087F               	movf	btemp+1,w
  7438  0589  04D6               	iorwf	___fldiv@b+3,f
  7439  058A  2C23               	goto	l2634
  7440  058B                     l1019:
  7441  058B  0008               	return
  7442  058C                     __end_of___fldiv:
  7443                           
  7444                           	psect	text34
  7445  0B6C                     __ptext34:	
  7446 ;; *************** function _ADC_get_Sample *****************
  7447 ;; Defined at:
  7448 ;;		line 27 in file "ADC.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;  ADC_channel     1    wreg     const unsigned char 
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;  ADC_channel     1    6[BANK0 ] const unsigned char 
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  2    0[BANK0 ] unsigned short 
  7455 ;; Registers used:
  7456 ;;		wreg, status,2, status,0, btemp+1
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7462 ;;      Params:         0       2       0       0       0
  7463 ;;      Locals:         0       1       0       0       0
  7464 ;;      Temps:          0       4       0       0       0
  7465 ;;      Totals:         0       7       0       0       0
  7466 ;;Total ram usage:        7 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; Hardware stack levels required when called:    3
  7469 ;; This function calls:
  7470 ;;		Nothing
  7471 ;; This function is called by:
  7472 ;;		_LM35_Read_Temp
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           
  7477                           ;psect for function _ADC_get_Sample
  7478  0B6C                     _ADC_get_Sample:
  7479                           
  7480                           ;incstack = 0
  7481                           ; Regs used in _ADC_get_Sample: [wreg+status,2+status,0+btemp+1]
  7482                           ;ADC_get_Sample@ADC_channel stored from wreg
  7483  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  7484  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  7485  0B6E  00A6               	movwf	ADC_get_Sample@ADC_channel
  7486  0B6F                     l2402:
  7487                           
  7488                           ;ADC.c: 27: uint16 ADC_get_Sample(const uint8 ADC_channel);ADC.c: 28: {;ADC.c: 30:     A
      +                          DCON0 |= (ADC_channel << 3);
  7489  0B6F  0826               	movf	ADC_get_Sample@ADC_channel,w	;volatile
  7490  0B70  00A2               	movwf	??_ADC_get_Sample
  7491  0B71  3002               	movlw	2
  7492  0B72                     u2045:
  7493  0B72  1003               	clrc
  7494  0B73  0DA2               	rlf	??_ADC_get_Sample,f
  7495  0B74  3EFF               	addlw	-1
  7496  0B75  1D03               	skipz
  7497  0B76  2B72               	goto	u2045
  7498  0B77  1003               	clrc
  7499  0B78  0D22               	rlf	??_ADC_get_Sample,w
  7500  0B79  00FF               	movwf	btemp+1
  7501  0B7A  087F               	movf	btemp+1,w
  7502  0B7B  049F               	iorwf	31,f	;volatile
  7503  0B7C                     l2404:
  7504                           
  7505                           ;ADC.c: 32:     for(DelayCount = (((8000000UL)/1000000)*25/152); DelayCount>0; DelayCoun
      +                          t--) __asm("NOP");;
  7506  0B7C  3000               	movlw	0
  7507  0B7D  1683               	bsf	3,5	;RP0=1, select bank1
  7508  0B7E  1303               	bcf	3,6	;RP1=0, select bank1
  7509  0B7F  00B5               	movwf	(_DelayCount+3)^(0+128)
  7510  0B80  3000               	movlw	0
  7511  0B81  00B4               	movwf	(_DelayCount+2)^(0+128)
  7512  0B82  3000               	movlw	0
  7513  0B83  00B3               	movwf	(_DelayCount+1)^(0+128)
  7514  0B84  3001               	movlw	1
  7515  0B85  00B2               	movwf	_DelayCount^(0+128)
  7516  0B86                     l2406:
  7517  0B86  0835               	movf	(_DelayCount+3)^(0+128),w
  7518  0B87  0434               	iorwf	(_DelayCount+2)^(0+128),w
  7519  0B88  0433               	iorwf	(_DelayCount+1)^(0+128),w
  7520  0B89  0432               	iorwf	_DelayCount^(0+128),w
  7521  0B8A  1D03               	skipz
  7522  0B8B  2B8D               	goto	u2051
  7523  0B8C  2B8E               	goto	u2050
  7524  0B8D                     u2051:
  7525  0B8D  2B8F               	goto	l214
  7526  0B8E                     u2050:
  7527  0B8E  2BC8               	goto	l215
  7528  0B8F                     l214:
  7529  0B8F  0000               	nop	;# 
  7530  0B90                     l2410:
  7531  0B90  3001               	movlw	1
  7532  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  7533  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  7534  0B93  00A2               	movwf	??_ADC_get_Sample
  7535  0B94  3000               	movlw	0
  7536  0B95  00A3               	movwf	??_ADC_get_Sample+1
  7537  0B96  3000               	movlw	0
  7538  0B97  00A4               	movwf	??_ADC_get_Sample+2
  7539  0B98  3000               	movlw	0
  7540  0B99  00A5               	movwf	??_ADC_get_Sample+3
  7541  0B9A  0822               	movf	??_ADC_get_Sample,w
  7542  0B9B  1683               	bsf	3,5	;RP0=1, select bank1
  7543  0B9C  1303               	bcf	3,6	;RP1=0, select bank1
  7544  0B9D  02B2               	subwf	_DelayCount^(0+128),f
  7545  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  7546  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  7547  0BA0  0823               	movf	??_ADC_get_Sample+1,w
  7548  0BA1  1C03               	skipc
  7549  0BA2  0F23               	incfsz	??_ADC_get_Sample+1,w
  7550  0BA3  2BA5               	goto	u2065
  7551  0BA4  2BA8               	goto	u2066
  7552  0BA5                     u2065:
  7553  0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  7554  0BA6  1303               	bcf	3,6	;RP1=0, select bank1
  7555  0BA7  02B3               	subwf	(_DelayCount+1)^(0+128),f
  7556  0BA8                     u2066:
  7557  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  7558  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  7559  0BAA  0824               	movf	??_ADC_get_Sample+2,w
  7560  0BAB  1C03               	skipc
  7561  0BAC  0F24               	incfsz	??_ADC_get_Sample+2,w
  7562  0BAD  2BAF               	goto	u2067
  7563  0BAE  2BB2               	goto	u2068
  7564  0BAF                     u2067:
  7565  0BAF  1683               	bsf	3,5	;RP0=1, select bank1
  7566  0BB0  1303               	bcf	3,6	;RP1=0, select bank1
  7567  0BB1  02B4               	subwf	(_DelayCount+2)^(0+128),f
  7568  0BB2                     u2068:
  7569  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  7570  0BB3  1303               	bcf	3,6	;RP1=0, select bank0
  7571  0BB4  0825               	movf	??_ADC_get_Sample+3,w
  7572  0BB5  1C03               	skipc
  7573  0BB6  0F25               	incfsz	??_ADC_get_Sample+3,w
  7574  0BB7  2BB9               	goto	u2069
  7575  0BB8  2BBC               	goto	u2060
  7576  0BB9                     u2069:
  7577  0BB9  1683               	bsf	3,5	;RP0=1, select bank1
  7578  0BBA  1303               	bcf	3,6	;RP1=0, select bank1
  7579  0BBB  02B5               	subwf	(_DelayCount+3)^(0+128),f
  7580  0BBC                     u2060:
  7581  0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  7582  0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  7583  0BBE  1683               	bsf	3,5	;RP0=1, select bank1
  7584  0BBF  1303               	bcf	3,6	;RP1=0, select bank1
  7585  0BC0  0835               	movf	(_DelayCount+3)^(0+128),w
  7586  0BC1  0434               	iorwf	(_DelayCount+2)^(0+128),w
  7587  0BC2  0433               	iorwf	(_DelayCount+1)^(0+128),w
  7588  0BC3  0432               	iorwf	_DelayCount^(0+128),w
  7589  0BC4  1D03               	skipz
  7590  0BC5  2BC7               	goto	u2071
  7591  0BC6  2BC8               	goto	u2070
  7592  0BC7                     u2071:
  7593  0BC7  2B8F               	goto	l214
  7594  0BC8                     u2070:
  7595  0BC8                     l215:
  7596                           
  7597                           ;ADC.c: 34:     (ADCON0 |= (1<<2));
  7598  0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  7599  0BC9  1303               	bcf	3,6	;RP1=0, select bank0
  7600  0BCA  151F               	bsf	31,2	;volatile
  7601  0BCB                     l2412:	
  7602                           ;ADC.c: 37:     while (((ADCON0>>2)&1) == 1);
  7603                           
  7604  0BCB  081F               	movf	31,w	;volatile
  7605  0BCC  00A2               	movwf	??_ADC_get_Sample
  7606  0BCD  3002               	movlw	2
  7607  0BCE                     u2085:
  7608  0BCE  1003               	clrc
  7609  0BCF  0CA2               	rrf	??_ADC_get_Sample,f
  7610  0BD0  3EFF               	addlw	-1
  7611  0BD1  1D03               	skipz
  7612  0BD2  2BCE               	goto	u2085
  7613  0BD3  1822               	btfsc	??_ADC_get_Sample,0
  7614  0BD4  2BD6               	goto	u2091
  7615  0BD5  2BD7               	goto	u2090
  7616  0BD6                     u2091:
  7617  0BD6  2BCB               	goto	l2412
  7618  0BD7                     u2090:
  7619  0BD7                     l2414:
  7620                           
  7621                           ;ADC.c: 39:     return ((ADRESH << 8) + ADRESL);
  7622  0BD7  081E               	movf	30,w	;volatile
  7623  0BD8  00A1               	movwf	?_ADC_get_Sample+1
  7624  0BD9  1683               	bsf	3,5	;RP0=1, select bank1
  7625  0BDA  1303               	bcf	3,6	;RP1=0, select bank1
  7626  0BDB  081E               	movf	30,w	;volatile
  7627  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  7628  0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  7629  0BDE  00A0               	movwf	?_ADC_get_Sample
  7630  0BDF                     l219:
  7631  0BDF  0008               	return
  7632  0BE0                     __end_of_ADC_get_Sample:
  7633                           
  7634                           	psect	text35
  7635  15D0                     __ptext35:	
  7636 ;; *************** function _LED_tog *****************
  7637 ;; Defined at:
  7638 ;;		line 36 in file "LED.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;		None
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;		None
  7643 ;; Return value:  Size  Location     Type
  7644 ;;                  1    wreg      void 
  7645 ;; Registers used:
  7646 ;;		wreg, status,2, status,0, btemp+1
  7647 ;; Tracked objects:
  7648 ;;		On entry : 0/0
  7649 ;;		On exit  : 0/0
  7650 ;;		Unchanged: 0/0
  7651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7652 ;;      Params:         0       0       0       0       0
  7653 ;;      Locals:         0       0       0       0       0
  7654 ;;      Temps:          0       0       0       0       0
  7655 ;;      Totals:         0       0       0       0       0
  7656 ;;Total ram usage:        0 bytes
  7657 ;; Hardware stack levels used:    1
  7658 ;; Hardware stack levels required when called:    3
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_Temp_Sens_Task
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           
  7667                           ;psect for function _LED_tog
  7668  15D0                     _LED_tog:
  7669  15D0                     l2936:	
  7670                           ;incstack = 0
  7671                           ; Regs used in _LED_tog: [wreg+status,2+status,0+btemp+1]
  7672                           
  7673                           
  7674                           ;LED.c: 39:     (PORTB ^= (1<<7));
  7675  15D0  3080               	movlw	128
  7676  15D1  00FF               	movwf	btemp+1
  7677  15D2  087F               	movf	btemp+1,w
  7678  15D3  1283               	bcf	3,5	;RP0=0, select bank0
  7679  15D4  1303               	bcf	3,6	;RP1=0, select bank0
  7680  15D5  0686               	xorwf	6,f	;volatile
  7681  15D6                     l94:
  7682  15D6  0008               	return
  7683  15D7                     __end_of_LED_tog:
  7684                           
  7685                           	psect	text36
  7686  15A9                     __ptext36:	
  7687 ;; *************** function _LED_on *****************
  7688 ;; Defined at:
  7689 ;;		line 24 in file "LED.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;		None
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;		None
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  1    wreg      void 
  7696 ;; Registers used:
  7697 ;;		None
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7703 ;;      Params:         0       0       0       0       0
  7704 ;;      Locals:         0       0       0       0       0
  7705 ;;      Temps:          0       0       0       0       0
  7706 ;;      Totals:         0       0       0       0       0
  7707 ;;Total ram usage:        0 bytes
  7708 ;; Hardware stack levels used:    1
  7709 ;; Hardware stack levels required when called:    3
  7710 ;; This function calls:
  7711 ;;		Nothing
  7712 ;; This function is called by:
  7713 ;;		_Temp_Sens_Task
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           
  7718                           ;psect for function _LED_on
  7719  15A9                     _LED_on:
  7720  15A9                     l2934:	
  7721                           ;incstack = 0
  7722                           ; Regs used in _LED_on: []
  7723                           
  7724                           
  7725                           ;LED.c: 27:     (PORTB |= (1<<7));
  7726  15A9  1283               	bcf	3,5	;RP0=0, select bank0
  7727  15AA  1303               	bcf	3,6	;RP1=0, select bank0
  7728  15AB  1786               	bsf	6,7	;volatile
  7729  15AC                     l88:
  7730  15AC  0008               	return
  7731  15AD                     __end_of_LED_on:
  7732                           
  7733                           	psect	text37
  7734  15C9                     __ptext37:	
  7735 ;; *************** function _LED_off *****************
  7736 ;; Defined at:
  7737 ;;		line 30 in file "LED.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      void 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0, btemp+1
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7751 ;;      Params:         0       0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0
  7754 ;;      Totals:         0       0       0       0       0
  7755 ;;Total ram usage:        0 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    3
  7758 ;; This function calls:
  7759 ;;		Nothing
  7760 ;; This function is called by:
  7761 ;;		_LED_init
  7762 ;;		_Temp_Sens_Task
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           
  7767                           ;psect for function _LED_off
  7768  15C9                     _LED_off:
  7769  15C9                     l2368:	
  7770                           ;incstack = 0
  7771                           ; Regs used in _LED_off: [wreg+status,2+status,0+btemp+1]
  7772                           
  7773                           
  7774                           ;LED.c: 33:     (PORTB &= ~(1<<7));
  7775  15C9  307F               	movlw	127
  7776  15CA  00FF               	movwf	btemp+1
  7777  15CB  087F               	movf	btemp+1,w
  7778  15CC  1283               	bcf	3,5	;RP0=0, select bank0
  7779  15CD  1303               	bcf	3,6	;RP1=0, select bank0
  7780  15CE  0586               	andwf	6,f	;volatile
  7781  15CF                     l91:
  7782  15CF  0008               	return
  7783  15D0                     __end_of_LED_off:
  7784                           
  7785                           	psect	text38
  7786  0846                     __ptext38:	
  7787 ;; *************** function _Calc_avg_reading *****************
  7788 ;; Defined at:
  7789 ;;		line 91 in file "Temp_Sens_Task.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  avg_arr         1    wreg     PTR unsigned char 
  7792 ;;		 -> readings_arr(10), 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  avg_arr         1   12[BANK0 ] PTR unsigned char 
  7795 ;;		 -> readings_arr(10), 
  7796 ;;  sum_temp        2   10[BANK0 ] unsigned short 
  7797 ;;  count           1   13[BANK0 ] unsigned char 
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      void 
  7800 ;; Registers used:
  7801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7807 ;;      Params:         0       0       0       0       0
  7808 ;;      Locals:         0       4       0       0       0
  7809 ;;      Temps:          0       3       0       0       0
  7810 ;;      Totals:         0       7       0       0       0
  7811 ;;Total ram usage:        7 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; Hardware stack levels required when called:    4
  7814 ;; This function calls:
  7815 ;;		___lwdiv
  7816 ;; This function is called by:
  7817 ;;		_Temp_Sens_Task
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           
  7822                           ;psect for function _Calc_avg_reading
  7823  0846                     _Calc_avg_reading:
  7824                           
  7825                           ;incstack = 0
  7826                           ; Regs used in _Calc_avg_reading: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7827                           ;Calc_avg_reading@avg_arr stored from wreg
  7828  0846  1283               	bcf	3,5	;RP0=0, select bank0
  7829  0847  1303               	bcf	3,6	;RP1=0, select bank0
  7830  0848  00AC               	movwf	Calc_avg_reading@avg_arr
  7831  0849                     l3028:
  7832                           
  7833                           ;Temp_Sens_Task.c: 91: void Calc_avg_reading(uint8 *avg_arr);Temp_Sens_Task.c: 92: {;Tem
      +                          p_Sens_Task.c: 93:     uint8 count;;Temp_Sens_Task.c: 94:     uint16 sum_temp = 0;
  7834  0849  01AA               	clrf	Calc_avg_reading@sum_temp
  7835  084A  01AB               	clrf	Calc_avg_reading@sum_temp+1
  7836                           
  7837                           ;Temp_Sens_Task.c: 95:     for (count = 0; count < 10; count++)
  7838  084B  01AD               	clrf	Calc_avg_reading@count
  7839  084C                     l3034:
  7840                           
  7841                           ;Temp_Sens_Task.c: 96:     {;Temp_Sens_Task.c: 97:         sum_temp += avg_arr[count];
  7842  084C  082D               	movf	Calc_avg_reading@count,w
  7843  084D  072C               	addwf	Calc_avg_reading@avg_arr,w
  7844  084E  00A7               	movwf	??_Calc_avg_reading
  7845  084F  0827               	movf	??_Calc_avg_reading,w
  7846  0850  0084               	movwf	4
  7847  0851  1383               	bcf	3,7	;select IRP bank0
  7848  0852  0800               	movf	0,w
  7849  0853  00A8               	movwf	??_Calc_avg_reading+1
  7850  0854  01A9               	clrf	??_Calc_avg_reading+2
  7851  0855  0828               	movf	??_Calc_avg_reading+1,w
  7852  0856  07AA               	addwf	Calc_avg_reading@sum_temp,f
  7853  0857  1803               	skipnc
  7854  0858  0AAB               	incf	Calc_avg_reading@sum_temp+1,f
  7855  0859  0829               	movf	??_Calc_avg_reading+2,w
  7856  085A  07AB               	addwf	Calc_avg_reading@sum_temp+1,f
  7857  085B                     l3036:
  7858                           
  7859                           ;Temp_Sens_Task.c: 98:     }
  7860  085B  3001               	movlw	1
  7861  085C  00FF               	movwf	btemp+1
  7862  085D  087F               	movf	btemp+1,w
  7863  085E  07AD               	addwf	Calc_avg_reading@count,f
  7864  085F                     l3038:
  7865  085F  300A               	movlw	10
  7866  0860  022D               	subwf	Calc_avg_reading@count,w
  7867  0861  1C03               	skipc
  7868  0862  2864               	goto	u3371
  7869  0863  2865               	goto	u3370
  7870  0864                     u3371:
  7871  0864  284C               	goto	l3034
  7872  0865                     u3370:
  7873  0865                     l3040:
  7874                           
  7875                           ;Temp_Sens_Task.c: 99:     avg_temp_in_C = sum_temp / 10;
  7876  0865  300A               	movlw	10
  7877  0866  00A0               	movwf	___lwdiv@divisor
  7878  0867  3000               	movlw	0
  7879  0868  00A1               	movwf	___lwdiv@divisor+1
  7880  0869  082B               	movf	Calc_avg_reading@sum_temp+1,w
  7881  086A  00A3               	movwf	___lwdiv@dividend+1
  7882  086B  082A               	movf	Calc_avg_reading@sum_temp,w
  7883  086C  00A2               	movwf	___lwdiv@dividend
  7884  086D  120A  158A  20B1  120A  158A  	fcall	___lwdiv
  7885  0872  1283               	bcf	3,5	;RP0=0, select bank0
  7886  0873  1303               	bcf	3,6	;RP1=0, select bank0
  7887  0874  0820               	movf	?___lwdiv,w
  7888  0875  00FF               	movwf	btemp+1
  7889  0876  087F               	movf	btemp+1,w
  7890  0877  1683               	bsf	3,5	;RP0=1, select bank1
  7891  0878  1303               	bcf	3,6	;RP1=0, select bank1
  7892  0879  00BB               	movwf	_avg_temp_in_C^(0+128)
  7893  087A                     l416:
  7894  087A  0008               	return
  7895  087B                     __end_of_Calc_avg_reading:
  7896                           
  7897                           	psect	text39
  7898  08B1                     __ptext39:	
  7899 ;; *************** function ___lwdiv *****************
  7900 ;; Defined at:
  7901 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  divisor         2    0[BANK0 ] unsigned int 
  7904 ;;  dividend        2    2[BANK0 ] unsigned int 
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;  quotient        2    4[BANK0 ] unsigned int 
  7907 ;;  counter         1    6[BANK0 ] unsigned char 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  2    0[BANK0 ] unsigned int 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0, btemp+1
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7917 ;;      Params:         0       4       0       0       0
  7918 ;;      Locals:         0       3       0       0       0
  7919 ;;      Temps:          0       0       0       0       0
  7920 ;;      Totals:         0       7       0       0       0
  7921 ;;Total ram usage:        7 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; Hardware stack levels required when called:    3
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_Calc_avg_reading
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           
  7932                           ;psect for function ___lwdiv
  7933  08B1                     ___lwdiv:
  7934  08B1                     l2564:	
  7935                           ;incstack = 0
  7936                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  7937                           
  7938  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  7939  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  7940  08B3  01A4               	clrf	___lwdiv@quotient
  7941  08B4  01A5               	clrf	___lwdiv@quotient+1
  7942  08B5                     l2566:
  7943  08B5  0820               	movf	___lwdiv@divisor,w
  7944  08B6  0421               	iorwf	___lwdiv@divisor+1,w
  7945  08B7  1903               	btfsc	3,2
  7946  08B8  28BA               	goto	u2401
  7947  08B9  28BB               	goto	u2400
  7948  08BA                     u2401:
  7949  08BA  28F2               	goto	l2586
  7950  08BB                     u2400:
  7951  08BB                     l2568:
  7952  08BB  01A6               	clrf	___lwdiv@counter
  7953  08BC  0AA6               	incf	___lwdiv@counter,f
  7954  08BD  28C9               	goto	l2574
  7955  08BE                     l2570:
  7956  08BE  3001               	movlw	1
  7957  08BF                     u2415:
  7958  08BF  1003               	clrc
  7959  08C0  0DA0               	rlf	___lwdiv@divisor,f
  7960  08C1  0DA1               	rlf	___lwdiv@divisor+1,f
  7961  08C2  3EFF               	addlw	-1
  7962  08C3  1D03               	skipz
  7963  08C4  28BF               	goto	u2415
  7964  08C5                     l2572:
  7965  08C5  3001               	movlw	1
  7966  08C6  00FF               	movwf	btemp+1
  7967  08C7  087F               	movf	btemp+1,w
  7968  08C8  07A6               	addwf	___lwdiv@counter,f
  7969  08C9                     l2574:
  7970  08C9  1FA1               	btfss	___lwdiv@divisor+1,7
  7971  08CA  28CC               	goto	u2421
  7972  08CB  28CD               	goto	u2420
  7973  08CC                     u2421:
  7974  08CC  28BE               	goto	l2570
  7975  08CD                     u2420:
  7976  08CD                     l2576:
  7977  08CD  3001               	movlw	1
  7978  08CE                     u2435:
  7979  08CE  1003               	clrc
  7980  08CF  0DA4               	rlf	___lwdiv@quotient,f
  7981  08D0  0DA5               	rlf	___lwdiv@quotient+1,f
  7982  08D1  3EFF               	addlw	-1
  7983  08D2  1D03               	skipz
  7984  08D3  28CE               	goto	u2435
  7985  08D4  0821               	movf	___lwdiv@divisor+1,w
  7986  08D5  0223               	subwf	___lwdiv@dividend+1,w
  7987  08D6  1D03               	skipz
  7988  08D7  28DA               	goto	u2445
  7989  08D8  0820               	movf	___lwdiv@divisor,w
  7990  08D9  0222               	subwf	___lwdiv@dividend,w
  7991  08DA                     u2445:
  7992  08DA  1C03               	skipc
  7993  08DB  28DD               	goto	u2441
  7994  08DC  28DE               	goto	u2440
  7995  08DD                     u2441:
  7996  08DD  28E5               	goto	l2582
  7997  08DE                     u2440:
  7998  08DE                     l2578:
  7999  08DE  0820               	movf	___lwdiv@divisor,w
  8000  08DF  02A2               	subwf	___lwdiv@dividend,f
  8001  08E0  0821               	movf	___lwdiv@divisor+1,w
  8002  08E1  1C03               	skipc
  8003  08E2  03A3               	decf	___lwdiv@dividend+1,f
  8004  08E3  02A3               	subwf	___lwdiv@dividend+1,f
  8005  08E4                     l2580:
  8006  08E4  1424               	bsf	___lwdiv@quotient,0
  8007  08E5                     l2582:
  8008  08E5  3001               	movlw	1
  8009  08E6                     u2455:
  8010  08E6  1003               	clrc
  8011  08E7  0CA1               	rrf	___lwdiv@divisor+1,f
  8012  08E8  0CA0               	rrf	___lwdiv@divisor,f
  8013  08E9  3EFF               	addlw	-1
  8014  08EA  1D03               	skipz
  8015  08EB  28E6               	goto	u2455
  8016  08EC                     l2584:
  8017  08EC  3001               	movlw	1
  8018  08ED  02A6               	subwf	___lwdiv@counter,f
  8019  08EE  1D03               	btfss	3,2
  8020  08EF  28F1               	goto	u2461
  8021  08F0  28F2               	goto	u2460
  8022  08F1                     u2461:
  8023  08F1  28CD               	goto	l2576
  8024  08F2                     u2460:
  8025  08F2                     l2586:
  8026  08F2  0825               	movf	___lwdiv@quotient+1,w
  8027  08F3  00A1               	movwf	?___lwdiv+1
  8028  08F4  0824               	movf	___lwdiv@quotient,w
  8029  08F5  00A0               	movwf	?___lwdiv
  8030  08F6                     l940:
  8031  08F6  0008               	return
  8032  08F7                     __end_of___lwdiv:
  8033                           
  8034                           	psect	text40
  8035  07BD                     __ptext40:	
  8036 ;; *************** function _UP_switch_update *****************
  8037 ;; Defined at:
  8038 ;;		line 46 in file "KEYBOARD.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;		None
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0, btemp+1
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8052 ;;      Params:         0       0       0       0       0
  8053 ;;      Locals:         0       0       0       0       0
  8054 ;;      Temps:          0       1       0       0       0
  8055 ;;      Totals:         0       1       0       0       0
  8056 ;;Total ram usage:        1 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    3
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_SYSTEM_STATE_UPDATE_TASK
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           
  8067                           ;psect for function _UP_switch_update
  8068  07BD                     _UP_switch_update:
  8069  07BD                     l2964:	
  8070                           ;incstack = 0
  8071                           ; Regs used in _UP_switch_update: [wreg+status,2+status,0+btemp+1]
  8072                           
  8073                           
  8074                           ;KEYBOARD.c: 53:     if (UP_Sw_blocked_G)
  8075  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  8076  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  8077  07BF  0842               	movf	_UP_Sw_blocked_G^(0+128),w
  8078  07C0  1903               	btfsc	3,2
  8079  07C1  2FC3               	goto	u3281
  8080  07C2  2FC4               	goto	u3280
  8081  07C3                     u3281:
  8082  07C3  2FC7               	goto	l2970
  8083  07C4                     u3280:
  8084  07C4                     l2966:
  8085                           
  8086                           ;KEYBOARD.c: 54:     {;KEYBOARD.c: 55:         UP_Sw_blocked_G--;
  8087  07C4  3001               	movlw	1
  8088  07C5  02C2               	subwf	_UP_Sw_blocked_G^(0+128),f
  8089  07C6  2FF2               	goto	l155
  8090  07C7                     l2970:
  8091                           
  8092                           ;KEYBOARD.c: 58:     if (((PORTB>>2)&1) == (0))
  8093  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  8094  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  8095  07C9  0806               	movf	6,w	;volatile
  8096  07CA  00A0               	movwf	??_UP_switch_update
  8097  07CB  3002               	movlw	2
  8098  07CC                     u3295:
  8099  07CC  1003               	clrc
  8100  07CD  0CA0               	rrf	??_UP_switch_update,f
  8101  07CE  3EFF               	addlw	-1
  8102  07CF  1D03               	skipz
  8103  07D0  2FCC               	goto	u3295
  8104  07D1  1820               	btfsc	??_UP_switch_update,0
  8105  07D2  2FD4               	goto	u3301
  8106  07D3  2FD5               	goto	u3300
  8107  07D4                     u3301:
  8108  07D4  2FEE               	goto	l2986
  8109  07D5                     u3300:
  8110  07D5                     l2972:
  8111                           
  8112                           ;KEYBOARD.c: 59:     {;KEYBOARD.c: 60:         UP_Sw_press_duration_G++;
  8113  07D5  3001               	movlw	1
  8114  07D6  00FF               	movwf	btemp+1
  8115  07D7  087F               	movf	btemp+1,w
  8116  07D8  1683               	bsf	3,5	;RP0=1, select bank1
  8117  07D9  1303               	bcf	3,6	;RP1=0, select bank1
  8118  07DA  07C4               	addwf	_UP_Sw_press_duration_G^(0+128),f
  8119  07DB                     l2974:
  8120                           
  8121                           ;KEYBOARD.c: 61:         if (UP_Sw_press_duration_G > (2))
  8122  07DB  3003               	movlw	3
  8123  07DC  0244               	subwf	_UP_Sw_press_duration_G^(0+128),w
  8124  07DD  1C03               	skipc
  8125  07DE  2FE0               	goto	u3311
  8126  07DF  2FE1               	goto	u3310
  8127  07E0                     u3311:
  8128  07E0  2FEC               	goto	l2982
  8129  07E1                     u3310:
  8130  07E1                     l2976:
  8131                           
  8132                           ;KEYBOARD.c: 62:         {;KEYBOARD.c: 63:             UP_Sw_press_duration_G = (2);
  8133  07E1  3002               	movlw	2
  8134  07E2  00FF               	movwf	btemp+1
  8135  07E3  087F               	movf	btemp+1,w
  8136  07E4  00C4               	movwf	_UP_Sw_press_duration_G^(0+128)
  8137  07E5                     l2978:
  8138                           
  8139                           ;KEYBOARD.c: 65:             UP_SW_pressed_st = (!0);
  8140  07E5  01FD               	clrf	_UP_SW_pressed_st
  8141  07E6  0AFD               	incf	_UP_SW_pressed_st,f
  8142                           
  8143                           ;KEYBOARD.c: 67:             UP_Sw_blocked_G = 20;
  8144  07E7  3014               	movlw	20
  8145  07E8  00FF               	movwf	btemp+1
  8146  07E9  087F               	movf	btemp+1,w
  8147  07EA  00C2               	movwf	_UP_Sw_blocked_G^(0+128)
  8148  07EB  2FF2               	goto	l155
  8149  07EC                     l2982:
  8150                           
  8151                           ;KEYBOARD.c: 71:         UP_SW_pressed_st = 0;
  8152  07EC  01FD               	clrf	_UP_SW_pressed_st
  8153  07ED  2FF2               	goto	l155
  8154  07EE                     l2986:
  8155                           
  8156                           ;KEYBOARD.c: 75:     UP_Sw_press_duration_G = 0;
  8157  07EE  1683               	bsf	3,5	;RP0=1, select bank1
  8158  07EF  1303               	bcf	3,6	;RP1=0, select bank1
  8159  07F0  01C4               	clrf	_UP_Sw_press_duration_G^(0+128)
  8160                           
  8161                           ;KEYBOARD.c: 76:     UP_SW_pressed_st = 0;
  8162  07F1  01FD               	clrf	_UP_SW_pressed_st
  8163  07F2                     l155:
  8164  07F2  0008               	return
  8165  07F3                     __end_of_UP_switch_update:
  8166                           
  8167                           	psect	text41
  8168  0812                     __ptext41:	
  8169 ;; *************** function _EEPROM_Write *****************
  8170 ;; Defined at:
  8171 ;;		line 10 in file "EEPROM_I2C.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;  add             2    2[BANK0 ] unsigned int 
  8174 ;;  data            1    4[BANK0 ] unsigned char 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;		None
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  1    wreg      void 
  8179 ;; Registers used:
  8180 ;;		wreg, status,2, status,0, pclath, cstack
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8186 ;;      Params:         0       3       0       0       0
  8187 ;;      Locals:         0       0       0       0       0
  8188 ;;      Temps:          0       0       0       0       0
  8189 ;;      Totals:         0       3       0       0       0
  8190 ;;Total ram usage:        3 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; Hardware stack levels required when called:    5
  8193 ;; This function calls:
  8194 ;;		_I2C_Master_RepeatedStart
  8195 ;;		_I2C_Master_Start
  8196 ;;		_I2C_Master_Stop
  8197 ;;		_I2C_Master_Write
  8198 ;; This function is called by:
  8199 ;;		_main
  8200 ;;		_SYSTEM_STATE_UPDATE_TASK
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           
  8205                           ;psect for function _EEPROM_Write
  8206  0812                     _EEPROM_Write:
  8207  0812                     l2924:	
  8208                           ;incstack = 0
  8209                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  8210                           
  8211                           
  8212                           ;EEPROM_I2C.c: 10: void EEPROM_Write(unsigned int add, unsigned char data);EEPROM_I2C.c:
      +                           11: {;EEPROM_I2C.c: 12:     I2C_Master_Start();
  8213  0812  160A  118A  2633  120A  158A  	fcall	_I2C_Master_Start
  8214                           
  8215                           ;EEPROM_I2C.c: 14:     while (I2C_Master_Write(0xA0))
  8216  0817  281D               	goto	l573
  8217  0818                     l2926:
  8218                           
  8219                           ;EEPROM_I2C.c: 15:         I2C_Master_RepeatedStart();
  8220  0818  160A  118A  2627  120A  158A  	fcall	_I2C_Master_RepeatedStart
  8221  081D                     l573:
  8222                           
  8223                           ;EEPROM_I2C.c: 14:     while (I2C_Master_Write(0xA0))
  8224  081D  30A0               	movlw	160
  8225  081E  160A  118A  2727  120A  158A  	fcall	_I2C_Master_Write
  8226  0823  3A00               	xorlw	0
  8227  0824  1D03               	skipz
  8228  0825  2827               	goto	u3271
  8229  0826  2828               	goto	u3270
  8230  0827                     u3271:
  8231  0827  2818               	goto	l2926
  8232  0828                     u3270:
  8233  0828                     l2928:
  8234                           
  8235                           ;EEPROM_I2C.c: 16:     I2C_Master_Write(add >> 8);
  8236  0828  1283               	bcf	3,5	;RP0=0, select bank0
  8237  0829  1303               	bcf	3,6	;RP1=0, select bank0
  8238  082A  0823               	movf	EEPROM_Write@add+1,w
  8239  082B  160A  118A  2727  120A  158A  	fcall	_I2C_Master_Write
  8240                           
  8241                           ;EEPROM_I2C.c: 17:     I2C_Master_Write((unsigned char) add);
  8242  0830  1283               	bcf	3,5	;RP0=0, select bank0
  8243  0831  1303               	bcf	3,6	;RP1=0, select bank0
  8244  0832  0822               	movf	EEPROM_Write@add,w
  8245  0833  160A  118A  2727  120A  158A  	fcall	_I2C_Master_Write
  8246                           
  8247                           ;EEPROM_I2C.c: 18:     I2C_Master_Write(data);
  8248  0838  1283               	bcf	3,5	;RP0=0, select bank0
  8249  0839  1303               	bcf	3,6	;RP1=0, select bank0
  8250  083A  0824               	movf	EEPROM_Write@data,w
  8251  083B  160A  118A  2727  120A  158A  	fcall	_I2C_Master_Write
  8252                           
  8253                           ;EEPROM_I2C.c: 19:     I2C_Master_Stop();
  8254  0840  160A  118A  263F  120A  158A  	fcall	_I2C_Master_Stop
  8255  0845                     l576:
  8256  0845  0008               	return
  8257  0846                     __end_of_EEPROM_Write:
  8258                           
  8259                           	psect	text42
  8260  087B                     __ptext42:	
  8261 ;; *************** function _DOWN_switch_update *****************
  8262 ;; Defined at:
  8263 ;;		line 79 in file "KEYBOARD.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;		None
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg, status,2, status,0, btemp+1
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8277 ;;      Params:         0       0       0       0       0
  8278 ;;      Locals:         0       0       0       0       0
  8279 ;;      Temps:          0       1       0       0       0
  8280 ;;      Totals:         0       1       0       0       0
  8281 ;;Total ram usage:        1 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    3
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_SYSTEM_STATE_UPDATE_TASK
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           
  8292                           ;psect for function _DOWN_switch_update
  8293  087B                     _DOWN_switch_update:
  8294  087B                     l2988:	
  8295                           ;incstack = 0
  8296                           ; Regs used in _DOWN_switch_update: [wreg+status,2+status,0+btemp+1]
  8297                           
  8298                           
  8299                           ;KEYBOARD.c: 86:     if (DOWN_Sw_blocked_G)
  8300  087B  1683               	bsf	3,5	;RP0=1, select bank1
  8301  087C  1303               	bcf	3,6	;RP1=0, select bank1
  8302  087D  0841               	movf	_DOWN_Sw_blocked_G^(0+128),w
  8303  087E  1903               	btfsc	3,2
  8304  087F  2881               	goto	u3321
  8305  0880  2882               	goto	u3320
  8306  0881                     u3321:
  8307  0881  2885               	goto	l2994
  8308  0882                     u3320:
  8309  0882                     l2990:
  8310                           
  8311                           ;KEYBOARD.c: 87:     {;KEYBOARD.c: 88:         DOWN_Sw_blocked_G--;
  8312  0882  3001               	movlw	1
  8313  0883  02C1               	subwf	_DOWN_Sw_blocked_G^(0+128),f
  8314  0884  28B0               	goto	l161
  8315  0885                     l2994:
  8316                           
  8317                           ;KEYBOARD.c: 91:     if (((PORTB>>1)&1) == (0))
  8318  0885  1283               	bcf	3,5	;RP0=0, select bank0
  8319  0886  1303               	bcf	3,6	;RP1=0, select bank0
  8320  0887  0806               	movf	6,w	;volatile
  8321  0888  00A0               	movwf	??_DOWN_switch_update
  8322  0889  3001               	movlw	1
  8323  088A                     u3335:
  8324  088A  1003               	clrc
  8325  088B  0CA0               	rrf	??_DOWN_switch_update,f
  8326  088C  3EFF               	addlw	-1
  8327  088D  1D03               	skipz
  8328  088E  288A               	goto	u3335
  8329  088F  1820               	btfsc	??_DOWN_switch_update,0
  8330  0890  2892               	goto	u3341
  8331  0891  2893               	goto	u3340
  8332  0892                     u3341:
  8333  0892  28AC               	goto	l3010
  8334  0893                     u3340:
  8335  0893                     l2996:
  8336                           
  8337                           ;KEYBOARD.c: 92:     {;KEYBOARD.c: 93:         DOWN_Sw_press_duration_G++;
  8338  0893  3001               	movlw	1
  8339  0894  00FF               	movwf	btemp+1
  8340  0895  087F               	movf	btemp+1,w
  8341  0896  1683               	bsf	3,5	;RP0=1, select bank1
  8342  0897  1303               	bcf	3,6	;RP1=0, select bank1
  8343  0898  07C3               	addwf	_DOWN_Sw_press_duration_G^(0+128),f
  8344  0899                     l2998:
  8345                           
  8346                           ;KEYBOARD.c: 94:         if (DOWN_Sw_press_duration_G > (2))
  8347  0899  3003               	movlw	3
  8348  089A  0243               	subwf	_DOWN_Sw_press_duration_G^(0+128),w
  8349  089B  1C03               	skipc
  8350  089C  289E               	goto	u3351
  8351  089D  289F               	goto	u3350
  8352  089E                     u3351:
  8353  089E  28AA               	goto	l3006
  8354  089F                     u3350:
  8355  089F                     l3000:
  8356                           
  8357                           ;KEYBOARD.c: 95:         {;KEYBOARD.c: 96:             DOWN_Sw_press_duration_G = (2);
  8358  089F  3002               	movlw	2
  8359  08A0  00FF               	movwf	btemp+1
  8360  08A1  087F               	movf	btemp+1,w
  8361  08A2  00C3               	movwf	_DOWN_Sw_press_duration_G^(0+128)
  8362  08A3                     l3002:
  8363                           
  8364                           ;KEYBOARD.c: 98:             DOWN_SW_pressed_st = (!0);
  8365  08A3  01FC               	clrf	_DOWN_SW_pressed_st
  8366  08A4  0AFC               	incf	_DOWN_SW_pressed_st,f
  8367                           
  8368                           ;KEYBOARD.c: 100:             DOWN_Sw_blocked_G = 20;
  8369  08A5  3014               	movlw	20
  8370  08A6  00FF               	movwf	btemp+1
  8371  08A7  087F               	movf	btemp+1,w
  8372  08A8  00C1               	movwf	_DOWN_Sw_blocked_G^(0+128)
  8373  08A9  28B0               	goto	l161
  8374  08AA                     l3006:
  8375                           
  8376                           ;KEYBOARD.c: 104:         DOWN_SW_pressed_st = 0;
  8377  08AA  01FC               	clrf	_DOWN_SW_pressed_st
  8378  08AB  28B0               	goto	l161
  8379  08AC                     l3010:
  8380                           
  8381                           ;KEYBOARD.c: 108:     DOWN_Sw_press_duration_G = 0;
  8382  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  8383  08AD  1303               	bcf	3,6	;RP1=0, select bank1
  8384  08AE  01C3               	clrf	_DOWN_Sw_press_duration_G^(0+128)
  8385                           
  8386                           ;KEYBOARD.c: 109:     DOWN_SW_pressed_st = 0;
  8387  08AF  01FC               	clrf	_DOWN_SW_pressed_st
  8388  08B0                     l161:
  8389  08B0  0008               	return
  8390  08B1                     __end_of_DOWN_switch_update:
  8391                           
  8392                           	psect	text43
  8393  0A37                     __ptext43:	
  8394 ;; *************** function _SCH_Delete_Task *****************
  8395 ;; Defined at:
  8396 ;;		line 152 in file "SCH_PIC16F877A.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  Task_Index      1    wreg     const unsigned char 
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;  Task_Index      1    3[BANK0 ] const unsigned char 
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      void 
  8403 ;; Registers used:
  8404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8410 ;;      Params:         0       0       0       0       0
  8411 ;;      Locals:         0       1       0       0       0
  8412 ;;      Temps:          0       0       0       0       0
  8413 ;;      Totals:         0       1       0       0       0
  8414 ;;Total ram usage:        1 bytes
  8415 ;; Hardware stack levels used:    1
  8416 ;; Hardware stack levels required when called:    4
  8417 ;; This function calls:
  8418 ;;		___bmul
  8419 ;; This function is called by:
  8420 ;;		_SCH_init_TMR1
  8421 ;;		_SCH_Dispatch_Tasks
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           
  8426                           ;psect for function _SCH_Delete_Task
  8427  0A37                     _SCH_Delete_Task:
  8428                           
  8429                           ;incstack = 0
  8430                           ; Regs used in _SCH_Delete_Task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8431                           ;SCH_Delete_Task@Task_Index stored from wreg
  8432  0A37  1283               	bcf	3,5	;RP0=0, select bank0
  8433  0A38  1303               	bcf	3,6	;RP1=0, select bank0
  8434  0A39  00A3               	movwf	SCH_Delete_Task@Task_Index
  8435  0A3A                     l3108:
  8436                           
  8437                           ;SCH_PIC16F877A.c: 152: void SCH_Delete_Task(const uint8 Task_Index);SCH_PIC16F877A.c: 1
      +                          53: {;SCH_PIC16F877A.c: 154:     if (SCH_tasks[Task_Index].ptr_Task == 0)
  8438  0A3A  3006               	movlw	6
  8439  0A3B  00FF               	movwf	btemp+1
  8440  0A3C  087F               	movf	btemp+1,w
  8441  0A3D  00A0               	movwf	___bmul@multiplicand
  8442  0A3E  0823               	movf	SCH_Delete_Task@Task_Index,w
  8443  0A3F  160A  118A  26F6  120A  158A  	fcall	___bmul
  8444  0A44  3EA0               	addlw	(low (_SCH_tasks| 0))& (0+255)
  8445  0A45  0084               	movwf	4
  8446  0A46  1383               	bcf	3,7	;select IRP bank1
  8447  0A47  0800               	movf	0,w
  8448  0A48  1D03               	btfss	3,2
  8449  0A49  2A4B               	goto	u3401
  8450  0A4A  2A4C               	goto	u3400
  8451  0A4B                     u3401:
  8452  0A4B  2A52               	goto	l3112
  8453  0A4C                     u3400:
  8454  0A4C                     l3110:
  8455                           
  8456                           ;SCH_PIC16F877A.c: 156:         ERROR_Code = (2);
  8457  0A4C  3002               	movlw	2
  8458  0A4D  00FF               	movwf	btemp+1
  8459  0A4E  087F               	movf	btemp+1,w
  8460  0A4F  1683               	bsf	3,5	;RP0=1, select bank1
  8461  0A50  1303               	bcf	3,6	;RP1=0, select bank1
  8462  0A51  00BF               	movwf	_ERROR_Code^(0+128)
  8463  0A52                     l3112:
  8464                           
  8465                           ;SCH_PIC16F877A.c: 158:     SCH_tasks[Task_Index].ptr_Task = 0;
  8466  0A52  3006               	movlw	6
  8467  0A53  00FF               	movwf	btemp+1
  8468  0A54  087F               	movf	btemp+1,w
  8469  0A55  1283               	bcf	3,5	;RP0=0, select bank0
  8470  0A56  1303               	bcf	3,6	;RP1=0, select bank0
  8471  0A57  00A0               	movwf	___bmul@multiplicand
  8472  0A58  0823               	movf	SCH_Delete_Task@Task_Index,w
  8473  0A59  160A  118A  26F6  120A  158A  	fcall	___bmul
  8474  0A5E  3EA0               	addlw	(low (_SCH_tasks| 0))& (0+255)
  8475  0A5F  0084               	movwf	4
  8476  0A60  1383               	bcf	3,7	;select IRP bank1
  8477  0A61  0180               	clrf	0
  8478  0A62                     l3114:
  8479                           
  8480                           ;SCH_PIC16F877A.c: 159:     SCH_tasks[Task_Index].Delay = 0;
  8481  0A62  3006               	movlw	6
  8482  0A63  00FF               	movwf	btemp+1
  8483  0A64  087F               	movf	btemp+1,w
  8484  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  8485  0A66  1303               	bcf	3,6	;RP1=0, select bank0
  8486  0A67  00A0               	movwf	___bmul@multiplicand
  8487  0A68  0823               	movf	SCH_Delete_Task@Task_Index,w
  8488  0A69  160A  118A  26F6  120A  158A  	fcall	___bmul
  8489  0A6E  3EA1               	addlw	(low ((_SCH_tasks| 0+1)))& (0+255)
  8490  0A6F  0084               	movwf	4
  8491  0A70  1383               	bcf	3,7	;select IRP bank1
  8492  0A71  0180               	clrf	0
  8493  0A72  0A84               	incf	4,f
  8494  0A73  0180               	clrf	0
  8495  0A74                     l3116:
  8496                           
  8497                           ;SCH_PIC16F877A.c: 160:     SCH_tasks[Task_Index].Period = 0;
  8498  0A74  3006               	movlw	6
  8499  0A75  00FF               	movwf	btemp+1
  8500  0A76  087F               	movf	btemp+1,w
  8501  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8502  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8503  0A79  00A0               	movwf	___bmul@multiplicand
  8504  0A7A  0823               	movf	SCH_Delete_Task@Task_Index,w
  8505  0A7B  160A  118A  26F6  120A  158A  	fcall	___bmul
  8506  0A80  3EA3               	addlw	(low ((_SCH_tasks| 0+3)))& (0+255)
  8507  0A81  0084               	movwf	4
  8508  0A82  1383               	bcf	3,7	;select IRP bank1
  8509  0A83  0180               	clrf	0
  8510  0A84  0A84               	incf	4,f
  8511  0A85  0180               	clrf	0
  8512  0A86                     l3118:
  8513                           
  8514                           ;SCH_PIC16F877A.c: 161:     SCH_tasks[Task_Index].Run = 0;
  8515  0A86  3006               	movlw	6
  8516  0A87  00FF               	movwf	btemp+1
  8517  0A88  087F               	movf	btemp+1,w
  8518  0A89  1283               	bcf	3,5	;RP0=0, select bank0
  8519  0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  8520  0A8B  00A0               	movwf	___bmul@multiplicand
  8521  0A8C  0823               	movf	SCH_Delete_Task@Task_Index,w
  8522  0A8D  160A  118A  26F6  120A  158A  	fcall	___bmul
  8523  0A92  3EA5               	addlw	(low ((_SCH_tasks| 0+5)))& (0+255)
  8524  0A93  0084               	movwf	4
  8525  0A94  1383               	bcf	3,7	;select IRP bank1
  8526  0A95  0180               	clrf	0
  8527  0A96                     l346:
  8528  0A96  0008               	return
  8529  0A97                     __end_of_SCH_Delete_Task:
  8530                           
  8531                           	psect	text44
  8532  1611                     __ptext44:	
  8533 ;; *************** function _SSD_turn_off *****************
  8534 ;; Defined at:
  8535 ;;		line 76 in file "SSD.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      void 
  8542 ;; Registers used:
  8543 ;;		wreg, status,2, status,0, btemp+1
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8549 ;;      Params:         0       0       0       0       0
  8550 ;;      Locals:         0       0       0       0       0
  8551 ;;      Temps:          0       0       0       0       0
  8552 ;;      Totals:         0       0       0       0       0
  8553 ;;Total ram usage:        0 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; Hardware stack levels required when called:    3
  8556 ;; This function calls:
  8557 ;;		Nothing
  8558 ;; This function is called by:
  8559 ;;		_DISPLAY_TASK
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           
  8564                           ;psect for function _SSD_turn_off
  8565  1611                     _SSD_turn_off:
  8566  1611                     l3020:	
  8567                           ;incstack = 0
  8568                           ; Regs used in _SSD_turn_off: [wreg+status,2+status,0+btemp+1]
  8569                           
  8570                           
  8571                           ;SSD.c: 78:     (PORTA &= ~(1<<5));
  8572  1611  30DF               	movlw	223
  8573  1612  00FF               	movwf	btemp+1
  8574  1613  087F               	movf	btemp+1,w
  8575  1614  1283               	bcf	3,5	;RP0=0, select bank0
  8576  1615  1303               	bcf	3,6	;RP1=0, select bank0
  8577  1616  0585               	andwf	5,f	;volatile
  8578                           
  8579                           ;SSD.c: 79:     (PORTA &= ~(1<<4));
  8580  1617  30EF               	movlw	239
  8581  1618  00FF               	movwf	btemp+1
  8582  1619  087F               	movf	btemp+1,w
  8583  161A  0585               	andwf	5,f	;volatile
  8584  161B                     l198:
  8585  161B  0008               	return
  8586  161C                     __end_of_SSD_turn_off:
  8587                           
  8588                           	psect	text45
  8589  098D                     __ptext45:	
  8590 ;; *************** function _SSD_print_2dig *****************
  8591 ;; Defined at:
  8592 ;;		line 64 in file "SSD.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  val             1    wreg     unsigned char 
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;  val             1   10[BANK0 ] unsigned char 
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1    wreg      void 
  8599 ;; Registers used:
  8600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8606 ;;      Params:         0       0       0       0       0
  8607 ;;      Locals:         0       1       0       0       0
  8608 ;;      Temps:          0       2       0       0       0
  8609 ;;      Totals:         0       3       0       0       0
  8610 ;;Total ram usage:        3 bytes
  8611 ;; Hardware stack levels used:    1
  8612 ;; Hardware stack levels required when called:    4
  8613 ;; This function calls:
  8614 ;;		_SSD_update
  8615 ;;		___awdiv
  8616 ;;		___awmod
  8617 ;; This function is called by:
  8618 ;;		_DISPLAY_TASK
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           
  8622                           
  8623                           ;psect for function _SSD_print_2dig
  8624  098D                     _SSD_print_2dig:
  8625                           
  8626                           ;incstack = 0
  8627                           ; Regs used in _SSD_print_2dig: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8628                           ;SSD_print_2dig@val stored from wreg
  8629  098D  1283               	bcf	3,5	;RP0=0, select bank0
  8630  098E  1303               	bcf	3,6	;RP1=0, select bank0
  8631  098F  00AA               	movwf	SSD_print_2dig@val
  8632  0990                     l3016:
  8633                           
  8634                           ;SSD.c: 64: void SSD_print_2dig(uint8 val);SSD.c: 65: {;SSD.c: 66:     if(val <= 99)
  8635  0990  3064               	movlw	100
  8636  0991  022A               	subwf	SSD_print_2dig@val,w
  8637  0992  1803               	skipnc
  8638  0993  2995               	goto	u3361
  8639  0994  2996               	goto	u3360
  8640  0995                     u3361:
  8641  0995  29DB               	goto	l195
  8642  0996                     u3360:
  8643  0996                     l3018:
  8644                           
  8645                           ;SSD.c: 67:     {;SSD.c: 68:         SSD_Data[1] = SSD_codes[val / 10];
  8646  0996  300A               	movlw	10
  8647  0997  00A0               	movwf	___awdiv@divisor
  8648  0998  3000               	movlw	0
  8649  0999  00A1               	movwf	___awdiv@divisor+1
  8650  099A  082A               	movf	SSD_print_2dig@val,w
  8651  099B  00A8               	movwf	??_SSD_print_2dig
  8652  099C  01A9               	clrf	??_SSD_print_2dig+1
  8653  099D  0828               	movf	??_SSD_print_2dig,w
  8654  099E  00A2               	movwf	___awdiv@dividend
  8655  099F  0829               	movf	??_SSD_print_2dig+1,w
  8656  09A0  00A3               	movwf	___awdiv@dividend+1
  8657  09A1  120A  158A  2297  120A  158A  	fcall	___awdiv
  8658  09A6  1283               	bcf	3,5	;RP0=0, select bank0
  8659  09A7  1303               	bcf	3,6	;RP1=0, select bank0
  8660  09A8  0820               	movf	?___awdiv,w
  8661  09A9  3E01               	addlw	low ((_SSD_codes-__stringbase)| (0+32768))
  8662  09AA  0084               	movwf	4
  8663  09AB  160A  118A  2000  120A  158A  	fcall	stringdir
  8664  09B0  00FF               	movwf	btemp+1
  8665  09B1  087F               	movf	btemp+1,w
  8666  09B2  1683               	bsf	3,5	;RP0=1, select bank1
  8667  09B3  1303               	bcf	3,6	;RP1=0, select bank1
  8668  09B4  00E7               	movwf	(_SSD_Data^(0+128)+1)
  8669                           
  8670                           ;SSD.c: 69:         SSD_Data[0] = SSD_codes[val % 10];
  8671  09B5  300A               	movlw	10
  8672  09B6  1283               	bcf	3,5	;RP0=0, select bank0
  8673  09B7  1303               	bcf	3,6	;RP1=0, select bank0
  8674  09B8  00A0               	movwf	___awmod@divisor
  8675  09B9  3000               	movlw	0
  8676  09BA  00A1               	movwf	___awmod@divisor+1
  8677  09BB  082A               	movf	SSD_print_2dig@val,w
  8678  09BC  00A8               	movwf	??_SSD_print_2dig
  8679  09BD  01A9               	clrf	??_SSD_print_2dig+1
  8680  09BE  0828               	movf	??_SSD_print_2dig,w
  8681  09BF  00A2               	movwf	___awmod@dividend
  8682  09C0  0829               	movf	??_SSD_print_2dig+1,w
  8683  09C1  00A3               	movwf	___awmod@dividend+1
  8684  09C2  120A  158A  21DC  120A  158A  	fcall	___awmod
  8685  09C7  1283               	bcf	3,5	;RP0=0, select bank0
  8686  09C8  1303               	bcf	3,6	;RP1=0, select bank0
  8687  09C9  0820               	movf	?___awmod,w
  8688  09CA  3E01               	addlw	low ((_SSD_codes-__stringbase)| (0+32768))
  8689  09CB  0084               	movwf	4
  8690  09CC  160A  118A  2000  120A  158A  	fcall	stringdir
  8691  09D1  00FF               	movwf	btemp+1
  8692  09D2  087F               	movf	btemp+1,w
  8693  09D3  1683               	bsf	3,5	;RP0=1, select bank1
  8694  09D4  1303               	bcf	3,6	;RP1=0, select bank1
  8695  09D5  00E6               	movwf	_SSD_Data^(0+128)
  8696                           
  8697                           ;SSD.c: 70:         SSD_update();
  8698  09D6  160A  118A  276B  120A  158A  	fcall	_SSD_update
  8699  09DB                     l195:	
  8700                           ;SSD.c: 71:     }
  8701                           
  8702  09DB  0008               	return
  8703  09DC                     __end_of_SSD_print_2dig:
  8704                           
  8705                           	psect	text46
  8706  09DC                     __ptext46:	
  8707 ;; *************** function ___awmod *****************
  8708 ;; Defined at:
  8709 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;  divisor         2    0[BANK0 ] int 
  8712 ;;  dividend        2    2[BANK0 ] int 
  8713 ;; Auto vars:     Size  Location     Type
  8714 ;;  sign            1    5[BANK0 ] unsigned char 
  8715 ;;  counter         1    4[BANK0 ] unsigned char 
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  2    0[BANK0 ] int 
  8718 ;; Registers used:
  8719 ;;		wreg, status,2, status,0, btemp+1
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8725 ;;      Params:         0       4       0       0       0
  8726 ;;      Locals:         0       2       0       0       0
  8727 ;;      Temps:          0       0       0       0       0
  8728 ;;      Totals:         0       6       0       0       0
  8729 ;;Total ram usage:        6 bytes
  8730 ;; Hardware stack levels used:    1
  8731 ;; Hardware stack levels required when called:    3
  8732 ;; This function calls:
  8733 ;;		Nothing
  8734 ;; This function is called by:
  8735 ;;		_SSD_print_2dig
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           
  8740                           ;psect for function ___awmod
  8741  09DC                     ___awmod:
  8742  09DC                     l2488:	
  8743                           ;incstack = 0
  8744                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  8745                           
  8746  09DC  1283               	bcf	3,5	;RP0=0, select bank0
  8747  09DD  1303               	bcf	3,6	;RP1=0, select bank0
  8748  09DE  01A5               	clrf	___awmod@sign
  8749  09DF                     l2490:
  8750  09DF  1FA3               	btfss	___awmod@dividend+1,7
  8751  09E0  29E2               	goto	u2211
  8752  09E1  29E3               	goto	u2210
  8753  09E2                     u2211:
  8754  09E2  29EA               	goto	l2496
  8755  09E3                     u2210:
  8756  09E3                     l2492:
  8757  09E3  09A2               	comf	___awmod@dividend,f
  8758  09E4  09A3               	comf	___awmod@dividend+1,f
  8759  09E5  0AA2               	incf	___awmod@dividend,f
  8760  09E6  1903               	skipnz
  8761  09E7  0AA3               	incf	___awmod@dividend+1,f
  8762  09E8                     l2494:
  8763  09E8  01A5               	clrf	___awmod@sign
  8764  09E9  0AA5               	incf	___awmod@sign,f
  8765  09EA                     l2496:
  8766  09EA  1FA1               	btfss	___awmod@divisor+1,7
  8767  09EB  29ED               	goto	u2221
  8768  09EC  29EE               	goto	u2220
  8769  09ED                     u2221:
  8770  09ED  29F3               	goto	l2500
  8771  09EE                     u2220:
  8772  09EE                     l2498:
  8773  09EE  09A0               	comf	___awmod@divisor,f
  8774  09EF  09A1               	comf	___awmod@divisor+1,f
  8775  09F0  0AA0               	incf	___awmod@divisor,f
  8776  09F1  1903               	skipnz
  8777  09F2  0AA1               	incf	___awmod@divisor+1,f
  8778  09F3                     l2500:
  8779  09F3  0820               	movf	___awmod@divisor,w
  8780  09F4  0421               	iorwf	___awmod@divisor+1,w
  8781  09F5  1903               	btfsc	3,2
  8782  09F6  29F8               	goto	u2231
  8783  09F7  29F9               	goto	u2230
  8784  09F8                     u2231:
  8785  09F8  2A28               	goto	l2518
  8786  09F9                     u2230:
  8787  09F9                     l2502:
  8788  09F9  01A4               	clrf	___awmod@counter
  8789  09FA  0AA4               	incf	___awmod@counter,f
  8790  09FB  2A07               	goto	l2508
  8791  09FC                     l2504:
  8792  09FC  3001               	movlw	1
  8793  09FD                     u2245:
  8794  09FD  1003               	clrc
  8795  09FE  0DA0               	rlf	___awmod@divisor,f
  8796  09FF  0DA1               	rlf	___awmod@divisor+1,f
  8797  0A00  3EFF               	addlw	-1
  8798  0A01  1D03               	skipz
  8799  0A02  29FD               	goto	u2245
  8800  0A03                     l2506:
  8801  0A03  3001               	movlw	1
  8802  0A04  00FF               	movwf	btemp+1
  8803  0A05  087F               	movf	btemp+1,w
  8804  0A06  07A4               	addwf	___awmod@counter,f
  8805  0A07                     l2508:
  8806  0A07  1FA1               	btfss	___awmod@divisor+1,7
  8807  0A08  2A0A               	goto	u2251
  8808  0A09  2A0B               	goto	u2250
  8809  0A0A                     u2251:
  8810  0A0A  29FC               	goto	l2504
  8811  0A0B                     u2250:
  8812  0A0B                     l2510:
  8813  0A0B  0821               	movf	___awmod@divisor+1,w
  8814  0A0C  0223               	subwf	___awmod@dividend+1,w
  8815  0A0D  1D03               	skipz
  8816  0A0E  2A11               	goto	u2265
  8817  0A0F  0820               	movf	___awmod@divisor,w
  8818  0A10  0222               	subwf	___awmod@dividend,w
  8819  0A11                     u2265:
  8820  0A11  1C03               	skipc
  8821  0A12  2A14               	goto	u2261
  8822  0A13  2A15               	goto	u2260
  8823  0A14                     u2261:
  8824  0A14  2A1B               	goto	l2514
  8825  0A15                     u2260:
  8826  0A15                     l2512:
  8827  0A15  0820               	movf	___awmod@divisor,w
  8828  0A16  02A2               	subwf	___awmod@dividend,f
  8829  0A17  0821               	movf	___awmod@divisor+1,w
  8830  0A18  1C03               	skipc
  8831  0A19  03A3               	decf	___awmod@dividend+1,f
  8832  0A1A  02A3               	subwf	___awmod@dividend+1,f
  8833  0A1B                     l2514:
  8834  0A1B  3001               	movlw	1
  8835  0A1C                     u2275:
  8836  0A1C  1003               	clrc
  8837  0A1D  0CA1               	rrf	___awmod@divisor+1,f
  8838  0A1E  0CA0               	rrf	___awmod@divisor,f
  8839  0A1F  3EFF               	addlw	-1
  8840  0A20  1D03               	skipz
  8841  0A21  2A1C               	goto	u2275
  8842  0A22                     l2516:
  8843  0A22  3001               	movlw	1
  8844  0A23  02A4               	subwf	___awmod@counter,f
  8845  0A24  1D03               	btfss	3,2
  8846  0A25  2A27               	goto	u2281
  8847  0A26  2A28               	goto	u2280
  8848  0A27                     u2281:
  8849  0A27  2A0B               	goto	l2510
  8850  0A28                     u2280:
  8851  0A28                     l2518:
  8852  0A28  0825               	movf	___awmod@sign,w
  8853  0A29  1903               	btfsc	3,2
  8854  0A2A  2A2C               	goto	u2291
  8855  0A2B  2A2D               	goto	u2290
  8856  0A2C                     u2291:
  8857  0A2C  2A32               	goto	l2522
  8858  0A2D                     u2290:
  8859  0A2D                     l2520:
  8860  0A2D  09A2               	comf	___awmod@dividend,f
  8861  0A2E  09A3               	comf	___awmod@dividend+1,f
  8862  0A2F  0AA2               	incf	___awmod@dividend,f
  8863  0A30  1903               	skipnz
  8864  0A31  0AA3               	incf	___awmod@dividend+1,f
  8865  0A32                     l2522:
  8866  0A32  0823               	movf	___awmod@dividend+1,w
  8867  0A33  00A1               	movwf	?___awmod+1
  8868  0A34  0822               	movf	___awmod@dividend,w
  8869  0A35  00A0               	movwf	?___awmod
  8870  0A36                     l834:
  8871  0A36  0008               	return
  8872  0A37                     __end_of___awmod:
  8873                           
  8874                           	psect	text47
  8875  0A97                     __ptext47:	
  8876 ;; *************** function ___awdiv *****************
  8877 ;; Defined at:
  8878 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  divisor         2    0[BANK0 ] int 
  8881 ;;  dividend        2    2[BANK0 ] int 
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;  quotient        2    6[BANK0 ] int 
  8884 ;;  sign            1    5[BANK0 ] unsigned char 
  8885 ;;  counter         1    4[BANK0 ] unsigned char 
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  2    0[BANK0 ] int 
  8888 ;; Registers used:
  8889 ;;		wreg, status,2, status,0, btemp+1
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8895 ;;      Params:         0       4       0       0       0
  8896 ;;      Locals:         0       4       0       0       0
  8897 ;;      Temps:          0       0       0       0       0
  8898 ;;      Totals:         0       8       0       0       0
  8899 ;;Total ram usage:        8 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    3
  8902 ;; This function calls:
  8903 ;;		Nothing
  8904 ;; This function is called by:
  8905 ;;		_SSD_print_2dig
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           
  8910                           ;psect for function ___awdiv
  8911  0A97                     ___awdiv:
  8912  0A97                     l2444:	
  8913                           ;incstack = 0
  8914                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  8915                           
  8916  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  8917  0A98  1303               	bcf	3,6	;RP1=0, select bank0
  8918  0A99  01A5               	clrf	___awdiv@sign
  8919  0A9A                     l2446:
  8920  0A9A  1FA1               	btfss	___awdiv@divisor+1,7
  8921  0A9B  2A9D               	goto	u2111
  8922  0A9C  2A9E               	goto	u2110
  8923  0A9D                     u2111:
  8924  0A9D  2AA5               	goto	l2452
  8925  0A9E                     u2110:
  8926  0A9E                     l2448:
  8927  0A9E  09A0               	comf	___awdiv@divisor,f
  8928  0A9F  09A1               	comf	___awdiv@divisor+1,f
  8929  0AA0  0AA0               	incf	___awdiv@divisor,f
  8930  0AA1  1903               	skipnz
  8931  0AA2  0AA1               	incf	___awdiv@divisor+1,f
  8932  0AA3                     l2450:
  8933  0AA3  01A5               	clrf	___awdiv@sign
  8934  0AA4  0AA5               	incf	___awdiv@sign,f
  8935  0AA5                     l2452:
  8936  0AA5  1FA3               	btfss	___awdiv@dividend+1,7
  8937  0AA6  2AA8               	goto	u2121
  8938  0AA7  2AA9               	goto	u2120
  8939  0AA8                     u2121:
  8940  0AA8  2AB2               	goto	l2458
  8941  0AA9                     u2120:
  8942  0AA9                     l2454:
  8943  0AA9  09A2               	comf	___awdiv@dividend,f
  8944  0AAA  09A3               	comf	___awdiv@dividend+1,f
  8945  0AAB  0AA2               	incf	___awdiv@dividend,f
  8946  0AAC  1903               	skipnz
  8947  0AAD  0AA3               	incf	___awdiv@dividend+1,f
  8948  0AAE                     l2456:
  8949  0AAE  3001               	movlw	1
  8950  0AAF  00FF               	movwf	btemp+1
  8951  0AB0  087F               	movf	btemp+1,w
  8952  0AB1  06A5               	xorwf	___awdiv@sign,f
  8953  0AB2                     l2458:
  8954  0AB2  01A6               	clrf	___awdiv@quotient
  8955  0AB3  01A7               	clrf	___awdiv@quotient+1
  8956  0AB4                     l2460:
  8957  0AB4  0820               	movf	___awdiv@divisor,w
  8958  0AB5  0421               	iorwf	___awdiv@divisor+1,w
  8959  0AB6  1903               	btfsc	3,2
  8960  0AB7  2AB9               	goto	u2131
  8961  0AB8  2ABA               	goto	u2130
  8962  0AB9                     u2131:
  8963  0AB9  2AF1               	goto	l2480
  8964  0ABA                     u2130:
  8965  0ABA                     l2462:
  8966  0ABA  01A4               	clrf	___awdiv@counter
  8967  0ABB  0AA4               	incf	___awdiv@counter,f
  8968  0ABC  2AC8               	goto	l2468
  8969  0ABD                     l2464:
  8970  0ABD  3001               	movlw	1
  8971  0ABE                     u2145:
  8972  0ABE  1003               	clrc
  8973  0ABF  0DA0               	rlf	___awdiv@divisor,f
  8974  0AC0  0DA1               	rlf	___awdiv@divisor+1,f
  8975  0AC1  3EFF               	addlw	-1
  8976  0AC2  1D03               	skipz
  8977  0AC3  2ABE               	goto	u2145
  8978  0AC4                     l2466:
  8979  0AC4  3001               	movlw	1
  8980  0AC5  00FF               	movwf	btemp+1
  8981  0AC6  087F               	movf	btemp+1,w
  8982  0AC7  07A4               	addwf	___awdiv@counter,f
  8983  0AC8                     l2468:
  8984  0AC8  1FA1               	btfss	___awdiv@divisor+1,7
  8985  0AC9  2ACB               	goto	u2151
  8986  0ACA  2ACC               	goto	u2150
  8987  0ACB                     u2151:
  8988  0ACB  2ABD               	goto	l2464
  8989  0ACC                     u2150:
  8990  0ACC                     l2470:
  8991  0ACC  3001               	movlw	1
  8992  0ACD                     u2165:
  8993  0ACD  1003               	clrc
  8994  0ACE  0DA6               	rlf	___awdiv@quotient,f
  8995  0ACF  0DA7               	rlf	___awdiv@quotient+1,f
  8996  0AD0  3EFF               	addlw	-1
  8997  0AD1  1D03               	skipz
  8998  0AD2  2ACD               	goto	u2165
  8999  0AD3  0821               	movf	___awdiv@divisor+1,w
  9000  0AD4  0223               	subwf	___awdiv@dividend+1,w
  9001  0AD5  1D03               	skipz
  9002  0AD6  2AD9               	goto	u2175
  9003  0AD7  0820               	movf	___awdiv@divisor,w
  9004  0AD8  0222               	subwf	___awdiv@dividend,w
  9005  0AD9                     u2175:
  9006  0AD9  1C03               	skipc
  9007  0ADA  2ADC               	goto	u2171
  9008  0ADB  2ADD               	goto	u2170
  9009  0ADC                     u2171:
  9010  0ADC  2AE4               	goto	l2476
  9011  0ADD                     u2170:
  9012  0ADD                     l2472:
  9013  0ADD  0820               	movf	___awdiv@divisor,w
  9014  0ADE  02A2               	subwf	___awdiv@dividend,f
  9015  0ADF  0821               	movf	___awdiv@divisor+1,w
  9016  0AE0  1C03               	skipc
  9017  0AE1  03A3               	decf	___awdiv@dividend+1,f
  9018  0AE2  02A3               	subwf	___awdiv@dividend+1,f
  9019  0AE3                     l2474:
  9020  0AE3  1426               	bsf	___awdiv@quotient,0
  9021  0AE4                     l2476:
  9022  0AE4  3001               	movlw	1
  9023  0AE5                     u2185:
  9024  0AE5  1003               	clrc
  9025  0AE6  0CA1               	rrf	___awdiv@divisor+1,f
  9026  0AE7  0CA0               	rrf	___awdiv@divisor,f
  9027  0AE8  3EFF               	addlw	-1
  9028  0AE9  1D03               	skipz
  9029  0AEA  2AE5               	goto	u2185
  9030  0AEB                     l2478:
  9031  0AEB  3001               	movlw	1
  9032  0AEC  02A4               	subwf	___awdiv@counter,f
  9033  0AED  1D03               	btfss	3,2
  9034  0AEE  2AF0               	goto	u2191
  9035  0AEF  2AF1               	goto	u2190
  9036  0AF0                     u2191:
  9037  0AF0  2ACC               	goto	l2470
  9038  0AF1                     u2190:
  9039  0AF1                     l2480:
  9040  0AF1  0825               	movf	___awdiv@sign,w
  9041  0AF2  1903               	btfsc	3,2
  9042  0AF3  2AF5               	goto	u2201
  9043  0AF4  2AF6               	goto	u2200
  9044  0AF5                     u2201:
  9045  0AF5  2AFB               	goto	l2484
  9046  0AF6                     u2200:
  9047  0AF6                     l2482:
  9048  0AF6  09A6               	comf	___awdiv@quotient,f
  9049  0AF7  09A7               	comf	___awdiv@quotient+1,f
  9050  0AF8  0AA6               	incf	___awdiv@quotient,f
  9051  0AF9  1903               	skipnz
  9052  0AFA  0AA7               	incf	___awdiv@quotient+1,f
  9053  0AFB                     l2484:
  9054  0AFB  0827               	movf	___awdiv@quotient+1,w
  9055  0AFC  00A1               	movwf	?___awdiv+1
  9056  0AFD  0826               	movf	___awdiv@quotient,w
  9057  0AFE  00A0               	movwf	?___awdiv
  9058  0AFF                     l821:
  9059  0AFF  0008               	return
  9060  0B00                     __end_of___awdiv:
  9061                           
  9062                           	psect	text48
  9063  176B                     __ptext48:	
  9064 ;; *************** function _SSD_update *****************
  9065 ;; Defined at:
  9066 ;;		line 44 in file "SSD.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;		None
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9080 ;;      Params:         0       0       0       0       0
  9081 ;;      Locals:         0       0       0       0       0
  9082 ;;      Temps:          0       2       0       0       0
  9083 ;;      Totals:         0       2       0       0       0
  9084 ;;Total ram usage:        2 bytes
  9085 ;; Hardware stack levels used:    1
  9086 ;; Hardware stack levels required when called:    3
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_SSD_print_2dig
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           
  9095                           ;psect for function _SSD_update
  9096  176B                     _SSD_update:
  9097  176B                     l2374:	
  9098                           ;incstack = 0
  9099                           ; Regs used in _SSD_update: [wreg-fsr0h+status,2+status,0+btemp+1]
  9100                           
  9101                           
  9102                           ;SSD.c: 46:     static uint8 digit = 0;;SSD.c: 47:     if (++digit == (2))
  9103  176B  3001               	movlw	1
  9104  176C  00FF               	movwf	btemp+1
  9105  176D  087F               	movf	btemp+1,w
  9106  176E  07FB               	addwf	SSD_update@digit,f
  9107  176F  3002               	movlw	2
  9108  1770  067B               	xorwf	SSD_update@digit,w
  9109  1771  1D03               	btfss	3,2
  9110  1772  2F74               	goto	u2031
  9111  1773  2F75               	goto	u2030
  9112  1774                     u2031:
  9113  1774  2F83               	goto	l2384
  9114  1775                     u2030:
  9115  1775                     l2376:
  9116                           
  9117                           ;SSD.c: 48:         digit = 0;
  9118  1775  01FB               	clrf	SSD_update@digit
  9119  1776  2F83               	goto	l2384
  9120  1777                     l187:	
  9121                           ;SSD.c: 51:     {;SSD.c: 52:     case 0:
  9122                           
  9123                           
  9124                           ;SSD.c: 53:         (PORTA |= (1<<5));
  9125  1777  1685               	bsf	5,5	;volatile
  9126  1778                     l2378:
  9127                           
  9128                           ;SSD.c: 54:         (PORTA &= ~(1<<4));
  9129  1778  30EF               	movlw	239
  9130  1779  00FF               	movwf	btemp+1
  9131  177A  087F               	movf	btemp+1,w
  9132  177B  0585               	andwf	5,f	;volatile
  9133                           
  9134                           ;SSD.c: 55:         break;
  9135  177C  2F95               	goto	l2386
  9136  177D                     l189:	
  9137                           ;SSD.c: 56:     case 1:
  9138                           
  9139                           
  9140                           ;SSD.c: 57:         (PORTA |= (1<<4));
  9141  177D  1605               	bsf	5,4	;volatile
  9142  177E                     l2380:
  9143                           
  9144                           ;SSD.c: 58:         (PORTA &= ~(1<<5));
  9145  177E  30DF               	movlw	223
  9146  177F  00FF               	movwf	btemp+1
  9147  1780  087F               	movf	btemp+1,w
  9148  1781  0585               	andwf	5,f	;volatile
  9149                           
  9150                           ;SSD.c: 59:         break;
  9151  1782  2F95               	goto	l2386
  9152  1783                     l2384:
  9153  1783  087B               	movf	SSD_update@digit,w
  9154  1784  1283               	bcf	3,5	;RP0=0, select bank0
  9155  1785  1303               	bcf	3,6	;RP1=0, select bank0
  9156  1786  00A0               	movwf	??_SSD_update
  9157  1787  01A1               	clrf	??_SSD_update+1
  9158                           
  9159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9160                           ; Switch size 1, requested type "simple"
  9161                           ; Number of cases is 1, Range of values is 0 to 0
  9162                           ; switch strategies available:
  9163                           ; Name         Instructions Cycles
  9164                           ; simple_byte            4     3 (average)
  9165                           ; direct_byte           11     8 (fixed)
  9166                           ; jumptable            260     6 (fixed)
  9167                           ;	Chosen strategy is simple_byte
  9168  1788  0821               	movf	??_SSD_update+1,w
  9169  1789  3A00               	xorlw	0	; case 0
  9170  178A  1903               	skipnz
  9171  178B  2F8D               	goto	l3660
  9172  178C  2F95               	goto	l2386
  9173  178D                     l3660:
  9174                           
  9175                           ; Switch size 1, requested type "simple"
  9176                           ; Number of cases is 2, Range of values is 0 to 1
  9177                           ; switch strategies available:
  9178                           ; Name         Instructions Cycles
  9179                           ; simple_byte            7     4 (average)
  9180                           ; direct_byte           14     8 (fixed)
  9181                           ; jumptable            260     6 (fixed)
  9182                           ;	Chosen strategy is simple_byte
  9183  178D  0820               	movf	??_SSD_update,w
  9184  178E  3A00               	xorlw	0	; case 0
  9185  178F  1903               	skipnz
  9186  1790  2F77               	goto	l187
  9187  1791  3A01               	xorlw	1	; case 1
  9188  1792  1903               	skipnz
  9189  1793  2F7D               	goto	l189
  9190  1794  2F95               	goto	l2386
  9191  1795                     l2386:
  9192                           
  9193                           ;SSD.c: 61:     PORTD = SSD_Data[digit];
  9194  1795  087B               	movf	SSD_update@digit,w
  9195  1796  3EE6               	addlw	(low (_SSD_Data| 0))& (0+255)
  9196  1797  0084               	movwf	4
  9197  1798  1383               	bcf	3,7	;select IRP bank1
  9198  1799  0800               	movf	0,w
  9199  179A  0088               	movwf	8	;volatile
  9200  179B                     l190:
  9201  179B  0008               	return
  9202  179C                     __end_of_SSD_update:
  9203                           
  9204                           	psect	text49
  9205  0BE0                     __ptext49:	
  9206 ;; *************** function _SCH_Add_Task *****************
  9207 ;; Defined at:
  9208 ;;		line 94 in file "SCH_PIC16F877A.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  ptr_fun         1    wreg     PTR FTN()void 
  9211 ;;		 -> DISPLAY_TASK(1), Temp_Sens_Task(1), SYSTEM_STATE_UPDATE_TASK(1), 
  9212 ;;  Delay           2    3[BANK0 ] const unsigned short 
  9213 ;;  Period          2    5[BANK0 ] const unsigned short 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  ptr_fun         1    7[BANK0 ] PTR FTN()void 
  9216 ;;		 -> DISPLAY_TASK(1), Temp_Sens_Task(1), SYSTEM_STATE_UPDATE_TASK(1), 
  9217 ;;  Index           1    8[BANK0 ] unsigned char 
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  1    wreg      unsigned char 
  9220 ;; Registers used:
  9221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9227 ;;      Params:         0       4       0       0       0
  9228 ;;      Locals:         0       2       0       0       0
  9229 ;;      Temps:          0       0       0       0       0
  9230 ;;      Totals:         0       6       0       0       0
  9231 ;;Total ram usage:        6 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; Hardware stack levels required when called:    4
  9234 ;; This function calls:
  9235 ;;		___bmul
  9236 ;; This function is called by:
  9237 ;;		_main
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           
  9242                           ;psect for function _SCH_Add_Task
  9243  0BE0                     _SCH_Add_Task:
  9244                           
  9245                           ;incstack = 0
  9246                           ; Regs used in _SCH_Add_Task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9247                           ;SCH_Add_Task@ptr_fun stored from wreg
  9248  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  9249  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  9250  0BE2  00A7               	movwf	SCH_Add_Task@ptr_fun
  9251  0BE3                     l3364:
  9252                           
  9253                           ;SCH_PIC16F877A.c: 94: uint8 SCH_Add_Task(void (*ptr_fun)(), const uint16 Delay, const u
      +                          int16 Period);SCH_PIC16F877A.c: 95: {;SCH_PIC16F877A.c: 96:     uint8 Index = 0;
  9254  0BE3  01A8               	clrf	SCH_Add_Task@Index
  9255                           
  9256                           ;SCH_PIC16F877A.c: 98:     while ((SCH_tasks[Index].ptr_Task != 0) && (Index < (3)))
  9257  0BE4  2BE9               	goto	l3368
  9258  0BE5                     l3366:
  9259                           
  9260                           ;SCH_PIC16F877A.c: 99:         Index++;
  9261  0BE5  3001               	movlw	1
  9262  0BE6  00FF               	movwf	btemp+1
  9263  0BE7  087F               	movf	btemp+1,w
  9264  0BE8  07A8               	addwf	SCH_Add_Task@Index,f
  9265  0BE9                     l3368:
  9266                           
  9267                           ;SCH_PIC16F877A.c: 98:     while ((SCH_tasks[Index].ptr_Task != 0) && (Index < (3)))
  9268  0BE9  3006               	movlw	6
  9269  0BEA  00FF               	movwf	btemp+1
  9270  0BEB  087F               	movf	btemp+1,w
  9271  0BEC  00A0               	movwf	___bmul@multiplicand
  9272  0BED  0828               	movf	SCH_Add_Task@Index,w
  9273  0BEE  160A  118A  26F6  120A  158A  	fcall	___bmul
  9274  0BF3  3EA0               	addlw	(low (_SCH_tasks| 0))& (0+255)
  9275  0BF4  0084               	movwf	4
  9276  0BF5  1383               	bcf	3,7	;select IRP bank1
  9277  0BF6  0800               	movf	0,w
  9278  0BF7  1903               	btfsc	3,2
  9279  0BF8  2BFA               	goto	u3691
  9280  0BF9  2BFB               	goto	u3690
  9281  0BFA                     u3691:
  9282  0BFA  2C03               	goto	l3372
  9283  0BFB                     u3690:
  9284  0BFB                     l3370:
  9285  0BFB  3003               	movlw	3
  9286  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  9287  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  9288  0BFE  0228               	subwf	SCH_Add_Task@Index,w
  9289  0BFF  1C03               	skipc
  9290  0C00  2C02               	goto	u3701
  9291  0C01  2C03               	goto	u3700
  9292  0C02                     u3701:
  9293  0C02  2BE5               	goto	l3366
  9294  0C03                     u3700:
  9295  0C03                     l3372:
  9296                           
  9297                           ;SCH_PIC16F877A.c: 102:     if (Index == (3))
  9298  0C03  3003               	movlw	3
  9299  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  9300  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  9301  0C06  0628               	xorwf	SCH_Add_Task@Index,w
  9302  0C07  1D03               	btfss	3,2
  9303  0C08  2C0A               	goto	u3711
  9304  0C09  2C0B               	goto	u3710
  9305  0C0A                     u3711:
  9306  0C0A  2C10               	goto	l3376
  9307  0C0B                     u3710:
  9308  0C0B                     l3374:
  9309                           
  9310                           ;SCH_PIC16F877A.c: 103:     {;SCH_PIC16F877A.c: 105:         ERROR_Code = (1);
  9311  0C0B  1683               	bsf	3,5	;RP0=1, select bank1
  9312  0C0C  1303               	bcf	3,6	;RP1=0, select bank1
  9313  0C0D  01BF               	clrf	_ERROR_Code^(0+128)
  9314  0C0E  0ABF               	incf	_ERROR_Code^(0+128),f
  9315                           
  9316                           ;SCH_PIC16F877A.c: 107:         return (3);;	Return value of _SCH_Add_Task is never used
  9317  0C0F  2C59               	goto	l332
  9318  0C10                     l3376:
  9319                           
  9320                           ;SCH_PIC16F877A.c: 109:     SCH_tasks[Index].ptr_Task = ptr_fun;
  9321  0C10  3006               	movlw	6
  9322  0C11  00FF               	movwf	btemp+1
  9323  0C12  087F               	movf	btemp+1,w
  9324  0C13  00A0               	movwf	___bmul@multiplicand
  9325  0C14  0828               	movf	SCH_Add_Task@Index,w
  9326  0C15  160A  118A  26F6  120A  158A  	fcall	___bmul
  9327  0C1A  3EA0               	addlw	(low (_SCH_tasks| 0))& (0+255)
  9328  0C1B  0084               	movwf	4
  9329  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  9330  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  9331  0C1E  0827               	movf	SCH_Add_Task@ptr_fun,w
  9332  0C1F  00FF               	movwf	btemp+1
  9333  0C20  087F               	movf	btemp+1,w
  9334  0C21  1383               	bcf	3,7	;select IRP bank1
  9335  0C22  0080               	movwf	0
  9336                           
  9337                           ;SCH_PIC16F877A.c: 110:     SCH_tasks[Index].Delay = Delay;
  9338  0C23  3006               	movlw	6
  9339  0C24  00FF               	movwf	btemp+1
  9340  0C25  087F               	movf	btemp+1,w
  9341  0C26  00A0               	movwf	___bmul@multiplicand
  9342  0C27  0828               	movf	SCH_Add_Task@Index,w
  9343  0C28  160A  118A  26F6  120A  158A  	fcall	___bmul
  9344  0C2D  3EA1               	addlw	(low ((_SCH_tasks| 0+1)))& (0+255)
  9345  0C2E  0084               	movwf	4
  9346  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  9347  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  9348  0C31  0823               	movf	SCH_Add_Task@Delay,w
  9349  0C32  1383               	bcf	3,7	;select IRP bank1
  9350  0C33  0080               	movwf	0
  9351  0C34  0A84               	incf	4,f
  9352  0C35  0824               	movf	SCH_Add_Task@Delay+1,w
  9353  0C36  0080               	movwf	0
  9354                           
  9355                           ;SCH_PIC16F877A.c: 111:     SCH_tasks[Index].Period = Period;
  9356  0C37  3006               	movlw	6
  9357  0C38  00FF               	movwf	btemp+1
  9358  0C39  087F               	movf	btemp+1,w
  9359  0C3A  00A0               	movwf	___bmul@multiplicand
  9360  0C3B  0828               	movf	SCH_Add_Task@Index,w
  9361  0C3C  160A  118A  26F6  120A  158A  	fcall	___bmul
  9362  0C41  3EA3               	addlw	(low ((_SCH_tasks| 0+3)))& (0+255)
  9363  0C42  0084               	movwf	4
  9364  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  9365  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  9366  0C45  0825               	movf	SCH_Add_Task@Period,w
  9367  0C46  1383               	bcf	3,7	;select IRP bank1
  9368  0C47  0080               	movwf	0
  9369  0C48  0A84               	incf	4,f
  9370  0C49  0826               	movf	SCH_Add_Task@Period+1,w
  9371  0C4A  0080               	movwf	0
  9372                           
  9373                           ;SCH_PIC16F877A.c: 112:     SCH_tasks[Index].Run = 0;
  9374  0C4B  3006               	movlw	6
  9375  0C4C  00FF               	movwf	btemp+1
  9376  0C4D  087F               	movf	btemp+1,w
  9377  0C4E  00A0               	movwf	___bmul@multiplicand
  9378  0C4F  0828               	movf	SCH_Add_Task@Index,w
  9379  0C50  160A  118A  26F6  120A  158A  	fcall	___bmul
  9380  0C55  3EA5               	addlw	(low ((_SCH_tasks| 0+5)))& (0+255)
  9381  0C56  0084               	movwf	4
  9382  0C57  1383               	bcf	3,7	;select IRP bank1
  9383  0C58  0180               	clrf	0
  9384  0C59                     l332:
  9385  0C59  0008               	return
  9386  0C5A                     __end_of_SCH_Add_Task:
  9387                           
  9388                           	psect	text50
  9389  16F6                     __ptext50:	
  9390 ;; *************** function ___bmul *****************
  9391 ;; Defined at:
  9392 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  multiplier      1    wreg     unsigned char 
  9395 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  multiplier      1    2[BANK0 ] unsigned char 
  9398 ;;  product         1    1[BANK0 ] unsigned char 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  1    wreg      unsigned char 
  9401 ;; Registers used:
  9402 ;;		wreg, status,2, status,0, btemp+1
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9408 ;;      Params:         0       1       0       0       0
  9409 ;;      Locals:         0       2       0       0       0
  9410 ;;      Temps:          0       0       0       0       0
  9411 ;;      Totals:         0       3       0       0       0
  9412 ;;Total ram usage:        3 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; Hardware stack levels required when called:    3
  9415 ;; This function calls:
  9416 ;;		Nothing
  9417 ;; This function is called by:
  9418 ;;		_SCH_Update_Task
  9419 ;;		_SCH_Add_Task
  9420 ;;		_SCH_Dispatch_Tasks
  9421 ;;		_SCH_Delete_Task
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           
  9425                           
  9426                           ;psect for function ___bmul
  9427  16F6                     ___bmul:
  9428                           
  9429                           ;incstack = 0
  9430                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  9431                           ;___bmul@multiplier stored from wreg
  9432  16F6  1283               	bcf	3,5	;RP0=0, select bank0
  9433  16F7  1303               	bcf	3,6	;RP1=0, select bank0
  9434  16F8  00A2               	movwf	___bmul@multiplier
  9435  16F9                     l3052:
  9436  16F9  01A1               	clrf	___bmul@product
  9437  16FA                     l3054:
  9438  16FA  1C22               	btfss	___bmul@multiplier,0
  9439  16FB  2EFD               	goto	u3381
  9440  16FC  2EFE               	goto	u3380
  9441  16FD                     u3381:
  9442  16FD  2F02               	goto	l3058
  9443  16FE                     u3380:
  9444  16FE                     l3056:
  9445  16FE  0820               	movf	___bmul@multiplicand,w
  9446  16FF  00FF               	movwf	btemp+1
  9447  1700  087F               	movf	btemp+1,w
  9448  1701  07A1               	addwf	___bmul@product,f
  9449  1702                     l3058:
  9450  1702  1003               	clrc
  9451  1703  0DA0               	rlf	___bmul@multiplicand,f
  9452  1704                     l3060:
  9453  1704  1003               	clrc
  9454  1705  0CA2               	rrf	___bmul@multiplier,f
  9455  1706                     l3062:
  9456  1706  0822               	movf	___bmul@multiplier,w
  9457  1707  1D03               	btfss	3,2
  9458  1708  2F0A               	goto	u3391
  9459  1709  2F0B               	goto	u3390
  9460  170A                     u3391:
  9461  170A  2EFA               	goto	l3054
  9462  170B                     u3390:
  9463  170B                     l3064:
  9464  170B  0821               	movf	___bmul@product,w
  9465  170C                     l694:
  9466  170C  0008               	return
  9467  170D                     __end_of___bmul:
  9468                           
  9469                           	psect	text51
  9470  15F5                     __ptext51:	
  9471 ;; *************** function _GOTO_SLEEP *****************
  9472 ;; Defined at:
  9473 ;;		line 12 in file "SLEEP.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;		None
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;		None
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  1    wreg      void 
  9480 ;; Registers used:
  9481 ;;		status,2
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9487 ;;      Params:         0       0       0       0       0
  9488 ;;      Locals:         0       0       0       0       0
  9489 ;;      Temps:          0       0       0       0       0
  9490 ;;      Totals:         0       0       0       0       0
  9491 ;;Total ram usage:        0 bytes
  9492 ;; Hardware stack levels used:    1
  9493 ;; Hardware stack levels required when called:    3
  9494 ;; This function calls:
  9495 ;;		Nothing
  9496 ;; This function is called by:
  9497 ;;		_main
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           
  9502                           ;psect for function _GOTO_SLEEP
  9503  15F5                     _GOTO_SLEEP:
  9504  15F5                     l3382:	
  9505                           ;incstack = 0
  9506                           ; Regs used in _GOTO_SLEEP: [status,2]
  9507                           
  9508                           
  9509                           ;SLEEP.c: 15:     PORTA = 0x00;
  9510  15F5  1283               	bcf	3,5	;RP0=0, select bank0
  9511  15F6  1303               	bcf	3,6	;RP1=0, select bank0
  9512  15F7  0185               	clrf	5	;volatile
  9513                           
  9514                           ;SLEEP.c: 16:     PORTB = 0x00;
  9515  15F8  0186               	clrf	6	;volatile
  9516                           
  9517                           ;SLEEP.c: 17:     PORTC = 0x00;
  9518  15F9  0187               	clrf	7	;volatile
  9519                           
  9520                           ;SLEEP.c: 18:     PORTD = 0x00;
  9521  15FA  0188               	clrf	8	;volatile
  9522                           
  9523                           ;SLEEP.c: 19:     PORTE = 0x00;
  9524  15FB  0189               	clrf	9	;volatile
  9525  15FC  0063               	sleep	;# 
  9526  15FD                     l289:
  9527  15FD  0008               	return
  9528  15FE                     __end_of_GOTO_SLEEP:
  9529                           
  9530                           	psect	text52
  9531  08F7                     __ptext52:	
  9532 ;; *************** function _EEPROM_Read *****************
  9533 ;; Defined at:
  9534 ;;		line 24 in file "EEPROM_I2C.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;  add             2    2[BANK0 ] unsigned int 
  9537 ;; Auto vars:     Size  Location     Type
  9538 ;;  Data            1    4[BANK0 ] unsigned char 
  9539 ;; Return value:  Size  Location     Type
  9540 ;;                  1    wreg      unsigned char 
  9541 ;; Registers used:
  9542 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9543 ;; Tracked objects:
  9544 ;;		On entry : 0/0
  9545 ;;		On exit  : 0/0
  9546 ;;		Unchanged: 0/0
  9547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9548 ;;      Params:         0       2       0       0       0
  9549 ;;      Locals:         0       1       0       0       0
  9550 ;;      Temps:          0       0       0       0       0
  9551 ;;      Totals:         0       3       0       0       0
  9552 ;;Total ram usage:        3 bytes
  9553 ;; Hardware stack levels used:    1
  9554 ;; Hardware stack levels required when called:    5
  9555 ;; This function calls:
  9556 ;;		_I2C_Master_RepeatedStart
  9557 ;;		_I2C_Master_Start
  9558 ;;		_I2C_Master_Stop
  9559 ;;		_I2C_Master_Write
  9560 ;;		_I2C_NACK
  9561 ;;		_I2C_Read_Byte
  9562 ;; This function is called by:
  9563 ;;		_main
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           
  9568                           ;psect for function _EEPROM_Read
  9569  08F7                     _EEPROM_Read:
  9570  08F7                     l3348:	
  9571                           ;incstack = 0
  9572                           ; Regs used in _EEPROM_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9573                           
  9574                           
  9575                           ;EEPROM_I2C.c: 24: unsigned char EEPROM_Read(unsigned int add);EEPROM_I2C.c: 25: {;EEPRO
      +                          M_I2C.c: 26:     unsigned char Data;;EEPROM_I2C.c: 27:     I2C_Master_Start();
  9576  08F7  160A  118A  2633  120A  158A  	fcall	_I2C_Master_Start
  9577                           
  9578                           ;EEPROM_I2C.c: 29:     while (I2C_Master_Write(0xA0))
  9579  08FC  2902               	goto	l579
  9580  08FD                     l3350:
  9581                           
  9582                           ;EEPROM_I2C.c: 30:         I2C_Master_RepeatedStart();
  9583  08FD  160A  118A  2627  120A  158A  	fcall	_I2C_Master_RepeatedStart
  9584  0902                     l579:
  9585                           
  9586                           ;EEPROM_I2C.c: 29:     while (I2C_Master_Write(0xA0))
  9587  0902  30A0               	movlw	160
  9588  0903  160A  118A  2727  120A  158A  	fcall	_I2C_Master_Write
  9589  0908  3A00               	xorlw	0
  9590  0909  1D03               	skipz
  9591  090A  290C               	goto	u3681
  9592  090B  290D               	goto	u3680
  9593  090C                     u3681:
  9594  090C  28FD               	goto	l3350
  9595  090D                     u3680:
  9596  090D                     l3352:
  9597                           
  9598                           ;EEPROM_I2C.c: 31:     I2C_Master_Write(add >> 8);
  9599  090D  1283               	bcf	3,5	;RP0=0, select bank0
  9600  090E  1303               	bcf	3,6	;RP1=0, select bank0
  9601  090F  0823               	movf	EEPROM_Read@add+1,w
  9602  0910  160A  118A  2727  120A  158A  	fcall	_I2C_Master_Write
  9603                           
  9604                           ;EEPROM_I2C.c: 32:     I2C_Master_Write((unsigned char) add);
  9605  0915  1283               	bcf	3,5	;RP0=0, select bank0
  9606  0916  1303               	bcf	3,6	;RP1=0, select bank0
  9607  0917  0822               	movf	EEPROM_Read@add,w
  9608  0918  160A  118A  2727  120A  158A  	fcall	_I2C_Master_Write
  9609                           
  9610                           ;EEPROM_I2C.c: 33:     I2C_Master_RepeatedStart();
  9611  091D  160A  118A  2627  120A  158A  	fcall	_I2C_Master_RepeatedStart
  9612                           
  9613                           ;EEPROM_I2C.c: 34:     I2C_Master_Write(0xA1);
  9614  0922  30A1               	movlw	161
  9615  0923  160A  118A  2727  120A  158A  	fcall	_I2C_Master_Write
  9616  0928                     l3354:
  9617                           
  9618                           ;EEPROM_I2C.c: 35:     Data = I2C_Read_Byte();
  9619  0928  160A  118A  26DF  120A  158A  	fcall	_I2C_Read_Byte
  9620  092D  00FF               	movwf	btemp+1
  9621  092E  087F               	movf	btemp+1,w
  9622  092F  1283               	bcf	3,5	;RP0=0, select bank0
  9623  0930  1303               	bcf	3,6	;RP1=0, select bank0
  9624  0931  00A4               	movwf	EEPROM_Read@Data
  9625  0932                     l3356:
  9626                           
  9627                           ;EEPROM_I2C.c: 36:     I2C_NACK();
  9628  0932  160A  118A  2688  120A  158A  	fcall	_I2C_NACK
  9629  0937                     l3358:
  9630                           
  9631                           ;EEPROM_I2C.c: 37:     I2C_Master_Stop();
  9632  0937  160A  118A  263F  120A  158A  	fcall	_I2C_Master_Stop
  9633  093C                     l3360:
  9634                           
  9635                           ;EEPROM_I2C.c: 38:     return Data;
  9636  093C  1283               	bcf	3,5	;RP0=0, select bank0
  9637  093D  1303               	bcf	3,6	;RP1=0, select bank0
  9638  093E  0824               	movf	EEPROM_Read@Data,w
  9639  093F                     l582:
  9640  093F  0008               	return
  9641  0940                     __end_of_EEPROM_Read:
  9642                           
  9643                           	psect	text53
  9644  16DF                     __ptext53:	
  9645 ;; *************** function _I2C_Read_Byte *****************
  9646 ;; Defined at:
  9647 ;;		line 79 in file "I2C.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;		None
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      unsigned char 
  9654 ;; Registers used:
  9655 ;;		wreg, status,2, status,0, pclath, cstack
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9661 ;;      Params:         0       0       0       0       0
  9662 ;;      Locals:         0       0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0
  9664 ;;      Totals:         0       0       0       0       0
  9665 ;;Total ram usage:        0 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:    4
  9668 ;; This function calls:
  9669 ;;		_I2C_Master_Wait
  9670 ;; This function is called by:
  9671 ;;		_EEPROM_Read
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           
  9676                           ;psect for function _I2C_Read_Byte
  9677  16DF                     _I2C_Read_Byte:
  9678  16DF                     l3296:	
  9679                           ;incstack = 0
  9680                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  9681                           
  9682                           
  9683                           ;I2C.c: 81:     I2C_Master_Wait();
  9684  16DF  160A  118A  267B  160A  118A  	fcall	_I2C_Master_Wait
  9685  16E4                     l3298:
  9686                           
  9687                           ;I2C.c: 82:     SSPCON2bits.RCEN = 1;
  9688  16E4  1683               	bsf	3,5	;RP0=1, select bank1
  9689  16E5  1303               	bcf	3,6	;RP1=0, select bank1
  9690  16E6  1591               	bsf	17,3	;volatile
  9691  16E7                     l553:	
  9692                           ;I2C.c: 83:     while(!PIR1bits.SSPIF);
  9693                           
  9694  16E7  1283               	bcf	3,5	;RP0=0, select bank0
  9695  16E8  1D8C               	btfss	12,3	;volatile
  9696  16E9  2EEB               	goto	u3641
  9697  16EA  2EEC               	goto	u3640
  9698  16EB                     u3641:
  9699  16EB  2EE7               	goto	l553
  9700  16EC                     u3640:
  9701  16EC                     l555:
  9702                           
  9703                           ;I2C.c: 84:     PIR1bits.SSPIF = 0;
  9704  16EC  118C               	bcf	12,3	;volatile
  9705  16ED                     l3300:
  9706                           
  9707                           ;I2C.c: 85:     I2C_Master_Wait();
  9708  16ED  160A  118A  267B  160A  118A  	fcall	_I2C_Master_Wait
  9709  16F2                     l3302:
  9710                           
  9711                           ;I2C.c: 87:     return SSPBUF;
  9712  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  9713  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  9714  16F4  0813               	movf	19,w	;volatile
  9715  16F5                     l556:
  9716  16F5  0008               	return
  9717  16F6                     __end_of_I2C_Read_Byte:
  9718                           
  9719                           	psect	text54
  9720  1688                     __ptext54:	
  9721 ;; *************** function _I2C_NACK *****************
  9722 ;; Defined at:
  9723 ;;		line 59 in file "I2C.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;		None
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;		None
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  1    wreg      void 
  9730 ;; Registers used:
  9731 ;;		wreg, status,2, status,0, pclath, cstack
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9737 ;;      Params:         0       0       0       0       0
  9738 ;;      Locals:         0       0       0       0       0
  9739 ;;      Temps:          0       0       0       0       0
  9740 ;;      Totals:         0       0       0       0       0
  9741 ;;Total ram usage:        0 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; Hardware stack levels required when called:    4
  9744 ;; This function calls:
  9745 ;;		_I2C_Master_Wait
  9746 ;; This function is called by:
  9747 ;;		_EEPROM_Read
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751                           
  9752                           ;psect for function _I2C_NACK
  9753  1688                     _I2C_NACK:
  9754  1688                     l3290:	
  9755                           ;incstack = 0
  9756                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  9757                           
  9758                           
  9759                           ;I2C.c: 63:     SSPCON2bits.ACKDT = 1;
  9760  1688  1683               	bsf	3,5	;RP0=1, select bank1
  9761  1689  1303               	bcf	3,6	;RP1=0, select bank1
  9762  168A  1691               	bsf	17,5	;volatile
  9763                           
  9764                           ;I2C.c: 64:     SSPCON2bits.ACKEN = 1;
  9765  168B  1611               	bsf	17,4	;volatile
  9766  168C                     l3292:
  9767                           
  9768                           ;I2C.c: 65:     I2C_Master_Wait();
  9769  168C  160A  118A  267B  160A  118A  	fcall	_I2C_Master_Wait
  9770  1691                     l3294:
  9771                           
  9772                           ;I2C.c: 66:     PIR1bits.SSPIF = 0;
  9773  1691  1283               	bcf	3,5	;RP0=0, select bank0
  9774  1692  1303               	bcf	3,6	;RP1=0, select bank0
  9775  1693  118C               	bcf	12,3	;volatile
  9776  1694                     l544:
  9777  1694  0008               	return
  9778  1695                     __end_of_I2C_NACK:
  9779                           
  9780                           	psect	text55
  9781  1727                     __ptext55:	
  9782 ;; *************** function _I2C_Master_Write *****************
  9783 ;; Defined at:
  9784 ;;		line 69 in file "I2C.c"
  9785 ;; Parameters:    Size  Location     Type
  9786 ;;  Data            1    wreg     unsigned char 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  Data            1    1[BANK0 ] unsigned char 
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  1    wreg      unsigned char 
  9791 ;; Registers used:
  9792 ;;		wreg, status,2, status,0, pclath, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9798 ;;      Params:         0       0       0       0       0
  9799 ;;      Locals:         0       1       0       0       0
  9800 ;;      Temps:          0       1       0       0       0
  9801 ;;      Totals:         0       2       0       0       0
  9802 ;;Total ram usage:        2 bytes
  9803 ;; Hardware stack levels used:    1
  9804 ;; Hardware stack levels required when called:    4
  9805 ;; This function calls:
  9806 ;;		_I2C_Master_Wait
  9807 ;; This function is called by:
  9808 ;;		_EEPROM_Write
  9809 ;;		_EEPROM_Read
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           
  9814                           ;psect for function _I2C_Master_Write
  9815  1727                     _I2C_Master_Write:
  9816                           
  9817                           ;incstack = 0
  9818                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  9819                           ;I2C_Master_Write@Data stored from wreg
  9820  1727  1283               	bcf	3,5	;RP0=0, select bank0
  9821  1728  1303               	bcf	3,6	;RP1=0, select bank0
  9822  1729  00A1               	movwf	I2C_Master_Write@Data
  9823  172A                     l2436:
  9824                           
  9825                           ;I2C.c: 69: unsigned char I2C_Master_Write(unsigned char Data);I2C.c: 70: {;I2C.c: 72:  
      +                             I2C_Master_Wait();
  9826  172A  160A  118A  267B  160A  118A  	fcall	_I2C_Master_Wait
  9827  172F                     l2438:
  9828                           
  9829                           ;I2C.c: 73:     SSPBUF = Data;
  9830  172F  1283               	bcf	3,5	;RP0=0, select bank0
  9831  1730  1303               	bcf	3,6	;RP1=0, select bank0
  9832  1731  0821               	movf	I2C_Master_Write@Data,w
  9833  1732  0093               	movwf	19	;volatile
  9834  1733                     l547:	
  9835                           ;I2C.c: 74:     while(!PIR1bits.SSPIF);
  9836                           
  9837  1733  1D8C               	btfss	12,3	;volatile
  9838  1734  2F36               	goto	u2101
  9839  1735  2F37               	goto	u2100
  9840  1736                     u2101:
  9841  1736  2F33               	goto	l547
  9842  1737                     u2100:
  9843  1737                     l549:
  9844                           
  9845                           ;I2C.c: 75:         PIR1bits.SSPIF = 0;
  9846  1737  118C               	bcf	12,3	;volatile
  9847  1738                     l2440:
  9848                           
  9849                           ;I2C.c: 76:     return SSPCON2bits.ACKSTAT;
  9850  1738  1683               	bsf	3,5	;RP0=1, select bank1
  9851  1739  1303               	bcf	3,6	;RP1=0, select bank1
  9852  173A  0E11               	swapf	17,w	;volatile
  9853  173B  1283               	bcf	3,5	;RP0=0, select bank0
  9854  173C  1303               	bcf	3,6	;RP1=0, select bank0
  9855  173D  00A0               	movwf	??_I2C_Master_Write
  9856  173E  0CA0               	rrf	??_I2C_Master_Write,f
  9857  173F  0C20               	rrf	??_I2C_Master_Write,w
  9858  1740  3901               	andlw	1
  9859  1741                     l550:
  9860  1741  0008               	return
  9861  1742                     __end_of_I2C_Master_Write:
  9862                           
  9863                           	psect	text56
  9864  163F                     __ptext56:	
  9865 ;; *************** function _I2C_Master_Stop *****************
  9866 ;; Defined at:
  9867 ;;		line 33 in file "I2C.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;		None
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;		None
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  1    wreg      void 
  9874 ;; Registers used:
  9875 ;;		wreg, status,2, status,0, pclath, cstack
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9881 ;;      Params:         0       0       0       0       0
  9882 ;;      Locals:         0       0       0       0       0
  9883 ;;      Temps:          0       0       0       0       0
  9884 ;;      Totals:         0       0       0       0       0
  9885 ;;Total ram usage:        0 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; Hardware stack levels required when called:    4
  9888 ;; This function calls:
  9889 ;;		_I2C_Master_Wait
  9890 ;; This function is called by:
  9891 ;;		_EEPROM_Write
  9892 ;;		_EEPROM_Read
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           
  9897                           ;psect for function _I2C_Master_Stop
  9898  163F                     _I2C_Master_Stop:
  9899  163F                     l2424:	
  9900                           ;incstack = 0
  9901                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9902                           
  9903                           
  9904                           ;I2C.c: 36:     I2C_Master_Wait();
  9905  163F  160A  118A  267B  160A  118A  	fcall	_I2C_Master_Wait
  9906  1644                     l2426:
  9907                           
  9908                           ;I2C.c: 37:     SSPCON2bits.PEN = 1;
  9909  1644  1683               	bsf	3,5	;RP0=1, select bank1
  9910  1645  1303               	bcf	3,6	;RP1=0, select bank1
  9911  1646  1511               	bsf	17,2	;volatile
  9912  1647                     l2428:
  9913                           
  9914                           ;I2C.c: 38:     PIR1bits.SSPIF = 0;
  9915  1647  1283               	bcf	3,5	;RP0=0, select bank0
  9916  1648  1303               	bcf	3,6	;RP1=0, select bank0
  9917  1649  118C               	bcf	12,3	;volatile
  9918  164A                     l535:
  9919  164A  0008               	return
  9920  164B                     __end_of_I2C_Master_Stop:
  9921                           
  9922                           	psect	text57
  9923  1633                     __ptext57:	
  9924 ;; *************** function _I2C_Master_Start *****************
  9925 ;; Defined at:
  9926 ;;		line 25 in file "I2C.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;		None
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;		None
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      void 
  9933 ;; Registers used:
  9934 ;;		wreg, status,2, status,0, pclath, cstack
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9940 ;;      Params:         0       0       0       0       0
  9941 ;;      Locals:         0       0       0       0       0
  9942 ;;      Temps:          0       0       0       0       0
  9943 ;;      Totals:         0       0       0       0       0
  9944 ;;Total ram usage:        0 bytes
  9945 ;; Hardware stack levels used:    1
  9946 ;; Hardware stack levels required when called:    4
  9947 ;; This function calls:
  9948 ;;		_I2C_Master_Wait
  9949 ;; This function is called by:
  9950 ;;		_EEPROM_Write
  9951 ;;		_EEPROM_Read
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           
  9956                           ;psect for function _I2C_Master_Start
  9957  1633                     _I2C_Master_Start:
  9958  1633                     l2418:	
  9959                           ;incstack = 0
  9960                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9961                           
  9962                           
  9963                           ;I2C.c: 28:     I2C_Master_Wait();
  9964  1633  160A  118A  267B  160A  118A  	fcall	_I2C_Master_Wait
  9965  1638                     l2420:
  9966                           
  9967                           ;I2C.c: 29:     SSPCON2bits.SEN = 1;
  9968  1638  1683               	bsf	3,5	;RP0=1, select bank1
  9969  1639  1303               	bcf	3,6	;RP1=0, select bank1
  9970  163A  1411               	bsf	17,0	;volatile
  9971  163B                     l2422:
  9972                           
  9973                           ;I2C.c: 30:     PIR1bits.SSPIF = 0;
  9974  163B  1283               	bcf	3,5	;RP0=0, select bank0
  9975  163C  1303               	bcf	3,6	;RP1=0, select bank0
  9976  163D  118C               	bcf	12,3	;volatile
  9977  163E                     l532:
  9978  163E  0008               	return
  9979  163F                     __end_of_I2C_Master_Start:
  9980                           
  9981                           	psect	text58
  9982  1627                     __ptext58:	
  9983 ;; *************** function _I2C_Master_RepeatedStart *****************
  9984 ;; Defined at:
  9985 ;;		line 41 in file "I2C.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;		None
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;		None
  9990 ;; Return value:  Size  Location     Type
  9991 ;;                  1    wreg      void 
  9992 ;; Registers used:
  9993 ;;		wreg, status,2, status,0, pclath, cstack
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9999 ;;      Params:         0       0       0       0       0
 10000 ;;      Locals:         0       0       0       0       0
 10001 ;;      Temps:          0       0       0       0       0
 10002 ;;      Totals:         0       0       0       0       0
 10003 ;;Total ram usage:        0 bytes
 10004 ;; Hardware stack levels used:    1
 10005 ;; Hardware stack levels required when called:    4
 10006 ;; This function calls:
 10007 ;;		_I2C_Master_Wait
 10008 ;; This function is called by:
 10009 ;;		_EEPROM_Write
 10010 ;;		_EEPROM_Read
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           
 10015                           ;psect for function _I2C_Master_RepeatedStart
 10016  1627                     _I2C_Master_RepeatedStart:
 10017  1627                     l2430:	
 10018                           ;incstack = 0
 10019                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 10020                           
 10021                           
 10022                           ;I2C.c: 44:     I2C_Master_Wait();
 10023  1627  160A  118A  267B  160A  118A  	fcall	_I2C_Master_Wait
 10024  162C                     l2432:
 10025                           
 10026                           ;I2C.c: 45:     SSPCON2bits.RSEN = 1;
 10027  162C  1683               	bsf	3,5	;RP0=1, select bank1
 10028  162D  1303               	bcf	3,6	;RP1=0, select bank1
 10029  162E  1491               	bsf	17,1	;volatile
 10030  162F                     l2434:
 10031                           
 10032                           ;I2C.c: 46:     PIR1bits.SSPIF = 0;
 10033  162F  1283               	bcf	3,5	;RP0=0, select bank0
 10034  1630  1303               	bcf	3,6	;RP1=0, select bank0
 10035  1631  118C               	bcf	12,3	;volatile
 10036  1632                     l538:
 10037  1632  0008               	return
 10038  1633                     __end_of_I2C_Master_RepeatedStart:
 10039                           
 10040                           	psect	text59
 10041  167B                     __ptext59:	
 10042 ;; *************** function _I2C_Master_Wait *****************
 10043 ;; Defined at:
 10044 ;;		line 10 in file "I2C.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;		None
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;		None
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      void 
 10051 ;; Registers used:
 10052 ;;		wreg, status,2
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10058 ;;      Params:         0       0       0       0       0
 10059 ;;      Locals:         0       0       0       0       0
 10060 ;;      Temps:          0       0       0       0       0
 10061 ;;      Totals:         0       0       0       0       0
 10062 ;;Total ram usage:        0 bytes
 10063 ;; Hardware stack levels used:    1
 10064 ;; Hardware stack levels required when called:    3
 10065 ;; This function calls:
 10066 ;;		Nothing
 10067 ;; This function is called by:
 10068 ;;		_I2C_Master_Start
 10069 ;;		_I2C_Master_Stop
 10070 ;;		_I2C_Master_RepeatedStart
 10071 ;;		_I2C_NACK
 10072 ;;		_I2C_Master_Write
 10073 ;;		_I2C_Read_Byte
 10074 ;;		_I2C_ACK
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           
 10079                           ;psect for function _I2C_Master_Wait
 10080  167B                     _I2C_Master_Wait:
 10081  167B                     l2350:	
 10082                           ;incstack = 0
 10083                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10084                           
 10085  167B                     l523:	
 10086                           ;I2C.c: 12:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 10087                           
 10088  167B  1683               	bsf	3,5	;RP0=1, select bank1
 10089  167C  1303               	bcf	3,6	;RP1=0, select bank1
 10090  167D  1914               	btfsc	20,2	;volatile
 10091  167E  2E80               	goto	u1981
 10092  167F  2E81               	goto	u1980
 10093  1680                     u1981:
 10094  1680  2E7B               	goto	l523
 10095  1681                     u1980:
 10096  1681                     l2352:
 10097  1681  0811               	movf	17,w	;volatile
 10098  1682  391F               	andlw	31
 10099  1683  1D03               	btfss	3,2
 10100  1684  2E86               	goto	u1991
 10101  1685  2E87               	goto	u1990
 10102  1686                     u1991:
 10103  1686  2E7B               	goto	l523
 10104  1687                     u1990:
 10105  1687                     l526:
 10106  1687  0008               	return
 10107  1688                     __end_of_I2C_Master_Wait:
 10108                           
 10109                           	psect	text60
 10110  179C                     __ptext60:	
 10111 ;; *************** function _ISR *****************
 10112 ;; Defined at:
 10113 ;;		line 88 in file "main.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;		None
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;		None
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10127 ;;      Params:         0       0       0       0       0
 10128 ;;      Locals:         0       0       0       0       0
 10129 ;;      Temps:          5       0       0       0       0
 10130 ;;      Totals:         5       0       0       0       0
 10131 ;;Total ram usage:        5 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    2
 10134 ;; This function calls:
 10135 ;;		_SCH_Update_Task
 10136 ;; This function is called by:
 10137 ;;		Interrupt level 1
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           
 10142                           ;psect for function _ISR
 10143  179C                     _ISR:
 10144  179C                     i1l3476:
 10145                           
 10146                           ;main.c: 90:     if(((PIR1>>0)&1))
 10147  179C  1C0C               	btfss	12,0	;volatile
 10148  179D  2F9F               	goto	u393_21
 10149  179E  2FA0               	goto	u393_20
 10150  179F                     u393_21:
 10151  179F  2FA5               	goto	i1l3480
 10152  17A0                     u393_20:
 10153  17A0                     i1l3478:
 10154                           
 10155                           ;main.c: 91:     {;main.c: 94:         SCH_Update_Task();
 10156  17A0  120A  158A  24EE  160A  118A  	fcall	_SCH_Update_Task
 10157  17A5                     i1l3480:
 10158                           
 10159                           ;main.c: 101:     if(((INTCON>>1)&1) == 1)
 10160  17A5  080B               	movf	11,w	;volatile
 10161  17A6  00F6               	movwf	??_ISR
 10162  17A7  3001               	movlw	1
 10163  17A8                     u394_25:
 10164  17A8  1003               	clrc
 10165  17A9  0CF6               	rrf	??_ISR,f
 10166  17AA  3EFF               	addlw	-1
 10167  17AB  1D03               	skipz
 10168  17AC  2FA8               	goto	u394_25
 10169  17AD  1C76               	btfss	??_ISR,0
 10170  17AE  2FB0               	goto	u395_21
 10171  17AF  2FB1               	goto	u395_20
 10172  17B0                     u395_21:
 10173  17B0  2FC1               	goto	i1l74
 10174  17B1                     u395_20:
 10175  17B1                     i1l3482:
 10176                           
 10177                           ;main.c: 102:     {;main.c: 103:         SLEEP_flag = !SLEEP_flag;
 10178  17B1  1683               	bsf	3,5	;RP0=1, select bank1
 10179  17B2  1303               	bcf	3,6	;RP1=0, select bank1
 10180  17B3  0847               	movf	_SLEEP_flag^(0+128),w
 10181  17B4  1903               	btfsc	3,2
 10182  17B5  2FB7               	goto	u396_21
 10183  17B6  2FB9               	goto	u396_20
 10184  17B7                     u396_21:
 10185  17B7  3001               	movlw	1
 10186  17B8  2FBA               	goto	u397_20
 10187  17B9                     u396_20:
 10188  17B9  3000               	movlw	0
 10189  17BA                     u397_20:
 10190  17BA  00FF               	movwf	btemp+1
 10191  17BB  087F               	movf	btemp+1,w
 10192  17BC  00C7               	movwf	_SLEEP_flag^(0+128)
 10193                           
 10194                           ;main.c: 104:         (INTCON &= ~(1<<1));
 10195  17BD  30FD               	movlw	253
 10196  17BE  00FF               	movwf	btemp+1
 10197  17BF  087F               	movf	btemp+1,w
 10198  17C0  058B               	andwf	11,f	;volatile
 10199  17C1                     i1l74:
 10200  17C1  087A               	movf	??_ISR+4,w
 10201  17C2  1283               	bcf	3,5	;RP0=0, select bank0
 10202  17C3  1303               	bcf	3,6	;RP1=0, select bank0
 10203  17C4  00FF               	movwf	btemp+1
 10204  17C5  0879               	movf	??_ISR+3,w
 10205  17C6  008A               	movwf	10
 10206  17C7  0878               	movf	??_ISR+2,w
 10207  17C8  0084               	movwf	4
 10208  17C9  0E77               	swapf	(??_ISR+1)^(0+4294967168),w
 10209  17CA  0083               	movwf	3
 10210  17CB  0EFE               	swapf	btemp,f
 10211  17CC  0E7E               	swapf	btemp,w
 10212  17CD  0009               	retfie
 10213  17CE                     __end_of_ISR:
 10214                           
 10215                           	psect	intentry
 10216  0004                     __pintentry:	
 10217                           ;incstack = 0
 10218                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10219                           
 10220  0004                     interrupt_function:
 10221  007E                     saved_w	set	btemp
 10222  0004  00FE               	movwf	btemp
 10223  0005  0E03               	swapf	3,w
 10224  0006  00F7               	movwf	??_ISR+1
 10225  0007  0804               	movf	4,w
 10226  0008  00F8               	movwf	??_ISR+2
 10227  0009  080A               	movf	10,w
 10228  000A  00F9               	movwf	??_ISR+3
 10229  000B  1283               	bcf	3,5	;RP0=0, select bank0
 10230  000C  1303               	bcf	3,6	;RP1=0, select bank0
 10231  000D  087F               	movf	btemp+1,w
 10232  000E  00FA               	movwf	??_ISR+4
 10233  000F  160A  118A  2F9C   	ljmp	_ISR
 10234                           
 10235                           	psect	text61
 10236  0CEE                     __ptext61:	
 10237 ;; *************** function _SCH_Update_Task *****************
 10238 ;; Defined at:
 10239 ;;		line 45 in file "SCH_PIC16F877A.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;		None
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;  Index           1    5[COMMON] unsigned char 
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10253 ;;      Params:         0       0       0       0       0
 10254 ;;      Locals:         1       0       0       0       0
 10255 ;;      Temps:          2       0       0       0       0
 10256 ;;      Totals:         3       0       0       0       0
 10257 ;;Total ram usage:        3 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    1
 10260 ;; This function calls:
 10261 ;;		i1___bmul
 10262 ;; This function is called by:
 10263 ;;		_ISR
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           
 10268                           ;psect for function _SCH_Update_Task
 10269  0CEE                     _SCH_Update_Task:
 10270  0CEE                     i1l3400:	
 10271                           ;incstack = 0
 10272                           ; Regs used in _SCH_Update_Task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10273                           
 10274                           
 10275                           ;SCH_PIC16F877A.c: 47:     uint8 Index;;SCH_PIC16F877A.c: 50:     TMR1 = (65536-((800000
      +                          0UL)/(4*1))*((5)/1000.0)) - (65536-((8000000UL)/(4*1))*(0.25f/1000.0));
 10276  0CEE  30DA               	movlw	218
 10277  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
 10278  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
 10279  0CF1  008F               	movwf	15	;volatile
 10280  0CF2  30E4               	movlw	228
 10281  0CF3  008E               	movwf	14	;volatile
 10282  0CF4                     i1l3402:
 10283                           
 10284                           ;SCH_PIC16F877A.c: 54:     (PIR1 &= ~(1<<0));
 10285  0CF4  30FE               	movlw	254
 10286  0CF5  00FF               	movwf	btemp+1
 10287  0CF6  087F               	movf	btemp+1,w
 10288  0CF7  058C               	andwf	12,f	;volatile
 10289  0CF8                     i1l3404:
 10290                           
 10291                           ;SCH_PIC16F877A.c: 57:     for (Index = 0; Index < (3); Index++)
 10292  0CF8  01F5               	clrf	SCH_Update_Task@Index
 10293  0CF9                     i1l3410:
 10294                           
 10295                           ;SCH_PIC16F877A.c: 58:     {;SCH_PIC16F877A.c: 60:         if (SCH_tasks[Index].ptr_Task
      +                          )
 10296  0CF9  3006               	movlw	6
 10297  0CFA  00FF               	movwf	btemp+1
 10298  0CFB  087F               	movf	btemp+1,w
 10299  0CFC  00F0               	movwf	i1___bmul@multiplicand
 10300  0CFD  0875               	movf	SCH_Update_Task@Index,w
 10301  0CFE  160A  118A  26B5  120A  158A  	fcall	i1___bmul
 10302  0D03  3EA0               	addlw	(low (_SCH_tasks| 0))& (0+255)
 10303  0D04  0084               	movwf	4
 10304  0D05  1383               	bcf	3,7	;select IRP bank1
 10305  0D06  0800               	movf	0,w
 10306  0D07  1903               	btfsc	3,2
 10307  0D08  2D0A               	goto	u375_21
 10308  0D09  2D0B               	goto	u375_20
 10309  0D0A                     u375_21:
 10310  0D0A  2D86               	goto	i1l3420
 10311  0D0B                     u375_20:
 10312  0D0B                     i1l3412:
 10313                           
 10314                           ;SCH_PIC16F877A.c: 61:         {;SCH_PIC16F877A.c: 62:             if (SCH_tasks[Index].
      +                          Delay == 0)
 10315  0D0B  3006               	movlw	6
 10316  0D0C  00FF               	movwf	btemp+1
 10317  0D0D  087F               	movf	btemp+1,w
 10318  0D0E  00F0               	movwf	i1___bmul@multiplicand
 10319  0D0F  0875               	movf	SCH_Update_Task@Index,w
 10320  0D10  160A  118A  26B5  120A  158A  	fcall	i1___bmul
 10321  0D15  3EA1               	addlw	(low ((_SCH_tasks| 0+1)))& (0+255)
 10322  0D16  0084               	movwf	4
 10323  0D17  1383               	bcf	3,7	;select IRP bank1
 10324  0D18  0800               	movf	0,w
 10325  0D19  00F3               	movwf	??_SCH_Update_Task
 10326  0D1A  0A84               	incf	4,f
 10327  0D1B  0800               	movf	0,w
 10328  0D1C  00F4               	movwf	??_SCH_Update_Task+1
 10329  0D1D  0873               	movf	??_SCH_Update_Task,w
 10330  0D1E  0474               	iorwf	??_SCH_Update_Task+1,w
 10331  0D1F  1D03               	btfss	3,2
 10332  0D20  2D22               	goto	u376_21
 10333  0D21  2D23               	goto	u376_20
 10334  0D22                     u376_21:
 10335  0D22  2D71               	goto	i1l3418
 10336  0D23                     u376_20:
 10337  0D23                     i1l3414:
 10338                           
 10339                           ;SCH_PIC16F877A.c: 63:             {;SCH_PIC16F877A.c: 65:                 SCH_tasks[Ind
      +                          ex].Run++;
 10340  0D23  3006               	movlw	6
 10341  0D24  00FF               	movwf	btemp+1
 10342  0D25  087F               	movf	btemp+1,w
 10343  0D26  00F0               	movwf	i1___bmul@multiplicand
 10344  0D27  0875               	movf	SCH_Update_Task@Index,w
 10345  0D28  160A  118A  26B5  120A  158A  	fcall	i1___bmul
 10346  0D2D  3EA5               	addlw	(low ((_SCH_tasks| 0+5)))& (0+255)
 10347  0D2E  0084               	movwf	4
 10348  0D2F  3001               	movlw	1
 10349  0D30  00FF               	movwf	btemp+1
 10350  0D31  087F               	movf	btemp+1,w
 10351  0D32  1383               	bcf	3,7	;select IRP bank1
 10352  0D33  0780               	addwf	0,f
 10353                           
 10354                           ;SCH_PIC16F877A.c: 66:                 if (SCH_tasks[Index].Period)
 10355  0D34  3006               	movlw	6
 10356  0D35  00FF               	movwf	btemp+1
 10357  0D36  087F               	movf	btemp+1,w
 10358  0D37  00F0               	movwf	i1___bmul@multiplicand
 10359  0D38  0875               	movf	SCH_Update_Task@Index,w
 10360  0D39  160A  118A  26B5  120A  158A  	fcall	i1___bmul
 10361  0D3E  3EA3               	addlw	(low ((_SCH_tasks| 0+3)))& (0+255)
 10362  0D3F  0084               	movwf	4
 10363  0D40  1383               	bcf	3,7	;select IRP bank1
 10364  0D41  0800               	movf	0,w
 10365  0D42  00F3               	movwf	??_SCH_Update_Task
 10366  0D43  0A84               	incf	4,f
 10367  0D44  0800               	movf	0,w
 10368  0D45  00F4               	movwf	??_SCH_Update_Task+1
 10369  0D46  0873               	movf	??_SCH_Update_Task,w
 10370  0D47  0474               	iorwf	??_SCH_Update_Task+1,w
 10371  0D48  1903               	btfsc	3,2
 10372  0D49  2D4B               	goto	u377_21
 10373  0D4A  2D4C               	goto	u377_20
 10374  0D4B                     u377_21:
 10375  0D4B  2D86               	goto	i1l3420
 10376  0D4C                     u377_20:
 10377  0D4C                     i1l3416:
 10378                           
 10379                           ;SCH_PIC16F877A.c: 68:                     SCH_tasks[Index].Delay = SCH_tasks[Index].Per
      +                          iod;
 10380  0D4C  3006               	movlw	6
 10381  0D4D  00FF               	movwf	btemp+1
 10382  0D4E  087F               	movf	btemp+1,w
 10383  0D4F  00F0               	movwf	i1___bmul@multiplicand
 10384  0D50  0875               	movf	SCH_Update_Task@Index,w
 10385  0D51  160A  118A  26B5  120A  158A  	fcall	i1___bmul
 10386  0D56  3EA3               	addlw	(low ((_SCH_tasks| 0+3)))& (0+255)
 10387  0D57  0084               	movwf	4
 10388  0D58  1383               	bcf	3,7	;select IRP bank1
 10389  0D59  0800               	movf	0,w
 10390  0D5A  00F3               	movwf	??_SCH_Update_Task
 10391  0D5B  0A84               	incf	4,f
 10392  0D5C  0800               	movf	0,w
 10393  0D5D  00F4               	movwf	??_SCH_Update_Task+1
 10394  0D5E  3006               	movlw	6
 10395  0D5F  00FF               	movwf	btemp+1
 10396  0D60  087F               	movf	btemp+1,w
 10397  0D61  00F0               	movwf	i1___bmul@multiplicand
 10398  0D62  0875               	movf	SCH_Update_Task@Index,w
 10399  0D63  160A  118A  26B5  120A  158A  	fcall	i1___bmul
 10400  0D68  3EA1               	addlw	(low ((_SCH_tasks| 0+1)))& (0+255)
 10401  0D69  0084               	movwf	4
 10402  0D6A  0873               	movf	??_SCH_Update_Task,w
 10403  0D6B  1383               	bcf	3,7	;select IRP bank1
 10404  0D6C  0080               	movwf	0
 10405  0D6D  0A84               	incf	4,f
 10406  0D6E  0874               	movf	??_SCH_Update_Task+1,w
 10407  0D6F  0080               	movwf	0
 10408  0D70  2D86               	goto	i1l3420
 10409  0D71                     i1l3418:
 10410                           
 10411                           ;SCH_PIC16F877A.c: 72:                 SCH_tasks[Index].Delay--;
 10412  0D71  3006               	movlw	6
 10413  0D72  00FF               	movwf	btemp+1
 10414  0D73  087F               	movf	btemp+1,w
 10415  0D74  00F0               	movwf	i1___bmul@multiplicand
 10416  0D75  0875               	movf	SCH_Update_Task@Index,w
 10417  0D76  160A  118A  26B5  120A  158A  	fcall	i1___bmul
 10418  0D7B  3EA1               	addlw	(low ((_SCH_tasks| 0+1)))& (0+255)
 10419  0D7C  0084               	movwf	4
 10420  0D7D  3001               	movlw	1
 10421  0D7E  1383               	bcf	3,7	;select IRP bank1
 10422  0D7F  0280               	subwf	0,f
 10423  0D80  0F84               	incfsz	4,f
 10424  0D81  3000               	movlw	0
 10425  0D82  1C03               	skipc
 10426  0D83  0380               	decf	0,f
 10427  0D84  0280               	subwf	0,f
 10428  0D85  0384               	decf	4,f
 10429  0D86                     i1l3420:
 10430                           
 10431                           ;SCH_PIC16F877A.c: 74:     }
 10432  0D86  3001               	movlw	1
 10433  0D87  00FF               	movwf	btemp+1
 10434  0D88  087F               	movf	btemp+1,w
 10435  0D89  07F5               	addwf	SCH_Update_Task@Index,f
 10436  0D8A                     i1l3422:
 10437  0D8A  3003               	movlw	3
 10438  0D8B  0275               	subwf	SCH_Update_Task@Index,w
 10439  0D8C  1C03               	skipc
 10440  0D8D  2D8F               	goto	u378_21
 10441  0D8E  2D90               	goto	u378_20
 10442  0D8F                     u378_21:
 10443  0D8F  2CF9               	goto	i1l3410
 10444  0D90                     u378_20:
 10445  0D90                     i1l323:
 10446  0D90  0008               	return
 10447  0D91                     __end_of_SCH_Update_Task:
 10448                           
 10449                           	psect	text62
 10450  16B5                     __ptext62:	
 10451 ;; *************** function i1___bmul *****************
 10452 ;; Defined at:
 10453 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  multiplier      1    wreg     unsigned char 
 10456 ;;  multiplicand    1    0[COMMON] unsigned char 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;  multiplier      1    2[COMMON] unsigned char 
 10459 ;;  product         1    1[COMMON] unsigned char 
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1    wreg      unsigned char 
 10462 ;; Registers used:
 10463 ;;		wreg, status,2, status,0, btemp+1
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10469 ;;      Params:         1       0       0       0       0
 10470 ;;      Locals:         2       0       0       0       0
 10471 ;;      Temps:          0       0       0       0       0
 10472 ;;      Totals:         3       0       0       0       0
 10473 ;;Total ram usage:        3 bytes
 10474 ;; Hardware stack levels used:    1
 10475 ;; This function calls:
 10476 ;;		Nothing
 10477 ;; This function is called by:
 10478 ;;		_SCH_Update_Task
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482                           
 10483                           ;psect for function i1___bmul
 10484  16B5                     i1___bmul:
 10485                           
 10486                           ;incstack = 0
 10487                           ; Regs used in i1___bmul: [wreg+status,2+status,0+btemp+1]
 10488                           ;i1___bmul@multiplier stored from wreg
 10489  16B5  00F2               	movwf	i1___bmul@multiplier
 10490  16B6                     i1l3306:
 10491  16B6  01F1               	clrf	i1___bmul@product
 10492  16B7                     i1l3308:
 10493  16B7  1C72               	btfss	i1___bmul@multiplier,0
 10494  16B8  2EBA               	goto	u365_21
 10495  16B9  2EBB               	goto	u365_20
 10496  16BA                     u365_21:
 10497  16BA  2EBF               	goto	i1l3312
 10498  16BB                     u365_20:
 10499  16BB                     i1l3310:
 10500  16BB  0870               	movf	i1___bmul@multiplicand,w
 10501  16BC  00FF               	movwf	btemp+1
 10502  16BD  087F               	movf	btemp+1,w
 10503  16BE  07F1               	addwf	i1___bmul@product,f
 10504  16BF                     i1l3312:
 10505  16BF  1003               	clrc
 10506  16C0  0DF0               	rlf	i1___bmul@multiplicand,f
 10507  16C1                     i1l3314:
 10508  16C1  1003               	clrc
 10509  16C2  0CF2               	rrf	i1___bmul@multiplier,f
 10510  16C3                     i1l3316:
 10511  16C3  0872               	movf	i1___bmul@multiplier,w
 10512  16C4  1D03               	btfss	3,2
 10513  16C5  2EC7               	goto	u366_21
 10514  16C6  2EC8               	goto	u366_20
 10515  16C7                     u366_21:
 10516  16C7  2EB7               	goto	i1l3308
 10517  16C8                     u366_20:
 10518  16C8                     i1l3318:
 10519  16C8  0871               	movf	i1___bmul@product,w
 10520  16C9                     i1l694:
 10521  16C9  0008               	return
 10522  16CA                     __end_ofi1___bmul:
 10523  0006                     
 10524                           	psect	functab
 10525  003F                     __pfunctab:
 10526  003F                     __fptable:
 10527  003F                     fptable:
 10528  003F  00FF               	movwf	(btemp+1)& (0+127)
 10529  0040  3000               	movlw	high fptable
 10530  0041  008A               	movwf	10
 10531  0042  087F               	movf	(btemp+1)& (0+127),w
 10532  0043  0782               	addwf	2,f
 10533  0044                     fpbase:
 10534  0044  2844               	goto	fpbase	; Call via a null pointer and you will get stuck here.
 10535  0045                     fp__Temp_Sens_Task:
 10536  0045  120A  158A  2EFE   	ljmp	_Temp_Sens_Task
 10537  0048                     fp__SYSTEM_STATE_UPDATE_TASK:
 10538  0048  120A  118A  2EFF   	ljmp	_SYSTEM_STATE_UPDATE_TASK
 10539  004B                     fp__DISPLAY_TASK:
 10540  004B  120A  158A  2940   	ljmp	_DISPLAY_TASK
 10541  004E                     __end_of__fptable:
 10542  007E                     btemp	set	126	;btemp
 10543  007E                     wtemp0	set	126
 10544                           
 10545                           	psect	config
 10546                           
 10547                           ;Config register CONFIG @ 0x2007
 10548                           ;	Oscillator Selection bits
 10549                           ;	FOSC = EXTRC, RC oscillator
 10550                           ;	Watchdog Timer Enable bit
 10551                           ;	WDTE = OFF, WDT disabled
 10552                           ;	Power-up Timer Enable bit
 10553                           ;	PWRTE = OFF, PWRT disabled
 10554                           ;	Brown-out Reset Enable bit
 10555                           ;	BOREN = ON, BOR enabled
 10556                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10557                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
 10558                           ;	Data EEPROM Memory Code Protection bit
 10559                           ;	CPD = OFF, Data EEPROM code protection off
 10560                           ;	Flash Program Memory Write Enable bits
 10561                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10562                           ;	In-Circuit Debugger Mode bit
 10563                           ;	DEBUG = 0x1, unprogrammed default
 10564                           ;	Flash Program Memory Code Protection bit
 10565                           ;	CP = OFF, Code protection off
 10566  2007                     	org	8199
 10567  2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    20
    Data        4
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     80      80
    BANK1            80     20      74
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Calc_avg_reading@avg_arr	PTR unsigned char  size(1) Largest target is 10
		 -> readings_arr(BANK1[10]), 

    SCH_Add_Task@ptr_fun	PTR FTN()void  size(1) Largest target is 1
		 -> DISPLAY_TASK(), Temp_Sens_Task(), SYSTEM_STATE_UPDATE_TASK(), 

    S216Tasks$ptr_Task	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), DISPLAY_TASK(), Temp_Sens_Task(), SYSTEM_STATE_UPDATE_TASK(), 

    SCH_tasks.ptr_Task	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), DISPLAY_TASK(), Temp_Sens_Task(), SYSTEM_STATE_UPDATE_TASK(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_SCH_Update_Task
    _SCH_Update_Task->i1___bmul

Critical Paths under _main in BANK0

    _main->_SCH_Dispatch_Tasks
    _SCH_init_TMR1->_SCH_Delete_Task
    _LM35_Read_Temp->___fltol
    ___xxtofl->_ADC_get_Sample
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _Calc_avg_reading->___lwdiv
    _SYSTEM_STATE_UPDATE_TASK->_EEPROM_Write
    _EEPROM_Write->_I2C_Master_Write
    _SCH_Delete_Task->___bmul
    _DISPLAY_TASK->_SSD_print_2dig
    _SSD_print_2dig->___awdiv
    _SCH_Add_Task->___bmul
    _EEPROM_Read->_I2C_Master_Write

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SCH_Dispatch_Tasks
    _SCH_Dispatch_Tasks->_Temp_Sens_Task
    _Temp_Sens_Task->_LM35_Read_Temp
    _LM35_Read_Temp->___fltol

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10798
                                             16 BANK1      4     4      0
                        _EEPROM_Read
                       _EEPROM_Write
                         _GOTO_SLEEP
                       _SCH_Add_Task
                 _SCH_Dispatch_Tasks
                          _SCH_Start
                      _SCH_init_TMR1
                        _SYSTEM_init
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_init                                          0     0      0       0
                  _DISPLAY_TASK_init
                     _EXT_INT_RB0_EN
                   _EXT_INT_RB0_init
                 _SYSTEM_UPDATE_init
                _Temp_Sens_Task_init
 ---------------------------------------------------------------------------------
 (2) _Temp_Sens_Task_init                                  0     0      0       0
                           _LED_init
                          _LM35_init
                        _cooler_init
                        _heater_init
 ---------------------------------------------------------------------------------
 (3) _heater_init                                          0     0      0       0
                         _heater_off
 ---------------------------------------------------------------------------------
 (3) _cooler_init                                          0     0      0       0
                         _cooler_off
 ---------------------------------------------------------------------------------
 (3) _LM35_init                                            0     0      0       0
                           _ADC_init
 ---------------------------------------------------------------------------------
 (4) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_init                                             0     0      0       0
                            _LED_off
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_UPDATE_init                                   0     0      0       0
                    _I2C_Master_Init
                      _keyboard_init
 ---------------------------------------------------------------------------------
 (3) _keyboard_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_RB0_init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_RB0_EN                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DISPLAY_TASK_init                                    0     0      0       0
                           _SSD_init
 ---------------------------------------------------------------------------------
 (3) _SSD_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCH_init_TMR1                                        1     1      0     683
                                              4 BANK0      1     1      0
                    _SCH_Delete_Task
                   _TMR1_OVFINT_init
                          _TMR1_init
                         _TMR1_start
 ---------------------------------------------------------------------------------
 (2) _TMR1_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_OVFINT_init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCH_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCH_Dispatch_Tasks                                   3     3      0    7989
                                             79 BANK0      1     1      0
                                             14 BANK1      2     2      0
                   Absolute function *
                       _DISPLAY_TASK *
                    _SCH_Delete_Task
           _SYSTEM_STATE_UPDATE_TASK *
                     _Temp_Sens_Task *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _Temp_Sens_Task                                       2     2      0    5051
                                             12 BANK1      2     2      0
                   _Calc_avg_reading
                            _LED_off
                             _LED_on
                            _LED_tog
                     _LM35_Read_Temp
                         _cooler_off
                          _cooler_on
                         _heater_off
                          _heater_on
 ---------------------------------------------------------------------------------
 (3) _heater_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _heater_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cooler_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _cooler_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LM35_Read_Temp                                       8     8      0    4590
                                              4 BANK1      8     8      0
                     _ADC_get_Sample
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              7 BANK0     14    10      4
                     _ADC_get_Sample (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             73 BANK0      6     2      4
                                              0 BANK1      4     4      0
                     _ADC_get_Sample (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    2569
                                             21 BANK0     26    18      8
                     _ADC_get_Sample (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1273
                                             47 BANK0     26    18      8
                     _ADC_get_Sample (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _ADC_get_Sample                                       7     5      2      22
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (3) _LED_tog                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LED_off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Calc_avg_reading                                     7     7      0     461
                                              7 BANK0      7     7      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_STATE_UPDATE_TASK                             2     2      0     696
                                              5 BANK0      2     2      0
                 _DOWN_switch_update
                       _EEPROM_Write
                   _UP_switch_update
 ---------------------------------------------------------------------------------
 (3) _UP_switch_update                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Write                                         3     0      3     696
                                              2 BANK0      3     0      3
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _DOWN_switch_update                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SCH_Delete_Task                                      1     1      0     615
                                              3 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _DISPLAY_TASK                                         2     2      0     966
                                             11 BANK0      2     2      0
                     _SSD_print_2dig
                       _SSD_turn_off
 ---------------------------------------------------------------------------------
 (3) _SSD_turn_off                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SSD_print_2dig                                       3     3      0     966
                                              8 BANK0      3     3      0
                         _SSD_update
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _SSD_update                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCH_Add_Task                                         6     2      4    1189
                                              3 BANK0      6     2      4
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     505
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _GOTO_SLEEP                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          3     1      2     241
                                              2 BANK0      3     1      2
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     2     2      0      22
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0     401
                                              6 COMMON     5     5      0
                    _SCH_Update_Task
 ---------------------------------------------------------------------------------
 (7) _SCH_Update_Task                                      3     3      0     401
                                              3 COMMON     3     3      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (8) i1___bmul                                             3     2      1     201
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_NACK
       _I2C_Master_Wait
     _I2C_Read_Byte
       _I2C_Master_Wait
   _EEPROM_Write
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _GOTO_SLEEP
   _SCH_Add_Task
     ___bmul
   _SCH_Dispatch_Tasks
     Absolute function(Fake) *
     _DISPLAY_TASK *
       _SSD_print_2dig
         _SSD_update
         ___awdiv
         ___awmod
       _SSD_turn_off
     _SCH_Delete_Task *
       ___bmul
     _SYSTEM_STATE_UPDATE_TASK *
       _DOWN_switch_update
       _EEPROM_Write
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       _UP_switch_update
     _Temp_Sens_Task *
       _Calc_avg_reading
         ___lwdiv
       _LED_off
       _LED_on
       _LED_tog
       _LM35_Read_Temp
         _ADC_get_Sample
         ___fldiv
           _ADC_get_Sample (ARG)
           ___flmul (ARG)
             _ADC_get_Sample (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_get_Sample (ARG)
           ___xxtofl (ARG)
             _ADC_get_Sample (ARG)
         ___flmul
           _ADC_get_Sample (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_get_Sample (ARG)
         ___fltol
           _ADC_get_Sample (ARG)
           ___fldiv (ARG)
             _ADC_get_Sample (ARG)
             ___flmul (ARG)
               _ADC_get_Sample (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _ADC_get_Sample (ARG)
             ___xxtofl (ARG)
               _ADC_get_Sample (ARG)
           ___flmul (ARG)
             _ADC_get_Sample (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _ADC_get_Sample (ARG)
           ___xxtofl (ARG)
             _ADC_get_Sample (ARG)
         ___xxtofl
           _ADC_get_Sample (ARG)
       _cooler_off
       _cooler_on
       _heater_off
       _heater_on
     ___bmul *
   _SCH_Start
   _SCH_init_TMR1
     _SCH_Delete_Task
       ___bmul
     _TMR1_OVFINT_init
     _TMR1_init
     _TMR1_start
   _SYSTEM_init
     _DISPLAY_TASK_init
       _SSD_init
     _EXT_INT_RB0_EN
     _EXT_INT_RB0_init
     _SYSTEM_UPDATE_init
       _I2C_Master_Init
       _keyboard_init
     _Temp_Sens_Task_init
       _LED_init
         _LED_off
       _LM35_init
         _ADC_init
       _cooler_init
         _cooler_off
       _heater_init
         _heater_off

 _ISR (ROOT)
   _SCH_Update_Task
     i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     14      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A8      12        0.0%
ABS                  0      0      A8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jul 19 19:44:27 2020

                     ___fldiv@aexp 0068                       ___fldiv@bexp 0067  
                  _SCH_Delete_Task 0A37                                  pc 0002  
                     ___fldiv@sign 0060                     ___bmul@product 0021  
                               l52 05B9                                 l54 0601  
                               l56 064A                                 l58 0691  
                               l91 15CF                                 l67 1726  
                               l85 1662                                 l94 15D6  
                               l88 15AC                       ___awdiv@sign 0025  
                               fsr 0004                       ?_cooler_init 0070  
              __Umul8_16@word_mpld 0026                                l111 15DD  
                              l105 166E                                l122 167A  
                              l211 16B4                                l108 15B0  
                              l125 15B4                                l214 0B8F  
                              l215 0BC8                                l151 07FF  
                              l128 15E4                                l400 0FEC  
                              l232 1606                                l161 08B0  
                              l250 0811                                l314 17FF  
                              l155 07F2                                l219 0BDF  
                              l235 0E41                                l411 0FFF  
                              l332 0C59                                l180 15EC  
                              l253 1656                                l190 179B  
                              l502 098C                                l342 15A8  
                              l416 087A                                l256 15B8  
                              l346 0A96                                l266 1610  
                              l523 167B                                l187 1777  
                              l195 09DB                                l339 0B6B  
                              l419 16DE                                l532 163E  
                              l189 177D                                l269 15C8  
                              l526 1687                                l550 1741  
                              l198 161B                                l470 1626  
                              l535 164A                                l544 1694  
                              l553 16E7                                l289 15FD  
                              l529 16A1                                l538 1632  
                              l547 1733                                l555 16EC  
                              l467 07BC                                l491 15C2  
                              l556 16F5                                l549 1737  
                              l821 0AFF                                l573 081D  
                              l582 093F                                l576 0845  
                              l834 0A36                                l579 0902  
                              l940 08F6                                l861 0CD8  
                              l694 170C                                l854 0CED  
                              l864 0CED                                _ISR 179C  
                       _SSD_update 176B                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0025  
                      ?_GOTO_SLEEP 0070                       ___flmul@aexp 0047  
                     ___flmul@bexp 0048                       ___flmul@sign 0042  
                     ___flmul@temp 004D                       ___flmul@prod 0049  
                ?_Calc_avg_reading 0070                _Temp_Sens_Task_init 16CA  
                             ?_ISR 0070                       ___fltol@exp1 006E  
                             l1101 0E66                               l1103 0EFD  
                             l1041 057F                               l1033 04FD  
                             l1017 040B                               l1114 0EC7  
                             l1019 058B                               l1115 0ED3  
                             l1063 031A                               l3000 089F  
                             l1057 03AE                               l3002 08A3  
                             l3010 08AC                               l3020 1611  
                             l1076 1758                               l3100 1651  
                             l3012 15E5                               l1069 03A2  
                             l3110 0A4C                               l3006 08AA  
                             l1078 176A                               l3102 1654  
                             l3014 15E8                               l3022 15FE  
                             l3016 0990                               l3112 0A52  
                             l3040 0865                               l3120 0EFE  
                             l3200 071B                               l3104 1655  
                             l2400 16B1                               l3024 1601  
                  __end_of_LED_off 15D0                               l3018 0996  
                             l3114 0A62                               l3034 084C  
                             l2410 0B90                               l2402 0B6F  
                             l3026 0D91                               l3130 0F23  
                             l3122 0EFF                               l3210 0735  
                             l3202 071D                               l3106 15B5  
                             l3050 16A0                               l3042 1695  
                             l2420 1638                               l3300 16ED  
                             l3060 1704                               l3052 16F9  
                             l2500 09F3                               l3116 0A74  
                             l3108 0A3A                               l3036 085B  
                             l3028 0849                               l2412 0BCB  
                             l2404 0B7C                               l3140 0F34  
                             l3132 0F24                               l3124 0F0A  
                             l3220 0748                               l3204 0722  
                             l3212 0737                               l3044 1699  
                             l2350 167B                               l2430 1627  
                             l2422 163B                               l3302 16F2  
                             l3062 1706                               l3054 16FA  
                             l2510 0A0B                               l2502 09F9  
                             l3118 0A86                               l3038 085F  
                             l2414 0BD7                               l2406 0B86  
                             l3150 0F73                               l3142 0F43  
                             l3134 0F2A                               l3126 0F0F  
                             l3230 075E                               l3222 074E  
                             l3214 073C                               l3206 0727  
                             l3046 169C                               l3070 1621  
               __size_of_LM35_init 0009                               l2352 1681  
                             l2432 162C                               l2424 163F  
                             l2440 1738                               l3064 170B  
                             l3056 16FE                               l2520 0A2D  
                             l2512 0A15                               l2504 09FC  
                             l2600 03C6                               l2360 1752  
                             l3152 0F78                               l3144 0F62  
                             l3136 0F2E                               l3128 0F19  
                             l3240 0781                               l3232 0763  
                             l3224 0750                               l3216 0742  
                             l3208 0733                               l3080 160A  
                             l3048 169F                               l3072 16CA  
                             l2434 162F                               l2418 1633  
                             l2426 1644                               l3058 1702  
                             l2450 0AA3                               l2522 0A32  
                             l2514 0A1B                               l2506 0A03  
                             l2610 03DE                               l2602 03CB  
                             l2362 1761                               l2354 1745  
                             l2370 15D7                               l3162 0FAA  
                             l3154 0F84                               l3146 0F67  
                             l3234 0767                               l3226 0751  
                             l3218 0743                               l3250 0791  
                             l3090 0801                               l3330 17D1  
                             l3082 160E                               l3074 16D9  
                             l3322 170D                               l2428 1647  
                             l2436 172A                               l2380 177E  
                             l2460 0AB4                               l2452 0AA5  
                             l2444 0A97                               l2516 0A22  
                             l2508 0A07                               l2700 0502  
                             l2620 03F3                               l2612 03E3  
                             l2604 03D3                               l2364 1766  
                             l2356 1747                               l2540 0CA0  
                             l2532 0C70                               l2372 15DE  
                             l3164 0FAF                               l3156 0F89  
                             l3148 0F6E                               l3244 0789  
                             l3236 077A                               l3228 0757  
                             l3252 07A8                               l3092 0805  
                             l3340 17EB                               l3332 17D7  
                             l3324 17CE                               l3076 15BD  
                             l3084 160F                               l3068 161C  
                             l2438 172F                               l3350 08FD  
                             l2374 176B                               l2470 0ACC  
                             l2462 0ABA                               l2454 0AA9  
                             l2446 0A9A                               l2518 0A28  
                             l2702 0507                               l2710 0538  
                             l2630 0413                               l2622 03F8  
                             l2614 03E9                               l2606 03D4  
                             l2358 174E                               l2550 0CB5  
                             l2542 0CA4                               l2534 0C95  
                             l2526 0C5A                               l3166 0FB4  
                             l3158 0F8C                               l3174 0FD9  
                             l3238 077B                               l3190 06FF  
                             l3270 094A                               l3094 0809  
                             l3342 17F0                               l3334 17DD  
                             l3086 15C3                               l3078 1607  
                             l3430 05A6                               l3360 093C  
                             l3352 090D                               l2376 1775  
                             l2384 1783                               l2472 0ADD  
                             l2464 0ABD                               l2480 0AF1  
                             l2456 0AAE                               l2448 0A9E  
                             l2368 15C9                               l2720 056E  
                             l2712 0545                               l2704 0515  
                             l2640 0431                               l2632 041F  
                             l2624 0400                               l2616 03ED  
                             l2608 03D6                               l2800 01BB  
                             l2560 0CDD                               l2552 0CBE  
                             l2536 0C96                               l2528 0C67  
                             l3168 0FB9                               l3176 0FED  
                             l3248 078E                               l3192 070A  
                             l3280 096D                               l3272 0956  
                             l3096 080D                               l3344 17F4  
                             l3336 17E3                               l3088 15C7  
                             l2392 16A2                               l3440 05F8  
                             l3424 058C                               l3290 1688  
                             l3354 0928                               l3370 0BFB  
                             l2386 1795                               l2378 1778  
                             l2482 0AF6                               l2474 0AE3  
                             l2466 0AC4                               l2458 0AB2  
                             l2490 09DF                               l2570 08BE  
                             l2722 056F                               l2714 0553  
                             l2706 0519                               l2650 045C  
                             l2634 0423                               l2626 0401  
                             l2618 03EE                               l2810 024B  
                             l2802 01D8                               l2562 0CE2  
                             l2538 0C9E                               l3194 070F  
                             l3282 0972                               l3274 0960  
                             l3266 0940                               l3098 164B  
                             l3346 17FA                               l3338 17E6  
                             l2394 16A8                               l3450 0641  
                             l3434 05BA                               l3426 0591  
                             l3292 168C                               l3356 0932  
                             l3348 08F7                               l3372 0C03  
                             l3364 0BE3                               l2484 0AFB  
                             l2476 0AE4                               l2468 0AC8  
                             l2492 09E3                               l2580 08E4  
                             l2572 08C5                               l2564 08B1  
                             l2724 0575                               l2716 0562  
                             l2708 0532                               l2660 0481  
                             l2652 0464                               l2644 043A  
                             l2628 0403                               l2820 02DD  
                             l2812 0278                               l2804 01F1  
                             l2740 005F                               l2548 0CAC  
                             l2900 0EA2                               l3196 0714  
                             l3276 0961                               l3268 0941  
                             l3284 0978                               l3380 15A7  
                             l2396 16AB                               l3460 0688  
                             l3444 0602                               l3436 05E0  
                             l3428 0596                               l3294 1691  
                             l3358 0937                               l3382 15F5  
                             l3374 0C0B                               l3366 0BE5  
                             l2478 0AEB                               l2494 09E8  
                             l2582 08E5                               l2574 08C9  
                             l2566 08B5                               l2726 0579  
                             l2718 0566                               l2670 04AC  
                             l2662 0482                               l2654 0466  
                             l2646 044C                               l2638 042C  
                             l2590 03AF                               l2822 02E6  
                             l2830 02FA                               l2814 029E  
                             l2806 020E                               l2750 0074  
                             l2742 0060                               l2734 004E  
                             l2558 0CC5                               l2910 0ECB  
                             l2902 0EAB                               l3198 071A  
                             l3278 0966                               l3390 0B03  
                             l2398 16AE                               l3470 06EA  
                             l3454 064B                               l3446 0628  
                             l3438 05EE                               l3296 16DF  
                             l3376 0C10                               l3368 0BE9  
                             l2496 09EA                               l2488 09DC  
                             l2584 08EC                               l2576 08CD  
                             l2568 08BB                               l2728 057B  
                             l2680 04C9                               l2656 046B  
                             l2664 048B                               l2672 04B0  
                             l2648 0454                               l2592 03B6  
                             l2832 02FE                               l2824 02EA  
                             l2816 02C6                               l2808 023B  
                             l2760 008C                               l2752 007C  
                             l2744 0065                               l2736 0055  
                             l2920 0EF5                               l2912 0ED5  
                             l2904 0EB2                               l3392 0B15  
                             l3384 0B00                               l3472 06F1  
                             l3464 0692                               l3456 0671  
                             l3448 0637                               l3298 16E4  
                             l2498 09EE                               l2578 08DE  
                             l2586 08F2                               l2690 04E1  
                             l2682 04CD                               l2674 04B6  
                             l2666 049D                               l2658 047D  
                             l2594 03BC                               l2850 034F  
                             l2842 031F                               l2834 02FF  
                             l2826 02EB                               l2818 02CF  
                             l2770 00A8                               l2762 0091  
                             l2754 0081                               l2746 006A  
                             l2738 005B                               l2914 0EEB  
                             l2906 0EBD                               l3650 0984  
                             l3394 0B57                               l2930 1657  
                             l3474 06F6                               l3466 06B8  
                             l3458 0680                               l3660 178D  
                             l2924 0812                               l2692 04E2  
                             l2684 04CE                               l2676 04BE  
                             l2668 049E                               l2596 03C0  
                             l2860 0386                               l2844 0324  
                             l2852 0355                               l2836 0303  
                             l2828 02F4                               l2780 00CB  
                             l2772 00AD                               l2764 0096  
                             l2756 0087                               l2748 0072  
                             l2916 0EF0                               l2908 0EC1  
                             l3652 079D                               l3396 0B5F  
                             l2932 165D                               l2940 1669  
                             l3468 06E5                               l2926 0818  
                             l2934 15A9                               l2694 04E6  
                             l2686 04D7                               l2678 04C0  
                             l2598 03C1                               l2870 039B  
                             l2862 0388                               l2854 0362  
                             l2846 0332                               l2838 0317  
                             l2790 0159                               l2782 00D8  
                             l2774 00B2                               l2766 009E  
                             l2758 008B                               l2918 0EF4  
                             l2942 15AD                               l3654 07B4  
                             l3398 0B65                               l2950 07F3  
                             l2928 0828                               l2936 15D0  
                             l2696 04FA                               l2688 04DD  
                             l2872 03A6                               l2864 038E  
                             l2856 036D                               l2848 0336  
                             l2792 0175                               l2784 00F5  
                             l2768 00A0                               l2880 0E4E  
                             l3656 0FE1                               l2960 07FD  
                             l2952 07F9                               l2944 166F  
                             l2970 07C7                               l2866 0396  
                             l2858 037C                               l2794 017E  
                             l2786 0111                               l2778 00BB  
                             l2890 0E7C                               l2882 0E5E  
                             l3658 0FF7                               l2962 07FE  
                             l2954 07FA                               l2938 1663  
                             l2946 1675                               l2972 07D5  
                             l2964 07BD                               l2868 039A  
                             l2796 018E                               l2788 013D  
                             l2892 0E80                               l2884 0E6E  
                             l2876 0E45                               l2948 15B1  
                             l2956 07FB                               l2990 0882  
                             l2982 07EC                               l2974 07DB  
                             l2966 07C4                               l2798 01AB  
                             l2894 0E89                               l2878 0E4A  
                             l2958 07FC                               l2976 07E1  
                  __end_of_LED_tog 15D7                               l2896 0E90  
                             l2888 0E77                               l2994 0885  
                             l2978 07E5                               l2986 07EE  
                             l2898 0E94                               l2996 0893  
                             l2988 087B                               l2998 0899  
                             u2000 1752                               u2001 1751  
                             u2100 1737                               u2020 1766  
                             u2101 1736                               u2021 1765  
                             u2030 1775                               u2110 0A9E  
                             u2031 1774                               u2111 0A9D  
                             u2015 1759                               u2200 0AF6  
                             u2120 0AA9                               u2201 0AF5  
                             u2121 0AA8                               u2130 0ABA  
                             u2210 09E3                               u2050 0B8E  
                             u3010 02EA                               u2131 0AB9  
                             u2211 09E2                               u2051 0B8D  
                             u3011 02E9                               u2220 09EE  
                             u2060 0BBC                               u3100 0362  
                             u2300 0C67                               u2221 09ED  
                             u2045 0B72                               u3101 0361  
                             u3005 02DF                               u2301 0C66  
                             u2150 0ACC                               u2230 09F9  
                             u2070 0BC8                               u3110 037C  
                             u3030 02FE                               u2310 0C8C  
                             u2151 0ACB                               u2231 09F8  
                             u2071 0BC7                               u3111 037B  
                             u3031 02FD                               u2400 08BB  
                             u3120 039A                               u3040 0303  
                             u2320 0CA4                               u2145 0ABE  
                             u2401 08BA                               u2065 0BA5  
                             u3121 0399                               u3105 035E  
                             u3041 0302                               u3025 02ED  
                             u2321 0CA3                               u2170 0ADD  
                             u2250 0A0B                               u2090 0BD7  
                             u2066 0BA8                               u3050 0317  
                             u2330 0CAB                               u3210 0EC1  
                             u3130 0E4A                               u2171 0ADC  
                             u2251 0A0A                               u2091 0BD6  
                             u2067 0BAF                               u3115 0378  
                             u3051 0316                               u2331 0CAA  
                             u2315 0C87                               u3211 0EC0  
                             u3131 0E49                               u2260 0A15  
                             u3300 07D5                               u2420 08CD  
                             u2068 0BB2                               u2500 03ED  
                             u3060 031E                               u3220 0EC7  
                             u3140 0E4E                               u2165 0ACD  
                             u2261 0A14                               u2245 09FD  
                             u3301 07D4                               u2421 08CC  
                             u2085 0BCE                               u2069 0BB9  
                             u2501 03EC                               u3061 031D  
                             u3221 0EC6                               u3205 0EB6  
                             u3141 0E4D                               u2190 0AF1  
                             u3310 07E1                               u2510 03F3  
                             u3070 0324                               u2350 0CBD  
                             u3230 0ECB                               u3150 0E6E  
                             u2191 0AF0                               u2175 0AD9  
                             u3311 07E0                               u2415 08BF  
                             u2511 03F2                               u3071 0323  
                             u2351 0CBC                               u3231 0ECA  
                             u3151 0E6D                               u2280 0A28  
                             u3400 0A4C                               u3320 0882  
                             u2440 08DE                               u2600 049D  
                             u2520 03F8                               u3080 0336  
                             u2360 0CC4                               u3240 0EE0  
                             u2185 0AE5                               u2281 0A27  
                             u2265 0A11                               u3401 0A4B  
                             u3321 0881                               u2441 08DD  
                             u2601 049C                               u2521 03F7  
                             u3081 0335                               u2361 0CC3  
                             u2345 0CAD                               u2290 0A2D  
                             u2610 04B6                               u2530 0413  
                             u3090 0345                               u3250 0EF0  
                             u3170 0E8F                               u3410 0F23  
                             u2291 0A2C                               u2275 0A1C  
                             u2435 08CE                               u2611 04B5  
                             u2531 0412                               u3251 0EEF  
                             u3171 0E8E                               u3411 0F22  
                             u3340 0893                               u2460 08F2  
                             u2700 0507                               u2620 04BE  
                             u2540 0431                               u2380 0CDD  
                             u3260 0EF4                               u3420 0F33  
                             u3500 070F                               u3341 0892  
                             u2461 08F1                               u2445 08DA  
                             u2701 0506                               u2621 04BD  
                             u2605 0499                               u2541 0430  
                             u2381 0CDC                               u3261 0EF3  
                             u3245 0EDB                               u3165 0E81  
                             u3421 0F32                               u3501 070E  
                             u3350 089F                               u3270 0828  
                             u2710 0519                               u2550 046B  
                             u2470 03C0                               u2390 0CE2  
                             u3190 0EB1                               u3510 0714  
                             u3351 089E                               u3335 088A  
                             u3271 0827                               u2455 08E6  
                             u2711 0518                               u2551 046A  
                             u2471 03BF                               u3095 0340  
                             u2391 0CE1                               u2375 0CC9  
                             u3191 0EB0                               u3511 0713  
                             _PIE1 008C                               u3360 0996  
                             u3280 07C4                               u2720 0528  
                             u2640 04CD                               u2480 03C6  
                             u2800 0091                               u3440 0F62  
                             u3520 0722                               u3600 095C  
                             u3361 0995                               u3281 07C3  
                             u2641 04CC                               u2481 03C5  
                             u2801 0090                               u3185 0EA3  
                             u3441 0F61                               u3521 0721  
                             u3601 095A                               u3370 0865  
                             u2730 0545                               u2490 03CB  
                             u2810 0096                               u3450 0F84  
                             u3530 0727                               u3610 095D  
                             u3371 0864                               u2731 0544  
                             u2635 04C2                               u2491 03CA  
                             u2811 0095                               u3451 0F83  
                             u3531 0726                               u3380 16FE  
                             u3700 0C03                               u2740 0562  
                             u2660 04E1                               u2580 0481  
                             u2820 00AD                               u3540 0733  
                             u3620 0966                               u3381 16FD  
                             u3701 0C02                               u2741 0561  
                             u2725 0523                               u2661 04E0  
                             u2581 0480                               u2565 046D  
                             u2901 01CA                               u2821 00AC  
                             u3445 0F5E                               u3541 0732  
                             u3621 0965                               u3390 170B  
                             u3710 0C0B                               u2750 0579  
                             u2670 04E6                               u2902 01D1  
                             u2830 00B2                               u3470 0FA9  
                             u3550 073C                               u3630 0972  
                             u3391 170A                               u3711 0C0A  
                             u3295 07CC                               u2751 0578  
                             u2735 0541                               u2671 04E5  
                             u2655 04D0                               u2575 0476  
                             u2903 01D8                               u2831 00B1  
                             u3471 0FA8                               u3551 073B  
                             u3631 0971                               u3640 16EC  
                             u2680 04FA                               u2760 005F  
                             u3560 0748                               u3720 0B15  
                             u3800 05B8                 ??_Calc_avg_reading 0027  
                             u3641 16EB                               u2745 055E  
                             u2681 04F9                               u2921 0200  
                             u2841 0103                               u2761 005E  
                             u3561 0747                               u3721 0B14  
                             u3801 05B7                               u2690 0501  
                             u2922 0207                               u2842 010A  
                             u2770 0065                               u3490 0FD8  
                             u3570 075E                               u3730 0B57  
                             u3810 05D8                               u2691 0500  
                             u2595 0484                               u2931 022D  
                             u2923 020E                               u2915 01DA  
                             u2851 011F                               u2843 0111  
                             u2771 0064                               u3491 0FD7  
                             u3475 0FA5                               u3571 075D  
                             u3731 0B56                               u1980 1681  
                             u2932 0234                               u2852 0126  
                             u2780 006A                               u3580 0788  
                             u3740 0B6B                               u3900 06B0  
                             u3820 05E0                               u1981 1680  
                             u2941 025A                               u2933 023B  
                             u2861 014B                               u2853 012D  
                             u2781 0069                               u3581 0787  
                             u3741 0B6A                               u3821 05DF  
                             u1990 1687                               u2950 0284  
                             u2942 0261                               u2862 0152  
                             u2790 008B                               u3590 0956  
                             u3670 17E3                               u3910 06B8  
                             u3830 0600                               u1991 1686  
                             u2943 0268                               u2871 0167  
                             u2863 0159                               u2791 008A  
                             u3495 0FD4                               u3591 0955  
                             u3671 17E2                               u3911 06B7  
                             u3831 05FF                               u3815 05CB  
                             u3680 090D                               u2872 016E  
                             u3920 06F1                               u3840 0620  
                             u3816 05CC                               u3681 090C  
                             u2961 0290                               u2873 0175  
                             u3921 06F0                               u3905 06A3  
                             u3817 05D1                               u3690 0BFB  
                             u2970 02AC                               u2962 0297  
                             u3906 06A4                               u3850 0628  
                             u3818 05D2                               u3691 0BFA  
                             u2963 029E                               u2955 027F  
                             u2891 019D                               u3907 06A9  
                             u3851 0627                               u3819 05D7  
                             u2892 01A4                               u3908 06AA  
                             u3860 0649                               u2981 02B8  
                             u2893 01AB                               u2885 0177  
                             u3909 06AF                               u3861 0648  
                             u3845 0613                               u2982 02BF  
                             u3870 0669                               u3846 0614  
                             u3790 05A6                               u2983 02C6  
                             u2975 02A7                               u3847 0619  
                             u3791 05A5                               u3880 0671  
                             u3848 061A                               u3881 0670  
                             u3849 061F                               _PIR1 000C  
                             i1l74 17C1                               u3890 0690  
                             u2995 02C8                               u3891 068F  
                             u3875 065C                               u3876 065D  
                             u3877 0662                               u3878 0663  
                             u3879 0668                               _TMR1 000E  
                 __end_of_I2C_NACK 1695   __end_of_I2C_Master_RepeatedStart 1633  
                             _main 058C                         _DelayCount 00B2  
                             btemp 007E        __size_of_SCH_Dispatch_Tasks 006C  
          Calc_avg_reading@avg_arr 002C                               start 0012  
                 __end_of_ADC_init 16B5              __size_of_SSD_turn_off 000B  
                  ___fldiv@new_exp 0061                    EEPROM_Write@add 0022  
                ___bmul@multiplier 0022                        _SYSTEM_init 170D  
             ?_Temp_Sens_Task_init 0070                              ??_ISR 0076  
             __end_of_EEPROM_Write 0846                   ?_I2C_Master_Init 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                 __end_of_LED_init 1663                      ___fltol@sign1 006D  
                            ?_main 0070                    __end_of___fldiv 058C  
                  __end_of___awdiv 0B00                    __end_of___awmod 0A37  
                  __end_of___flmul 03AF                    __end_of___fltol 0CEE  
                  ___awdiv@divisor 0020                              _T1CON 0010  
                  __end_of___lwdiv 08F7                              i1l323 0D90  
                            i1l694 16C9                              u3435n 0F4E  
                            u3435o 0F53                              u3465n 0F95  
                            u3465o 0F9A                    ___awdiv@counter 0024  
                            u3485n 0FC4                              u3485o 0FC9  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                 __size_of_SCH_Start 0002  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISD 0088  
             __end_of_DISPLAY_TASK 098D                  ??_SCH_Update_Task 0073  
           __size_of_I2C_Read_Byte 0017                 __size_of_TMR1_init 0011  
                            fpbase 0044                       _SSD_turn_off 1611  
                 __end_ofi1___bmul 16CA                        ?_TMR1_start 0070  
                            pclath 000A                  ?_TMR1_OVFINT_init 0070  
                 __end_of_SSD_init 15ED                              status 0003  
                            wtemp0 007E                 ??_TMR1_OVFINT_init 0020  
          __end_of_SCH_Delete_Task 0A97                   EEPROM_Write@data 0024  
                   _Temp_Sens_Task 0EFE               __size_of_EEPROM_Read 0049  
                  __initialization 0015                   ??_ADC_get_Sample 0022  
              __size_of_GOTO_SLEEP 0009              ??_Temp_Sens_Task_init 0020  
                     __end_of_main 06FF                 _SYSTEM_UPDATE_init 161C  
                __end_of_LM35_init 1607                 _DOWN_switch_update 087B  
                           ??_main 00E2           Calc_avg_reading@sum_temp 002A  
              ?_SYSTEM_UPDATE_init 0070                        ?_SSD_update 0070  
         __end_of_UP_switch_update 07F3                          ??_LED_off 0020  
                ?_I2C_Master_Start 0070                          ??_LED_tog 0020  
                ?_I2C_Master_Write 0070                   _EXT_INT_RB0_init 1607  
                 ??_EXT_INT_RB0_EN 0020                ?_DOWN_switch_update 0070  
               ??_I2C_Master_Start 0020                             _ADCON0 001F  
                           _ADCON1 009F                 ??_I2C_Master_Write 0020  
              SCH_Add_Task@ptr_fun 0027                             _ADRESH 001E  
                           _ADRESL 009E                   ___awdiv@dividend 0022  
          __size_of_SSD_print_2dig 004F                             i1l3310 16BB  
                           i1l3312 16BF                             i1l3400 0CEE  
                           i1l3314 16C1                             i1l3306 16B6  
                           i1l3410 0CF9                             i1l3402 0CF4  
                           i1l3316 16C3                             i1l3308 16B7  
                           i1l3412 0D0B                             i1l3420 0D86  
                           i1l3404 0CF8                             i1l3318 16C8  
                           i1l3422 0D8A                             i1l3414 0D23  
                           i1l3416 0D4C                             i1l3418 0D71  
                           i1l3480 17A5                             i1l3482 17B1  
                           i1l3476 179C                             i1l3478 17A0  
                           _INTCON 000B                             _LED_on 15A9  
                           u365_20 16BB                             u365_21 16BA  
                           u366_20 16C8                             u366_21 16C7  
                           u375_20 0D0B                             u375_21 0D0A  
                           u376_20 0D23                             u376_21 0D22  
                           u377_20 0D4C                             u393_20 17A0  
                           u377_21 0D4B                             u393_21 179F  
                           u378_20 0D90                             u378_21 0D8F  
                           u394_25 17A8                             u395_20 17B1  
                           u395_21 17B0               __size_of_heater_init 000C  
                           u396_20 17B9                             u396_21 17B7  
                           u397_20 17BA             __end_of_Temp_Sens_Task 1000  
                           _SSPADD 0093                             _SSPCON 0014  
                           _SSPBUF 0013                   __end_of__fptable 004E  
                 __end_of___xxtofl 0EFE               ??_SYSTEM_UPDATE_init 0020  
                     _System_state 00E8                  __end_of_SCH_Start 15A9  
       ??_SYSTEM_STATE_UPDATE_TASK 0025               ??_DOWN_switch_update 0020  
         _I2C_Master_RepeatedStart 1627              __end_of_SCH_init_TMR1 1800  
                           ___bmul 16F6                      _I2C_Read_Byte 16DF  
                        ??___fldiv 0057                          ??___awdiv 0024  
                        ??___awmod 0024                          ??___flmul 003D  
                        ??___fltol 00D2                  __end_of_TMR1_init 0812  
                        ??___lwdiv 0024             __size_of_keyboard_init 000D  
                 ___awdiv@quotient 0026                    ___awmod@divisor 0020  
              __size_of_TMR1_start 0004                    ___awmod@counter 0024  
                        ?_I2C_NACK 0070                             fptable 003F  
             __size_of_cooler_init 000C                             fptotal 0006  
                   SCH_init_TMR1@i 0024                  __end_of_SSD_codes 101A  
               __size_of__Umul8_16 0029                             saved_w 007E  
          __size_of_LM35_Read_Temp 00B1                          ?_ADC_init 0070  
                  _UP_Sw_blocked_G 00C2                       ___xxtofl@arg 0031  
                     ___xxtofl@exp 0030                       ___xxtofl@val 0027  
          __end_of__initialization 003B                    ?_Temp_Sens_Task 0070  
                        ?_LED_init 0070                   ?_SCH_Delete_Task 0070  
                       ___fltol@f1 0069                __size_of_SSD_update 0031  
            __size_of_EEPROM_Write 0034                ___bmul@multiplicand 0020  
            Calc_avg_reading@count 002D                      ?_SCH_Add_Task 0023  
                   ?_I2C_Read_Byte 0070                     __pcstackCOMMON 0070  
                     __pidataBANK1 15B9                  SCH_Add_Task@Delay 0023  
                SCH_Add_Task@Index 0028                          ?i1___bmul 0070  
            __size_of_DISPLAY_TASK 004D                          ?_SSD_init 0070  
                       ??_I2C_NACK 0020                       ??_GOTO_SLEEP 0020  
               __size_of_heater_on 0004                         ??_ADC_init 0020  
        SCH_Delete_Task@Task_Index 0023                   i1___bmul@product 0071  
               __size_of_cooler_on 0004                      _keyboard_init 07F3  
                     _EEPROM_Write 0812                         __pbssBANK1 00A0  
                          ?_LED_on 0070                 _First_Reading_flag 00BD  
                       ??_LED_init 0020                  SSD_print_2dig@val 002A  
                   ??_SCH_Add_Task 0027                  __end_of__Umul8_16 176B  
                       __pmaintext 058C          __size_of_Calc_avg_reading 0035  
                     _DISPLAY_TASK 0940                       ?_SYSTEM_init 0070  
                          ?___bmul 0020                 __end_of_GOTO_SLEEP 15FE  
                       __pintentry 0004                    _SCH_Update_Task 0CEE  
                       ??i1___bmul 0071                         _heater_off 15DE  
                       ??_SSD_init 0020                  _DOWN_Sw_blocked_G 00C1  
                        ?___xxtofl 0027                            _LED_off 15C9  
                          _LED_tog 15D0                     ?_keyboard_init 0070  
                          _SSPCON2 0091                         _cooler_off 15D7  
                   _SSD_print_2dig 098D                            _SSPSTAT 0094  
                       __stringtab 1000                       ??_TMR1_start 0020  
       __end_of_SCH_Dispatch_Tasks 0B6C                    __size_of_LED_on 0004  
                  ??_I2C_Read_Byte 0020                  __end_of_heater_on 15B5  
         __end_of_EXT_INT_RB0_init 1611                    __size_of___bmul 0017  
                 _LED_heating_time 00BC                            ___fldiv 03AF  
                          ___awdiv 0A97                            ___awmod 09DC  
                          ___flmul 004E                            ___fltol 0C5A  
                __end_of_cooler_on 15B1                            ___lwdiv 08B1  
        __size_of_TMR1_OVFINT_init 000C                            __ptext1 170D  
                          __ptext2 16CA                            __ptext3 166F  
                          __ptext4 1663                            __ptext5 15FE  
                          __ptext6 16A2                            __ptext7 1657  
                          __ptext8 161C                            __ptext9 07F3  
               __end_of_TMR1_start 15B9                       ??_SSD_update 0020  
                     __size_of_ISR 0032                          _LM35_init 15FE  
           _UP_Sw_press_duration_G 00C4                         ??___xxtofl 002B  
                 ___awmod@dividend 0022                     _LM35_Read_Temp 0D91  
                ?_UP_switch_update 0070                i1___bmul@multiplier 0072  
         __size_of_I2C_Master_Init 000D             __end_of_SSD_print_2dig 09DC  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 000C  
               ??_UP_switch_update 0020                            clrloop0 15EE  
             end_of_initialization 003B         ??_I2C_Master_RepeatedStart 0020  
                    ??_EEPROM_Read 0024        __end_of_Temp_Sens_Task_init 16DF  
        __size_of_I2C_Master_Start 000C          __size_of_I2C_Master_Write 001B  
          __end_of_SCH_Update_Task 0D91                 __end_of_SSD_update 179C  
                        _SCH_Start 15A7                          _SCH_tasks 00A0  
                      ?_heater_off 0070             __end_of_LM35_Read_Temp 0E42  
                        _TMR1_init 0801                         ?_LM35_init 0070  
                    ___xxtofl@sign 002F                    ??_keyboard_init 0020  
             __end_of_SCH_Add_Task 0C5A                  __size_of_I2C_NACK 000D  
                        _TRISCbits 0087                    ?_SSD_print_2dig 0070  
                      ___fldiv@grs 0063                        ___fldiv@rem 005C  
                 ??_Temp_Sens_Task 00DE                      ??_heater_init 0020  
                        _SSD_codes 1006                        ?_cooler_off 0070  
                   _Timeout_button 00B8                  __size_of_ADC_init 0013  
                      ___flmul@grs 0043                     __end_of_LED_on 15AD  
      __size_of_SYSTEM_UPDATE_init 000B                     _blinking_state 00B6  
                 _Calc_avg_reading 0846                  __size_of_LED_init 000C  
      __size_of_DOWN_switch_update 0036                __end_of_EEPROM_Read 0940  
                       ?_SCH_Start 0070                     __end_of___bmul 170D  
             __size_of_SYSTEM_init 001A                      ??_cooler_init 0020  
                 _UP_SW_pressed_st 007D                         ?_TMR1_init 0070  
                  ?_LM35_Read_Temp 0070            __size_of_ADC_get_Sample 0074  
__size_of_SYSTEM_STATE_UPDATE_TASK 00BE                  __size_ofi1___bmul 0015  
        ?_SYSTEM_STATE_UPDATE_TASK 0070                start_initialization 0015  
                __size_of_SSD_init 0008                        __end_of_ISR 17CE  
               SCH_Add_Task@Period 0025             __size_of_SCH_init_TMR1 0032  
                         ??_LED_on 0020                  ??_I2C_Master_Init 0020  
                ??_I2C_Master_Wait 0020                  ??_I2C_Master_Stop 0020  
          SCH_Dispatch_Tasks@Index 006F                __end_of_heater_init 167B  
              __size_of_heater_off 0007            __size_of_EXT_INT_RB0_EN 0006  
            _Heating_Cooling_state 00BE                   ?_SCH_Update_Task 0070  
                         ??___bmul 0021                          __Umul8_16 1742  
                 _TMR1_OVFINT_init 164B                        __pdataBANK1 00E6  
         __size_of_SCH_Delete_Task 0060                __size_of_cooler_off 0007  
                      ??_LM35_init 0020                          ___fldiv@a 004F  
                        ___fldiv@b 0053                          ___flmul@a 0039  
                        ___flmul@b 0035                           ?_LED_off 0070  
                      __pbssCOMMON 007B                           ?_LED_tog 0070  
                        ___latbits 0002               _ON_OFF_SW_pressed_st 00C5  
                    __pcstackBANK0 0020                      __pcstackBANK1 00D2  
              __end_of_cooler_init 166F                    SSD_update@digit 007B  
                __size_of__fptable 000F                  __size_of___xxtofl 00BC  
                    ?_SSD_turn_off 0070                        _EEPROM_Read 08F7  
             SCH_Update_Task@Index 0075                   _I2C_Master_Start 1633  
      Temp_Sens_Task@reading_count 00BA                   _I2C_Master_Write 1727  
                 ___lwdiv@dividend 0022                  ?_EXT_INT_RB0_init 0070  
                        __pfunctab 003F                      _SCH_init_TMR1 17CE  
               _SCH_Dispatch_Tasks 0B00                           ?___fldiv 004F  
                         ?___awdiv 0020                        ??_SCH_Start 0020  
                         ?___awmod 0020                           ?___flmul 0035  
                         ?___fltol 0069                         ?__Umul8_16 0020  
                         ?___lwdiv 0020                 ??_EXT_INT_RB0_init 0020  
                        _heater_on 15B1               I2C_Master_Write@Data 0021  
                        __pstrings 1000              __size_of_SCH_Add_Task 007A  
                        _cooler_on 15AD                        ??_TMR1_init 0020  
              ?_SCH_Dispatch_Tasks 0070                           _I2C_NACK 1688  
                _DISPLAY_TASK_init 15BD                       _readings_arr 00C8  
                         _ADC_init 16A2                 ?_DISPLAY_TASK_init 0070  
                   ??_SSD_turn_off 0020                   ___lwdiv@quotient 0024  
                      _heater_init 166F                  interrupt_function 0004  
              ??_DISPLAY_TASK_init 0020                _LM35_Read_Temp$1135 00DA  
             ??_SCH_Dispatch_Tasks 00E0                          clear_ram0 15ED  
                         _LED_init 1657          __size_of_UP_switch_update 0036  
            i1___bmul@multiplicand 0070                           _PIR1bits 000C  
            __end_of_I2C_Read_Byte 16F6                       _SCH_Add_Task 0BE0  
                   ?_SCH_init_TMR1 0070                          _temp_in_C 00C0  
                       ?_heater_on 0070                           _SSD_Data 00E6  
                      _cooler_init 1663                           i1___bmul 16B5  
                     ??_heater_off 0020                        __stringbase 1005  
                 ??_SSD_print_2dig 0028          __end_of_DISPLAY_TASK_init 15C3  
                       ?_cooler_on 0070                           _SSD_init 15E5  
                   _ADC_get_Sample 0B6C                  ??_SCH_Delete_Task 0023  
                 __size_of_LED_off 0007           __end_of_Calc_avg_reading 087B  
                 __size_of_LED_tog 0007                 _DOWN_SW_pressed_st 007C  
                     ??_cooler_off 0020           _DOWN_Sw_press_duration_G 00C3  
                _Read_Button_state 00B9                    fp__DISPLAY_TASK 004B  
                   _EXT_INT_RB0_EN 15C3                 __end_of_heater_off 15E5  
                         _Set_temp 00C6   __end_of_SYSTEM_STATE_UPDATE_TASK 07BD  
     __size_of_Temp_Sens_Task_init 0015                   ??_LM35_Read_Temp 00D6  
                      ??__Umul8_16 0022  __size_of_I2C_Master_RepeatedStart 000C  
                 __size_of___fldiv 01DD                   __size_of___awdiv 0069  
                 __size_of___awmod 005B                   __size_of___flmul 0361  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___fltol 0094  
                 __size_of___lwdiv 0046             __end_of_ADC_get_Sample 0BE0  
       __1st_RUNTIME_CHECK_PATTERN 00E9                 __end_of_cooler_off 15DE  
               __end_of__stringtab 1006                           __fptable 003F  
                  _I2C_Master_Init 1695                           ___xxtofl 0E42  
                  _I2C_Master_Wait 167B                    _I2C_Master_Stop 163F  
        ADC_get_Sample@ADC_channel 0026                    ___lwdiv@divisor 0020  
                  ___lwdiv@counter 0026                           __ptext10 1695  
                         __ptext11 1607                           __ptext20 0B00  
                         __ptext12 15C3                           __ptext21 0940  
                         __ptext13 15BD                           __ptext30 0C5A  
                         __ptext22 06FF                           __ptext14 15E5  
                         __ptext31 004E                           __ptext23 0EFE  
                         __ptext15 17CE                           __ptext40 07BD  
                         __ptext32 1742                           __ptext24 15B1  
                         __ptext16 15B5                           __ptext41 0812  
                         __ptext33 03AF                           __ptext25 15DE  
                         __ptext17 0801                           __ptext50 16F6  
                         __ptext42 087B                           __ptext34 0B6C  
                         __ptext26 15AD                           __ptext18 164B  
                         __ptext51 15F5                           __ptext43 0A37  
                         __ptext35 15D0                           __ptext27 15D7  
                         __ptext19 15A7                           __ptext60 179C  
                         __ptext52 08F7                           __ptext44 1611  
                         __ptext36 15A9                           __ptext28 0D91  
                         __ptext61 0CEE                           __ptext53 16DF  
                         __ptext45 098D                           __ptext37 15C9  
                         __ptext29 0E42                           __ptext62 16B5  
                         __ptext54 1688                           __ptext46 09DC  
                         __ptext38 0846                           __ptext55 1727  
                         __ptext47 0A97                           __ptext39 08B1  
                         __ptext56 163F                           __ptext48 176B  
                         __ptext57 1633                           __ptext49 0BE0  
                         __ptext58 1627                           __ptext59 167B  
            __end_of_keyboard_init 0800                      ?_EEPROM_Write 0022  
         __end_of_TMR1_OVFINT_init 1657             __end_of_EXT_INT_RB0_EN 15C9  
       __end_of_SYSTEM_UPDATE_init 1627                      __size_of_main 0173  
       __end_of_DOWN_switch_update 08B1                    ??_SCH_init_TMR1 0024  
                    ?_DISPLAY_TASK 0070                      ??_SYSTEM_init 0020  
             __end_of_SSD_turn_off 161C                        ??_heater_on 0020  
                  ?_ADC_get_Sample 0020                        ??_cooler_on 0020  
       __size_of_DISPLAY_TASK_init 0006                         _ERROR_Code 00BF  
         __end_of_I2C_Master_Start 163F           __end_of_I2C_Master_Write 1742  
                       _GOTO_SLEEP 15F5                  _SSD_blinking_time 00B7  
                   ??_EEPROM_Write 0025                      _avg_temp_in_C 00BB  
                         intlevel1 003F                    ?_EXT_INT_RB0_EN 0070  
                     ?_EEPROM_Read 0022                   _UP_switch_update 07BD  
                   ??_DISPLAY_TASK 002B            __size_of_Temp_Sens_Task 0102  
                        stringcode 1000                  fp__Temp_Sens_Task 0045  
          __end_of_I2C_Master_Init 16A2                         _SLEEP_flag 00C7  
          __end_of_I2C_Master_Wait 1688            __end_of_I2C_Master_Stop 164B  
         _SYSTEM_STATE_UPDATE_TASK 06FF           __size_of_SCH_Update_Task 00A3  
      fp__SYSTEM_STATE_UPDATE_TASK 0048                __end_of_SYSTEM_init 1727  
           __Umul8_16@multiplicand 0020                         _OPTION_REG 0081  
                         stringdir 1000          __size_of_EXT_INT_RB0_init 000A  
                         stringtab 1000                        _SSPCON2bits 0091  
                     ?_heater_init 0070                         _TMR1_start 15B5  
                  EEPROM_Read@Data 0024               __Umul8_16@multiplier 0028  
                   EEPROM_Read@add 0022                  __Umul8_16@product 0024  
